name: Hexo Deploy

# 只监听 source 分支的改动
on:
  push:
    branches:
      - main

# 自定义环境变量
env:
  POST_ASSET_IMAGE_CDN: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 获取博客源码和主题
      - name: Checkout
        uses: actions/checkout@v2

      # 这里用的是 Node.js 14.x
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14'

      # 设置 yarn 缓存，npm 的话可以看 actions/cache@v2 的文档示例
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Use yarn cache
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # 安装依赖
      - name: Install dependencies
        run: |
          yarn install --prefer-offline

      # 从之前设置的 secret 获取部署私钥
      - name: Set up environment
        env:
          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
        run: |
          sudo timedatectl set-timezone "Asia/Shanghai"
          mkdir -p ~/.ssh
          echo "$DEPLOY_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan github.com >> ~/.ssh/known_hosts

      # 生成并部署
      - name: Generate
        run: |
          npx hexo deploy --generate
      
#       - name: Deploy # 部署到仓库 gh-pages 分支
#         uses: peaceiris/actions-gh-pages@v2
#         env:
#           ACTIONS_DEPLOY_KEY: ${{ secrets.ACTIONS_DEPLOY_KEY }}
#           PUBLISH_BRANCH: gh-pages
#           PUBLISH_DIR: ./public
          
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          # github_token: ${{ secrets.GITHUB_TOKEN }} # 这里的 ACTIONS_DEPLOY_KEY 则是上面设置 Private Key的变量名
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          # external_repository: Vict0r-Chen/v1ctor
          external_repository: Vict0r-Chen/blog # Pages 远程仓库 
          PUBLISH_BRANCH: main
#          publish_dir: ./public
#           keep_files: false # remove existing files

      - name: Flush CDN
        env:
          SECRET_ID: ${{ secrets.SECRETID }}      # 传入鉴权信息
          SECRET_KEY: ${{ secrets.SECRETKEY }}
        run: |                                    # 安装 sdk 并运行刷新脚本
          pip install --upgrade tencentcloud-sdk-python
          python flush-dns.py -i $SECRET_ID -k $SECRET_KEY