{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/robots.txt","path":"robots.txt","modified":0,"renderable":0},{"_id":"source/download/patch.zip","path":"download/patch.zip","modified":0,"renderable":0},{"_id":"source/images/202108/2021081601.png","path":"images/202108/2021081601.png","modified":0,"renderable":0},{"_id":"source/images/202108/2021081602.png","path":"images/202108/2021081602.png","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/avatar.png","path":"images/avatar.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"themes/next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/anime.min.js","path":"lib/anime.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"f03fa860173aae99ed6bdbd0795e2f16bbe91cdf","modified":1629011859288},{"_id":"source/robots.txt","hash":"4e9b8654d9e220bcaa011a1395ea1223d0cd41ec","modified":1658501649568},{"_id":"source/_drafts/Node-Hid在electron中偶现的闪退-crash-问题.md","hash":"b464c6628aa72d7cb8d12e0c1903921de12a6328","modified":1658501649553},{"_id":"source/_drafts/十年社会人的经验之谈.md","hash":"7acbe35f9e9052f9385e893ed891244a9e42b026","modified":1642041922431},{"_id":"source/_posts/AdvanceInstaller-19-2-安装包及激活工具分享.md","hash":"e70dfb37363e21f726ff48030cc281f2044f7b96","modified":1658501649554},{"_id":"source/_posts/IOS中通过快捷捷径打开健康码或场所码.md","hash":"fed1013f80c1d5da3b1a8f3665fd369515517181","modified":1658501649554},{"_id":"source/_drafts/hello-world.md","hash":"acad91ace80b80295b11a9b7ad4c29a2dcfdd8fb","modified":1629014636840},{"_id":"source/_posts/UWP判断当前运行平台是XBox还是PC.md","hash":"eb9381ab60ad9cd26fa1f008a6f3ca8baa9f4c04","modified":1658507416375},{"_id":"source/_posts/WPF中不同文字显示不同颜色-高亮.md","hash":"4dbbe9ec0482d4f12642560bd9a4a3ebad9756c4","modified":1658501649564},{"_id":"source/_posts/Windows批量更改文件名（超简单PowerShell命令）.md","hash":"953859b1f768f41f128e7ddef90f5eec83f0e835","modified":1658501649564},{"_id":"source/_posts/安装Framework或远程调试工具时出现-处理证书链-但是在不受信任提供程序信任的根证书中终止.md","hash":"3ce01b043611108d6e4f20150d7faf7fabf87172","modified":1658501649565},{"_id":"source/_posts/序.md","hash":"0715f06043e95f4cd3c028573ef3d23121042545","modified":1658501649565},{"_id":"source/_posts/UWP判断当前运行平台是XBox还是PC/p1.png","hash":"e8d03c70a56521c49ca549c87600e04e85986c85","modified":1658504831831},{"_id":"source/_posts/WPF中不同文字显示不同颜色-高亮/20220113_01.png","hash":"d5e7ae1d021e7ca6cfee718bc71e7c327a51c223","modified":1642041922433},{"_id":"source/_posts/IOS中通过快捷捷径打开健康码或场所码/p1.png","hash":"314fe3bbe999500aa9a9df034971248646cd886c","modified":1658501649556},{"_id":"source/_posts/IOS中通过快捷捷径打开健康码或场所码/p3.png","hash":"c555293096f92bdb501529943aadd450b232170c","modified":1658501649559},{"_id":"source/_posts/安装Framework或远程调试工具时出现-处理证书链-但是在不受信任提供程序信任的根证书中终止/2021081602.png","hash":"c28e81f9da9e23e8018ab1d36e84983651b251f2","modified":1642041922439},{"_id":"source/images/202108/2021081602.png","hash":"c28e81f9da9e23e8018ab1d36e84983651b251f2","modified":1642041922442},{"_id":"source/_posts/IOS中通过快捷捷径打开健康码或场所码/p5.png","hash":"bdd2837ff93ea5ea8ba53a54f9104d1203e6a93b","modified":1658501649564},{"_id":"source/_posts/IOS中通过快捷捷径打开健康码或场所码/p2.png","hash":"a9bea37a4c681365ce819e502d7a4aadc21d8c4e","modified":1658501649558},{"_id":"source/_posts/安装Framework或远程调试工具时出现-处理证书链-但是在不受信任提供程序信任的根证书中终止/2021081601.png","hash":"b20633792dc6213f917997ef1a30b38f646ca3aa","modified":1642041922437},{"_id":"source/download/patch.zip","hash":"07c604eff5b685a5522af5f66728b2e913525079","modified":1658501649568},{"_id":"source/images/202108/2021081601.png","hash":"b20633792dc6213f917997ef1a30b38f646ca3aa","modified":1642041922441},{"_id":"source/_posts/IOS中通过快捷捷径打开健康码或场所码/p4.png","hash":"56aff5dd2b6421f85af059c9e2844ffa6561ba97","modified":1658501649561},{"_id":"themes/next/.editorconfig","hash":"731c650ddad6eb0fc7c3d4a91cad1698fe7ad311","modified":1658501649569},{"_id":"themes/next/.eslintrc.json","hash":"d3c11de434171d55d70daadd3914bc33544b74b8","modified":1658501649570},{"_id":"themes/next/.gitattributes","hash":"3e00e1fb043438cd820d94ee3dc9ffb6718996f3","modified":1658501649570},{"_id":"themes/next/.gitignore","hash":"83418530da80e6a78501e1d62a89c3bf5cbaec3d","modified":1658501649570},{"_id":"themes/next/.stylintrc","hash":"6259e2a0b65d46865ab89564b88fc67638668295","modified":1658501649571},{"_id":"themes/next/.travis.yml","hash":"379f31a140ce41e441442add6f673bf397d863ea","modified":1658501649571},{"_id":"themes/next/LICENSE.md","hash":"0a9c7399f102b4eb0a6950dd31264be421557c7d","modified":1658501649571},{"_id":"themes/next/README.md","hash":"7d56751b580d042559b2acf904fca4b42bcb30a7","modified":1658501649572},{"_id":"themes/next/_config.yml","hash":"ee5b7843dfa54ae50580865565f841b003687425","modified":1658501649572},{"_id":"themes/next/crowdin.yml","hash":"4a53f5985e545c635cb56b2a57ed290cb8cf8942","modified":1658501649572},{"_id":"themes/next/gulpfile.js","hash":"0c76a1ac610ee8cbe8e2cc9cca1c925ffd0edf98","modified":1658501649573},{"_id":"themes/next/package.json","hash":"b099e7cea4406e209130410d13de87988ba37b2a","modified":1658501649603},{"_id":"themes/next/languages/de.yml","hash":"15078b7ede1b084e8a6a15d271f0db9c325bd698","modified":1658501649573},{"_id":"themes/next/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1658501649574},{"_id":"themes/next/languages/en.yml","hash":"dbb64776f9c001c54d0058256c415a9a0724ed5d","modified":1658501649574},{"_id":"themes/next/languages/es.yml","hash":"f064c793d56a5e0f20cda93b6f0e355044efc7d8","modified":1658501649574},{"_id":"themes/next/languages/fa.yml","hash":"6c0a7d5bcc26eb45a9f3e02f13117c668e77fffd","modified":1658501649574},{"_id":"themes/next/languages/fr.yml","hash":"3e2f89d4bb4441d33ecc7b5a4ee114f627603391","modified":1658501649575},{"_id":"themes/next/languages/hu.yml","hash":"0ea89ffaefd02a10494995f05a2a59d5e5679a28","modified":1658501649576},{"_id":"themes/next/languages/id.yml","hash":"7599bb0ecf278beb8fde3d17bfc148a3241aef82","modified":1658501649576},{"_id":"themes/next/languages/it.yml","hash":"46222f468e66789e9ba13095809eb5e5b63edf30","modified":1658501649576},{"_id":"themes/next/languages/ja.yml","hash":"bf279d0eb1911806d01a12f27261fbc76a3bb3f9","modified":1658501649576},{"_id":"themes/next/languages/ko.yml","hash":"af4be6cb394abd4e2e9a728418897d2ed4cc5315","modified":1658501649577},{"_id":"themes/next/languages/nl.yml","hash":"9749cf90b250e631dd550a4f32ada3bb20f66dd0","modified":1658501649577},{"_id":"themes/next/languages/pt-BR.yml","hash":"69aa3bef5710b61dc9a0f3b3a8f52f88c4d08c00","modified":1658501649577},{"_id":"themes/next/languages/pt.yml","hash":"f6606dd0b916a465c233f24bd9a70adce34dc8d6","modified":1658501649578},{"_id":"themes/next/languages/ru.yml","hash":"012abc694cf9de281a0610f95f79c594f0a16562","modified":1658501649578},{"_id":"themes/next/languages/tr.yml","hash":"c4e9ab7e047ae13a19f147c6bec163c3ba2c6898","modified":1658501649578},{"_id":"themes/next/languages/uk.yml","hash":"69ef00b1b8225920fcefff6a6b6f2f3aad00b4ce","modified":1658501649578},{"_id":"themes/next/languages/vi.yml","hash":"6a578cc28773bd764f4418110500478f185d6efa","modified":1658501649579},{"_id":"themes/next/languages/zh-CN.yml","hash":"81d73e21402dad729053a3041390435f43136a68","modified":1658501649579},{"_id":"themes/next/languages/zh-HK.yml","hash":"92ccee40c234626bf0142152949811ebe39fcef2","modified":1658501649580},{"_id":"themes/next/languages/zh-TW.yml","hash":"cf0740648725983fb88409d6501876f8b79db41d","modified":1658501649580},{"_id":"themes/next/languages/ar.yml","hash":"abcf220bd615cec0dd50e4d98da56580169d77e1","modified":1658501649573},{"_id":"themes/next/layout/_layout.swig","hash":"9554bd0f5c5a0438aa7b64065be5561c374d260e","modified":1658501649580},{"_id":"themes/next/layout/archive.swig","hash":"d9bca77f6dcfef71e300a294f731bead11ce199f","modified":1658501649602},{"_id":"themes/next/layout/category.swig","hash":"c546b017a956faaa5f5643c7c8a363af7ac9d6b9","modified":1658501649602},{"_id":"themes/next/layout/index.swig","hash":"8dfd96fb6f833dd5d037de800813105654e8e8e6","modified":1658501649603},{"_id":"themes/next/layout/page.swig","hash":"357d916694d4c9a0fd1140fa56d3d17e067d8b52","modified":1658501649603},{"_id":"themes/next/layout/post.swig","hash":"5f0b5ba2e0a5b763be5e7e96611865e33bba24d7","modified":1658501649603},{"_id":"themes/next/layout/tag.swig","hash":"d44ff8755727f6532e86fc9fc8dc631200ffe161","modified":1658501649603},{"_id":"themes/next/scripts/renderer.js","hash":"e3658eea97b1183ee2e9f676231e53f7994741f6","modified":1658501649609},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"30ade8c806d7826cc50a4a3e46a9e6213fddf333","modified":1658501649581},{"_id":"themes/next/layout/_macro/post.swig","hash":"c3fd56bac90ce45a0c79ddfe68beb223ad0d72b4","modified":1658501649581},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"5bffdb1448caca7db7b1f84e1693e6657a106d50","modified":1658501649582},{"_id":"themes/next/layout/_partials/comments.swig","hash":"142efb4c6b73d8f736f6784804b40d5871333172","modified":1658501649582},{"_id":"themes/next/layout/_partials/footer.swig","hash":"e031914c98f082d918ece4c35fdd0a5be1c4e845","modified":1658501649582},{"_id":"themes/next/layout/_partials/languages.swig","hash":"c3ea82604a5853fb44c5f4e4663cbe912aa5dcf8","modified":1658501649586},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"2de77d533c91532a8a4052000244d0c1693370df","modified":1658501649587},{"_id":"themes/next/layout/_partials/widgets.swig","hash":"5392dcbb504266f0f61d5b8219914068ef9cdc25","modified":1658501649589},{"_id":"themes/next/layout/_third-party/baidu-push.swig","hash":"28b0a7e843ec4365db1963646659a153753cd746","modified":1658501649594},{"_id":"themes/next/layout/_third-party/index.swig","hash":"c6b63cbc80938e6e09578b8c67e01adf13a9e3bd","modified":1658501649598},{"_id":"themes/next/layout/_third-party/quicklink.swig","hash":"5ae5adcd6f63ed98b2071e4f7e5e38c4d7d24e1b","modified":1658501649599},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"269102fc5e46bd1ce75abdcce161f0570ae70e2f","modified":1658501649600},{"_id":"themes/next/layout/_scripts/index.swig","hash":"1822eaf55bbb4bec88871c324fc18ad95580ccb4","modified":1658501649589},{"_id":"themes/next/layout/_scripts/noscript.swig","hash":"7b9e0f776a5be6c3f95bc7f394e1424ba02ba93b","modified":1658501649590},{"_id":"themes/next/layout/_scripts/pjax.swig","hash":"ccff5a773644d33ff22f6b45b6734f52b048f22b","modified":1658501649591},{"_id":"themes/next/layout/_scripts/three.swig","hash":"6b092c6d882b2dfa5273e1b3f60b244cb7c29fcd","modified":1658501649592},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"244ca2d74ee0d497c87572c6a26b43c62a952673","modified":1658501649592},{"_id":"themes/next/scripts/events/index.js","hash":"5c355f10fe8c948a7f7cd28bd8120adb7595ebde","modified":1658501649604},{"_id":"themes/next/scripts/filters/default-injects.js","hash":"ad321db012cea520066deb0639335e9bc0dcc343","modified":1658501649607},{"_id":"themes/next/scripts/filters/front-matter.js","hash":"305d03c1e45782988809298c3e3b3c5d5ee438aa","modified":1658501649607},{"_id":"themes/next/scripts/filters/locals.js","hash":"a5e7d05d3bd2ae6dcffad5a8ea0f72c6e55dbd02","modified":1658501649607},{"_id":"themes/next/scripts/filters/minify.js","hash":"21196a48cb127bf476ce598f25f24e8a53ef50c2","modified":1658501649607},{"_id":"themes/next/scripts/filters/post.js","hash":"57f2d817578dd97e206942604365e936a49854de","modified":1658501649608},{"_id":"themes/next/scripts/helpers/engine.js","hash":"eb6b8bbc1dce4846cd5e0fac0452dbff56d07b5d","modified":1658501649608},{"_id":"themes/next/scripts/helpers/font.js","hash":"8fb1c0fc745df28e20b96222974402aab6d13a79","modified":1658501649608},{"_id":"themes/next/scripts/helpers/next-config.js","hash":"b8d7ddfa4baa9b8d6b9066a634aa81c6243beec9","modified":1658501649608},{"_id":"themes/next/scripts/helpers/next-url.js","hash":"4044129368d0e2811859a9661cad8ab47118bc32","modified":1658501649608},{"_id":"themes/next/scripts/tags/button.js","hash":"bb0e8abbc0a6d5b3a1a75a23976f2ac3075aab31","modified":1658501649609},{"_id":"themes/next/scripts/tags/caniuse.js","hash":"840536754121e0da5968f5ad235f29200fc5d769","modified":1658501649609},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"e2d0184bc4a557e1017395b80ff46880078d8537","modified":1658501649609},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"93ccd3f99d3cb42674f29183c756df63acb5d7f8","modified":1658501649609},{"_id":"themes/next/scripts/tags/label.js","hash":"fc83f4e1be2c34e81cb79938f4f99973eba1ea60","modified":1658501649610},{"_id":"themes/next/scripts/tags/mermaid.js","hash":"81134494ff0134c0dae1b3815caf6606fccd4e46","modified":1658501649610},{"_id":"themes/next/scripts/tags/note.js","hash":"1fdf4f95810fdb983bfd5ad4c4f13fedd4ea2f8d","modified":1658501649610},{"_id":"themes/next/scripts/tags/pdf.js","hash":"37b53661ad00a01a2ca7d2e4a5ad3a926073f8e2","modified":1658501649610},{"_id":"themes/next/scripts/tags/tabs.js","hash":"c70a4a66fd0c28c98ccb6c5d5f398972e5574d28","modified":1658501649610},{"_id":"themes/next/scripts/tags/video.js","hash":"944293fec96e568d9b09bc1280d5dbc9ee1bbd17","modified":1658501649610},{"_id":"themes/next/source/css/_colors.styl","hash":"11aef31a8e76f0f332a274a8bfd4537b73d4f88f","modified":1658501649611},{"_id":"themes/next/source/css/_mixins.styl","hash":"072a3fa473c19b20ccd7536a656cda044dbdae0a","modified":1658501649628},{"_id":"themes/next/source/css/main.styl","hash":"815ef30987d02f3d76dbe4b5ee3a72135a152678","modified":1658501649634},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1658501649635},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1658501649635},{"_id":"themes/next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1658501649635},{"_id":"themes/next/source/images/avatar.png","hash":"41e068061b881819c6cb5b39eec29c7e53c61a6b","modified":1658501649635},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1658501649636},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1658501649636},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1658501649636},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1658501649637},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1658501649637},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1658501649637},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1658501649637},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1658501649637},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1658501649637},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1658501649638},{"_id":"themes/next/source/js/algolia-search.js","hash":"6a813410e33824d7acc65a369a2983912bb3420c","modified":1658501649638},{"_id":"themes/next/source/js/bookmark.js","hash":"9f05fd3672789311dc0cf5b37e40dc654cb04a2a","modified":1658501649638},{"_id":"themes/next/source/js/local-search.js","hash":"cfa6a0f3f9c2bc759ee507668a21f4e8f250f42a","modified":1658501649638},{"_id":"themes/next/source/js/motion.js","hash":"d5aa1a08cdf3c8d1d8d550fb1801274cc41e5874","modified":1658501649639},{"_id":"themes/next/source/js/next-boot.js","hash":"250d8dcd6322e69e3fbadd0f3e37081c97b47c52","modified":1658501649639},{"_id":"themes/next/source/js/utils.js","hash":"26a82e46fdcadc7c3c2c56a7267284b61a26f7f3","modified":1658501649641},{"_id":"themes/next/source/lib/anime.min.js","hash":"960be51132134acd65c2017cc8a5d69cb419a0cd","modified":1658501649641},{"_id":"themes/next/layout/_partials/head/head-unique.swig","hash":"7d638e413f2548fc990c4a467dd03de6c81fc960","modified":1658501649583},{"_id":"themes/next/layout/_partials/head/head.swig","hash":"90cce9f407e9490756ba99580e3eb09f55b05eaa","modified":1658501649583},{"_id":"themes/next/layout/_partials/header/brand.swig","hash":"91056a6c98cca63ff8cc6956e531ee3faf4b8ad9","modified":1658501649585},{"_id":"themes/next/layout/_partials/header/index.swig","hash":"0dd316f153c492c0a03bd0273d50fa322bc81f11","modified":1658501649585},{"_id":"themes/next/layout/_partials/header/menu-item.swig","hash":"4baa86ca631168fc6388d27f4b1b501b40c877a8","modified":1658501649585},{"_id":"themes/next/layout/_partials/header/menu.swig","hash":"90d3eaba6fbe69bee465ddd67c467fd2c0239dc4","modified":1658501649585},{"_id":"themes/next/layout/_partials/header/sub-menu.swig","hash":"bed6cc2b48cf2655036ba39c9bae73a295228a4d","modified":1658501649586},{"_id":"themes/next/layout/_partials/page/breadcrumb.swig","hash":"91c0addb33006619faa4c32e5d66874e25f1e9b3","modified":1658501649586},{"_id":"themes/next/layout/_partials/page/page-header.swig","hash":"8d4e3dd0d3631ce0b21bc15c259f6ac886de631d","modified":1658501649587},{"_id":"themes/next/layout/_partials/post/post-copyright.swig","hash":"f2eb455c8bf13533427254f0c9b4b17b2498168b","modified":1658501649587},{"_id":"themes/next/layout/_partials/post/post-followme.swig","hash":"d8f785c062c6b0763a778bd4a252e6f5fee0e432","modified":1658501649587},{"_id":"themes/next/layout/_partials/post/post-footer.swig","hash":"ce712c110b5ce8aacba7a86b0558ff89700675c9","modified":1658501649587},{"_id":"themes/next/layout/_partials/post/post-related.swig","hash":"bc7b047a6246df07767373644b1637d91c3a88b1","modified":1658501649587},{"_id":"themes/next/layout/_partials/post/post-reward.swig","hash":"f349a226e5370075bb6924e60da8b0170c7cfcc1","modified":1658501649588},{"_id":"themes/next/layout/_partials/search/algolia-search.swig","hash":"98fd1f5df044f4534e1d4ca9ab092ba5761739a9","modified":1658501649588},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"128f7d679bb4d53b29203d598d217f029a66dee7","modified":1658501649588},{"_id":"themes/next/layout/_partials/search/index.swig","hash":"a6c761d5193cb6f22e9422dbbcf209e05471b0ed","modified":1658501649588},{"_id":"themes/next/layout/_partials/sidebar/site-overview.swig","hash":"7b2ef5db9615267a24b884388925de1e9b447c1f","modified":1658501649589},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"84adaadd83ce447fa9da2cff19006334c9fcbff9","modified":1658501649593},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b8819bd056f8a580c5556d4415836a906ed5d7a4","modified":1658501649593},{"_id":"themes/next/layout/_third-party/analytics/growingio.swig","hash":"91c2cb900c76224c5814eeb842d1d5f517f9bf05","modified":1658501649594},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"85b60e222712ca3b2c4dc2039de2dc36b8d82940","modified":1658501649594},{"_id":"themes/next/layout/_third-party/chat/chatra.swig","hash":"2642e8aef5afbe23a2a76efdc955dab2ee04ed48","modified":1658501649594},{"_id":"themes/next/layout/_third-party/chat/tidio.swig","hash":"fb94ee487d75e484e59b7fba96e989f699ff8a83","modified":1658501649595},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"9298e6d6c4a62a0862fc0f4060ed99779d7b68cb","modified":1658501649597},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"1b29b99fa921f12c25d3dc95facdf84ef7bb1b5c","modified":1658501649597},{"_id":"themes/next/layout/_third-party/comments/disqusjs.swig","hash":"a42f97eda3748583bac2253c47fe5dfa54f07b8f","modified":1658501649597},{"_id":"themes/next/layout/_third-party/comments/gitalk.swig","hash":"606ad14a29320157df9b8f33738282c51bb393d9","modified":1658501649598},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"3d91899ca079e84d95087b882526d291e6f53918","modified":1658501649598},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"ae2707d6e47582bb470c075649ec7bad86a6d5a9","modified":1658501649598},{"_id":"themes/next/layout/_third-party/math/index.swig","hash":"59df21fcfe9d0ada8cee3188cb1075529c1c3eb8","modified":1658501649599},{"_id":"themes/next/layout/_third-party/math/katex.swig","hash":"276f523e414d4aa7f350a8f2fd3df8a3d8ea9656","modified":1658501649599},{"_id":"themes/next/layout/_third-party/math/mathjax.swig","hash":"1f34b2d3c753a3589ab6c462880bd4eb7df09914","modified":1658501649599},{"_id":"themes/next/layout/_third-party/search/algolia-search.swig","hash":"fd726aad77a57b288f07d6998ec29291c67c7cbb","modified":1658501649600},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"58296a5c1883f26464c2a5ccf734c19f5fbf395a","modified":1658501649600},{"_id":"themes/next/layout/_third-party/search/swiftype.swig","hash":"aa6ab95b8b76611694613defb4bf25003d1b927f","modified":1658501649600},{"_id":"themes/next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"d2f0e4c598410ec33785abe302c7ea7492bb791a","modified":1658501649601},{"_id":"themes/next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"53a0760c75d5aaabb3ce8e8aa8e003510d59807f","modified":1658501649601},{"_id":"themes/next/layout/_third-party/statistics/firestore.swig","hash":"01d94354d07e72cad47100482068b6be69fcc033","modified":1658501649601},{"_id":"themes/next/layout/_third-party/statistics/index.swig","hash":"964cd6bac668cf6d211a2624fbef3948cfdece55","modified":1658501649601},{"_id":"themes/next/layout/_third-party/statistics/lean-analytics.swig","hash":"c171ea94e9afbba97f06856904264da331559463","modified":1658501649602},{"_id":"themes/next/layout/_third-party/tags/mermaid.swig","hash":"619338ddacf01e3df812e66a997e778f672f4726","modified":1658501649602},{"_id":"themes/next/layout/_third-party/tags/pdf.swig","hash":"5a223b60406cee7438cfe3a5e41d1284425aa7a5","modified":1658501649602},{"_id":"themes/next/layout/_scripts/pages/schedule.swig","hash":"34c05e9d73b0f081db70990c296b6d6a0f8ea2ca","modified":1658501649590},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"34495d408e8467555afee489500b8aad98c52079","modified":1658501649591},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"0b44f400ec00d2b5add5ee96c11d22465c432376","modified":1658501649591},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"0b44f400ec00d2b5add5ee96c11d22465c432376","modified":1658501649591},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"34495d408e8467555afee489500b8aad98c52079","modified":1658501649592},{"_id":"themes/next/scripts/events/lib/config.js","hash":"aefe3b38a22bc155d485e39187f23e4f2ee5680a","modified":1658501649604},{"_id":"themes/next/scripts/events/lib/injects-point.js","hash":"08496b71c9939718e7955704d219e44d7109247b","modified":1658501649604},{"_id":"themes/next/scripts/events/lib/injects.js","hash":"e73f697bb160b223fdde783237148be5f41c1d78","modified":1658501649604},{"_id":"themes/next/scripts/filters/comment/changyan.js","hash":"2f22f48f7370470cef78561a47c2a47c78035385","modified":1658501649605},{"_id":"themes/next/scripts/filters/comment/common.js","hash":"713056d33dbcd8e9748205c5680b456c21174f4e","modified":1658501649605},{"_id":"themes/next/scripts/filters/comment/default-config.js","hash":"0c3bea89d64bc12c1bbe6f208a83773c6fb5375a","modified":1658501649605},{"_id":"themes/next/scripts/filters/comment/disqus.js","hash":"3a80559df0b670ccb065ea9d3bb587d0b61be3a4","modified":1658501649606},{"_id":"themes/next/scripts/filters/comment/disqusjs.js","hash":"67cf90d9a2428c14eb113a64bdd213c22a019aef","modified":1658501649606},{"_id":"themes/next/scripts/filters/comment/gitalk.js","hash":"323a47df6ded894944a2647db44556d6163e67c4","modified":1658501649606},{"_id":"themes/next/scripts/filters/comment/livere.js","hash":"a4f3153ac76a7ffdf6cc70f52f1b2cc218ed393e","modified":1658501649607},{"_id":"themes/next/scripts/filters/comment/valine.js","hash":"851359f5ff90f733a9bd7fe677edbee8b8ac714c","modified":1658501649607},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"583ff1e7a2ca889f1f54eb0ca793894466823c7c","modified":1658501649633},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"5980abbbbeacd8541121f436fa414d24ad5e97c2","modified":1658501649633},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"c22b58af3327236ec54d5706501aa5a20e15012e","modified":1658501649634},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"4e33774b1fe6d0a51f3a428c54c5e600e83bf154","modified":1658501649634},{"_id":"themes/next/source/css/_variables/base.styl","hash":"ad680efdfb2f86546182bf3f59886efbcf3c1b2d","modified":1658501649634},{"_id":"themes/next/source/js/schemes/muse.js","hash":"a18559a9c332199efad0100cf84bb0c23fc0f17a","modified":1658501649639},{"_id":"themes/next/source/js/schemes/pisces.js","hash":"b85a6e2af1387fe64b51e7cd3e2da8616e6f5a3f","modified":1658501649640},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1658501649647},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1658501649647},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"510a6f0ba7485dd54ce347cca890ab52c4957081","modified":1658501649611},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"0534b329d279a6f255112b3305ff92c810f31724","modified":1658501649611},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"d17236df3b4d6def1e4e81133ef4729c390de3ac","modified":1658501649612},{"_id":"themes/next/source/css/_common/components/reading-progress.styl","hash":"c52648a7b09f9fe37858f5694fcc1ffc709ad147","modified":1658501649616},{"_id":"themes/next/source/css/_common/outline/mobile.styl","hash":"a2ee16cac29a82cfce26804c160286fcbee94161","modified":1658501649620},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"7a95c27762e1303bf06ee808c63f616cb192fcaf","modified":1658501649620},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5540c9259cb7895a5f10a289c7937e5470a7c134","modified":1658501649623},{"_id":"themes/next/source/css/_common/scaffolding/buttons.styl","hash":"45f4badac6ec45cf24355f6157aece1d4d3f1134","modified":1658501649623},{"_id":"themes/next/source/css/_common/scaffolding/comments.styl","hash":"4b068d0d898f4e624937503f0e1428993050bd65","modified":1658501649623},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"6d740699fb6a7640647a8fd77c4ea4992d8d6437","modified":1658501649625},{"_id":"themes/next/source/css/_common/scaffolding/pagination.styl","hash":"b619f39e18398422e0ac4999d8f042a5eaebe9cd","modified":1658501649626},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"43045d115f8fe95732c446aa45bf1c97609ff2a5","modified":1658501649626},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"f317d2e3886e94f5fbb8781c2e68edd19669ff58","modified":1658501649626},{"_id":"themes/next/source/css/_common/scaffolding/toggles.styl","hash":"20e0e3e3eba384930c022e21511214d244b4c9e7","modified":1658501649628},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"e342b8f8e11a3a6aa5a029912c9778c25bf5d135","modified":1658501649629},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"b9e87d32da24264bda247c1526afe140c858b0ef","modified":1658501649629},{"_id":"themes/next/source/css/_schemes/Mist/_layout.styl","hash":"12b265f82840f27112ca2b1be497677f20f87545","modified":1658501649629},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"716e8b0f056bf6393e6bc6969ac84598ab8e7a6f","modified":1658501649629},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expand.styl","hash":"e1c29b81a32273a0dedd926cda199a71aea72624","modified":1658501649630},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"c5142739e01e9f25c8b32b2209af85c787bb2b42","modified":1658501649630},{"_id":"themes/next/source/css/_schemes/Muse/_header.styl","hash":"8674bd88df076a1dfe4023ed6750ded1f5b00223","modified":1658501649630},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"49c76bc723d3952abb613d9d68398ed7305da999","modified":1658501649630},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"4b7f057dbb53efd7cbe7eac7835a793ab3cbb135","modified":1658501649630},{"_id":"themes/next/source/css/_schemes/Muse/_sidebar.styl","hash":"9898323ee5a7ac2a5d4f633c653112280beb2643","modified":1658501649631},{"_id":"themes/next/source/css/_schemes/Muse/_sub-menu.styl","hash":"2d3e05015796a790abd9d68957a5c698c0c9f9b6","modified":1658501649631},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"25c2a7930da14f023329df20f38df2728057fb4d","modified":1658501649631},{"_id":"themes/next/source/css/_schemes/Pisces/_header.styl","hash":"558794fced306339b98dc2b0ee7f0576802f1355","modified":1658501649631},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"5de34e1d8a290751641ae456c942410852d5e809","modified":1658501649631},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"0a9f0d9eb042595502d200fb8c65efb0e6c89aa9","modified":1658501649632},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"dc9318992ce2eb086ebaa2fe56b325e56d24098b","modified":1658501649632},{"_id":"themes/next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"b69ac38b9da8c9c1b7de696fdeea7f9d7705213a","modified":1658501649632},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"25c2a7930da14f023329df20f38df2728057fb4d","modified":1658501649632},{"_id":"themes/next/source/lib/font-awesome/css/all.min.css","hash":"82e34d28f8a1169b20b60101d5bb0446deba3514","modified":1658501649642},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1658501649645},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"18edddb2ffb3f85a68e4367f81e06c461e07bc25","modified":1658501649612},{"_id":"themes/next/source/css/_common/components/pages/breadcrumb.styl","hash":"236a039b0900f4267de566b46f62314ad967d30f","modified":1658501649612},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"6cf78a379bb656cc0abb4ab80fcae60152ce41ad","modified":1658501649612},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"f6f05f02d50f742c84ee5122016c0563a8bb2cf9","modified":1658501649613},{"_id":"themes/next/source/css/_common/components/pages/tag-cloud.styl","hash":"97974c231b4659b8aa5e9321c4d54db5c816d0db","modified":1658501649613},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"a52f8cae599099231866298ed831fdf76c9b6717","modified":1658501649613},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"9af620eba5ccceea21a0e3bc69f6f1fa7637c2f3","modified":1658501649613},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"70b3eb9d36543ab92796ac163544e9cf51b7c1e6","modified":1658501649614},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"97dec98d0403097d66822f1c90b50b2890c84698","modified":1658501649614},{"_id":"themes/next/source/css/_common/components/post/post-followme.styl","hash":"57b9a179675f1536e017cba457b6ac575e397c4f","modified":1658501649614},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"0dfb97703a519d9438f64f9e41ab1dd37381f733","modified":1658501649614},{"_id":"themes/next/source/css/_common/components/post/post-header.styl","hash":"93ba8172c0d2c37d738e6dbd44fcd5a2e23b92f3","modified":1658501649615},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"66fc406796b6efe6cea76550573b7a632112406a","modified":1658501649615},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"2c24829d95c742eb9e8316ebf2fbe9f2c168b59a","modified":1658501649615},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"09dda2667628d1f91b2e37d8fc6df1413f961b64","modified":1658501649615},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5cc9e7394c927065c688cba5edd6e0a27587f1d8","modified":1658501649615},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"b266d2ce5e2b117be01537889e839a69004dc0bb","modified":1658501649616},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"fcd64c23d17775b3635325f6758b648d932e79b5","modified":1658501649616},{"_id":"themes/next/source/css/_common/components/third-party/gitalk.styl","hash":"b87f4a06c0db893df4f756f24be182e1a4751f24","modified":1658501649616},{"_id":"themes/next/source/css/_common/components/third-party/math.styl","hash":"d83102771df652769e51ddfd041cf5f4ca1a041d","modified":1658501649617},{"_id":"themes/next/source/css/_common/components/third-party/related-posts.styl","hash":"8ed7a9d5dfac592de703421b543978095129aa5b","modified":1658501649617},{"_id":"themes/next/source/css/_common/components/third-party/search.styl","hash":"bad99f4cccb93b3cefe990a2c85124e60698d32e","modified":1658501649618},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"1f6b0d3ab227697ca115e57fd61122ea7950e19d","modified":1658501649618},{"_id":"themes/next/source/css/_common/outline/footer/footer.styl","hash":"7eeb22c5696f8e0c95161dc57703973cf81c8c12","modified":1658501649618},{"_id":"themes/next/source/css/_common/outline/header/bookmark.styl","hash":"b4f4bae437d4f994af93cf142494ffcd86bae46b","modified":1658501649618},{"_id":"themes/next/source/css/_common/outline/header/github-banner.styl","hash":"b31c86d1a4f89837f9187bed646bda96b2cd286c","modified":1658501649619},{"_id":"themes/next/source/css/_common/outline/header/header.styl","hash":"300058ca12e81013e77ba01fe66ac210525768b6","modified":1658501649619},{"_id":"themes/next/source/css/_common/outline/header/headerband.styl","hash":"6d5f26646e2914474f295de8bf6dc327d4acd529","modified":1658501649619},{"_id":"themes/next/source/css/_common/outline/header/menu.styl","hash":"7a3a56b10ab714c0e2ed240d0939deeecdcad167","modified":1658501649619},{"_id":"themes/next/source/css/_common/outline/header/site-meta.styl","hash":"3d16ac0f4ccaeed868c246d4d49bde543d1f62cb","modified":1658501649619},{"_id":"themes/next/source/css/_common/outline/header/site-nav.styl","hash":"b8c816fba0a9b4a35fbae03ba5b1b2da96ba2687","modified":1658501649620},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"49722d555a2edb18094bb2cb3d7336dd72051b93","modified":1658501649620},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"357f825f0a649b2e28cba1481d4c9a0cb402e43a","modified":1658501649620},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"096f908c08ce553e482aadfd3e767a0145191093","modified":1658501649621},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"525242ce9e912c4adfe5134347c67dbdb9e98e3d","modified":1658501649622},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"12f7eaf6b56624cbc411528562d6bb848ff97039","modified":1658501649622},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"b11b04737a1a0fea3bd9f0081d96ee6c015358d4","modified":1658501649622},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"fa0a2ea57b7b4ce75b5d18c264af2d92ea3192f9","modified":1658501649622},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"098b4bdf49c7300490f959386d5d1185a32543f6","modified":1658501649622},{"_id":"themes/next/source/css/_common/outline/sidebar/sidebar.styl","hash":"5d540f683018745a5ed1d6f635df28ea610c1244","modified":1658501649622},{"_id":"themes/next/source/css/_common/outline/sidebar/site-state.styl","hash":"67a1fcb33535122d41acd24f1f49cf02c89b88fa","modified":1658501649623},{"_id":"themes/next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"4079e616fbf36112dec0674c1e0713d1d9769068","modified":1658501649624},{"_id":"themes/next/source/css/_common/scaffolding/highlight/diff.styl","hash":"83bd737f663a8461e66985af8ddbfc0a731fc939","modified":1658501649624},{"_id":"themes/next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"80488259271bcfe38031f4c2e902463daba9336b","modified":1658501649624},{"_id":"themes/next/source/css/_common/scaffolding/highlight/theme.styl","hash":"c911045b2ce9a66e38d9dd30c7ed078abbc10cbf","modified":1658501649625},{"_id":"themes/next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"ceacfa6218f6084c71a230b086e5d2708d29927e","modified":1658501649627},{"_id":"themes/next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"aca7bb220fc14ef2a8f96282d2a95a96a9238d46","modified":1658501649627},{"_id":"themes/next/source/css/_common/scaffolding/tags/label.styl","hash":"8b7aafb911850c73074cdb6cc87abe4ac8c12e99","modified":1658501649627},{"_id":"themes/next/source/css/_common/scaffolding/tags/note.styl","hash":"adaf0f580fccf4158169eeaf534a18005b39a760","modified":1658501649628},{"_id":"themes/next/source/css/_common/scaffolding/tags/pdf.styl","hash":"03a5bcecc0b12231462ef6ffe432fa77ee71beff","modified":1658501649628},{"_id":"themes/next/source/css/_common/scaffolding/tags/tabs.styl","hash":"3256e39f281f06751a1c0145d9806a0e56d68170","modified":1658501649628},{"_id":"themes/next/source/css/_common/scaffolding/tags/tags.styl","hash":"51d46fa3c7c6b691c61a2c2b0ac005c97cfbf72b","modified":1658501649628},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1658501649644},{"_id":"themes/next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1658501649646}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Node-Hid在electron中偶现的闪退(crash)问题","date":"2022-02-28T07:36:23.000Z","_content":"\n### 前言\n\n前段时间在一个`electron`项目中使用[node-hid](https://github.com/node-hid/node-hid)配合`C++`类库实现设备的固件升级(即`dfu`)，在开始升级时出现了闪退的现象，概率为1%左右（个别电脑可达到10%）。\n\n","source":"_drafts/Node-Hid在electron中偶现的闪退-crash-问题.md","raw":"---\ntitle: Node-Hid在electron中偶现的闪退(crash)问题\ndate: 2022-02-28 15:36:23\ntags:\n---\n\n### 前言\n\n前段时间在一个`electron`项目中使用[node-hid](https://github.com/node-hid/node-hid)配合`C++`类库实现设备的固件升级(即`dfu`)，在开始升级时出现了闪退的现象，概率为1%左右（个别电脑可达到10%）。\n\n","slug":"Node-Hid在electron中偶现的闪退-crash-问题","published":0,"updated":"2022-07-22T14:54:09.553Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl5woimz10000eou2chpc0nm5","content":"<h3 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\"></a> 前言</h3>\n<p>前段时间在一个<code>electron</code>项目中使用<a href=\"https://github.com/node-hid/node-hid\">node-hid</a>配合<code>C++</code>类库实现设备的固件升级(即<code>dfu</code>)，在开始升级时出现了闪退的现象，概率为1%左右（个别电脑可达到10%）。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\"></a> 前言</h3>\n<p>前段时间在一个<code>electron</code>项目中使用<a href=\"https://github.com/node-hid/node-hid\">node-hid</a>配合<code>C++</code>类库实现设备的固件升级(即<code>dfu</code>)，在开始升级时出现了闪退的现象，概率为1%左右（个别电脑可达到10%）。</p>\n"},{"title":"十年社会人的感悟之谈","date":"2021-08-18T03:16:09.000Z","_content":"\n## 忒修斯之船\n\n也许我们可以回答[忒修斯之船](https://zh.wikipedia.org/wiki/%E5%BF%92%E4%BF%AE%E6%96%AF%E4%B9%8B%E8%88%B9)这个问题，那如果这样呢 ———— 如果人的思想每天都在变化，到这个人的思想已经跟最初的思想完全不一样的时候，那这还是之前那个人吗？如果不是，是从什么时候","source":"_drafts/十年社会人的经验之谈.md","raw":"---\ntitle: 十年社会人的感悟之谈\ndate: 2021-08-18 11:16:09\ntags: Life\n---\n\n## 忒修斯之船\n\n也许我们可以回答[忒修斯之船](https://zh.wikipedia.org/wiki/%E5%BF%92%E4%BF%AE%E6%96%AF%E4%B9%8B%E8%88%B9)这个问题，那如果这样呢 ———— 如果人的思想每天都在变化，到这个人的思想已经跟最初的思想完全不一样的时候，那这还是之前那个人吗？如果不是，是从什么时候","slug":"十年社会人的经验之谈","published":0,"updated":"2022-01-13T02:45:22.431Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl5woimz80001eou217k16406","content":"<h2 id=\"忒修斯之船\"><a class=\"markdownIt-Anchor\" href=\"#忒修斯之船\"></a> 忒修斯之船</h2>\n<p>也许我们可以回答<a href=\"https://zh.wikipedia.org/wiki/%E5%BF%92%E4%BF%AE%E6%96%AF%E4%B9%8B%E8%88%B9\">忒修斯之船</a>这个问题，那如果这样呢 ———— 如果人的思想每天都在变化，到这个人的思想已经跟最初的思想完全不一样的时候，那这还是之前那个人吗？如果不是，是从什么时候</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"忒修斯之船\"><a class=\"markdownIt-Anchor\" href=\"#忒修斯之船\"></a> 忒修斯之船</h2>\n<p>也许我们可以回答<a href=\"https://zh.wikipedia.org/wiki/%E5%BF%92%E4%BF%AE%E6%96%AF%E4%B9%8B%E8%88%B9\">忒修斯之船</a>这个问题，那如果这样呢 ———— 如果人的思想每天都在变化，到这个人的思想已经跟最初的思想完全不一样的时候，那这还是之前那个人吗？如果不是，是从什么时候</p>\n"},{"title":"IOS中通过快捷捷径打开健康码/场所码","date":"2022-07-03T05:50:52.000Z","_content":"\n## 说明\n\n本文标题其实应该叫“使用快捷捷径打开任意微信小程序页面”，因为本质上这篇文章就是说明如何在获取微信小程序任意界面的页面路径，以及通过Universal link在微信中打开对应页面的方法（本文使用“跨时空”APP来达到此目的）。\n\n<!--more-->\n\n## 无关的话\n\n终于又得空，有时间写写blog(bug?)了，最近有点理解《开端》里说的“塞尔达才是天”了😂 \n\n其实本来有很多东西可写，奈何自己一直都这么懒🥲\n\n## 正文\n\n自从上次把“智慧南山”（似乎其它区的门禁小程序似乎也差不多）打开门禁的请求包用`Charles`抓下来放在快捷指令后总想着还有其它重复操作可以简化的，正好最近疫情又变严重，自然想起了场所码啦！\n\n废话少说，开打开打～\n\n### 一、获取场所码页面路径\n\n其实此方法来源于微信公众号发表文章时，需要在文章中打开指定小程序页面的功能，本意上是增加小程序的使用场景，没想到给了我们可乘之机😁\n\n***前提***：拥有一个微信公众号（个人或企业资质均可）\n\n操作步骤：\n\n1. 登录[微信公众号](https://mp.weixin.qq.com/)，在`草稿箱`新建`图文消息`，点击上方的“小程序”，然后在弹出窗中输入对应小程序的全称或AppId（此处以`粤省事`为例，**AppId**：`wx82d43fee89cdc7df`，***账号原始ID***：`gh_1ac06b5a8f4e`，因广东场所码都在`粤省事`里面），点击下一步；\n   \n   {% asset_img p1.png %}\n\n2. 在“填写详细信”的窗口，将鼠标悬浮在`获取更多页面路径`后，在新的弹窗中输入自己的微信号，点击开启；\n   \n   {% asset_img p2.png %}\n\n3. 开启后，你就可以扫描你目标二维码打开小程序=>点击右上角菜单按钮=>点击`复制页面路径`，此处我得到的路径是：\n   `operation_plus/pages/yiqing/daka/worker/inspector/fast-result/index.html?scene=id%3D999999999%2Ccp%3D0`；\n\n   {% asset_img p3.png %}\n\n至此，准备工作已经完成，接下来就是“跨时空”APP登场啦！\n\n### 二、使用“跨时空”APP打开已复制的页面路径\n\n***前提***：前往APP Store下载“跨时空”\n\n1. 将第一步的`账号原始ID(gh_1ac06b5a8f4e)`和`复制的小程序路径`分别替换下方链接中的`{0}`和`{1}`：\n   `ksk://kainy.cn/#weixin://app/KSK_URLscheme/jumpWxa/?userName={0}&path={1}`\n   此处我的结果：\n   `ksk://kainy.cn/#weixin://app/KSK_URLscheme/jumpWxa/?userName=gh_1ac06b5a8f4e&path=operation_plus/pages/yiqing/daka/worker/inspector/fast-result/index.html?scene=id%3D999999999%2Ccp%3D0`\n2. 将上一步替换后的URL添加到`快捷指令`中：\n   1. 打开`快捷指令`，点击右上角“+”，输入`快捷指令`的名称；\n   2. 点击`添加操作`，输入`打开URL`；\n   3. 将替换后的URL粘贴进`URL`中；\n   \n{% asset_img p4.png %}\n\n3. 运行快捷指令看看效果～\n4. 尝试将快捷指令增加到桌面或者添加到通知界面吧！\n\n**最后Show一下我的快捷指令组件吧～**\n{% asset_img p5.png %}","source":"_posts/IOS中通过快捷捷径打开健康码或场所码.md","raw":"---\ntitle: IOS中通过快捷捷径打开健康码/场所码\ndate: 2022-07-03 13:50:52\ntags: Geek\n---\n\n## 说明\n\n本文标题其实应该叫“使用快捷捷径打开任意微信小程序页面”，因为本质上这篇文章就是说明如何在获取微信小程序任意界面的页面路径，以及通过Universal link在微信中打开对应页面的方法（本文使用“跨时空”APP来达到此目的）。\n\n<!--more-->\n\n## 无关的话\n\n终于又得空，有时间写写blog(bug?)了，最近有点理解《开端》里说的“塞尔达才是天”了😂 \n\n其实本来有很多东西可写，奈何自己一直都这么懒🥲\n\n## 正文\n\n自从上次把“智慧南山”（似乎其它区的门禁小程序似乎也差不多）打开门禁的请求包用`Charles`抓下来放在快捷指令后总想着还有其它重复操作可以简化的，正好最近疫情又变严重，自然想起了场所码啦！\n\n废话少说，开打开打～\n\n### 一、获取场所码页面路径\n\n其实此方法来源于微信公众号发表文章时，需要在文章中打开指定小程序页面的功能，本意上是增加小程序的使用场景，没想到给了我们可乘之机😁\n\n***前提***：拥有一个微信公众号（个人或企业资质均可）\n\n操作步骤：\n\n1. 登录[微信公众号](https://mp.weixin.qq.com/)，在`草稿箱`新建`图文消息`，点击上方的“小程序”，然后在弹出窗中输入对应小程序的全称或AppId（此处以`粤省事`为例，**AppId**：`wx82d43fee89cdc7df`，***账号原始ID***：`gh_1ac06b5a8f4e`，因广东场所码都在`粤省事`里面），点击下一步；\n   \n   {% asset_img p1.png %}\n\n2. 在“填写详细信”的窗口，将鼠标悬浮在`获取更多页面路径`后，在新的弹窗中输入自己的微信号，点击开启；\n   \n   {% asset_img p2.png %}\n\n3. 开启后，你就可以扫描你目标二维码打开小程序=>点击右上角菜单按钮=>点击`复制页面路径`，此处我得到的路径是：\n   `operation_plus/pages/yiqing/daka/worker/inspector/fast-result/index.html?scene=id%3D999999999%2Ccp%3D0`；\n\n   {% asset_img p3.png %}\n\n至此，准备工作已经完成，接下来就是“跨时空”APP登场啦！\n\n### 二、使用“跨时空”APP打开已复制的页面路径\n\n***前提***：前往APP Store下载“跨时空”\n\n1. 将第一步的`账号原始ID(gh_1ac06b5a8f4e)`和`复制的小程序路径`分别替换下方链接中的`{0}`和`{1}`：\n   `ksk://kainy.cn/#weixin://app/KSK_URLscheme/jumpWxa/?userName={0}&path={1}`\n   此处我的结果：\n   `ksk://kainy.cn/#weixin://app/KSK_URLscheme/jumpWxa/?userName=gh_1ac06b5a8f4e&path=operation_plus/pages/yiqing/daka/worker/inspector/fast-result/index.html?scene=id%3D999999999%2Ccp%3D0`\n2. 将上一步替换后的URL添加到`快捷指令`中：\n   1. 打开`快捷指令`，点击右上角“+”，输入`快捷指令`的名称；\n   2. 点击`添加操作`，输入`打开URL`；\n   3. 将替换后的URL粘贴进`URL`中；\n   \n{% asset_img p4.png %}\n\n3. 运行快捷指令看看效果～\n4. 尝试将快捷指令增加到桌面或者添加到通知界面吧！\n\n**最后Show一下我的快捷指令组件吧～**\n{% asset_img p5.png %}","slug":"IOS中通过快捷捷径打开健康码或场所码","published":1,"updated":"2022-07-22T14:54:09.554Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl5woimza0002eou24lbs1472","content":"<h2 id=\"说明\"><a class=\"markdownIt-Anchor\" href=\"#说明\"></a> 说明</h2>\n<p>本文标题其实应该叫“使用快捷捷径打开任意微信小程序页面”，因为本质上这篇文章就是说明如何在获取微信小程序任意界面的页面路径，以及通过Universal link在微信中打开对应页面的方法（本文使用“跨时空”APP来达到此目的）。</p>\n<span id=\"more\"></span>\n<h2 id=\"无关的话\"><a class=\"markdownIt-Anchor\" href=\"#无关的话\"></a> 无关的话</h2>\n<p>终于又得空，有时间写写blog(bug?)了，最近有点理解《开端》里说的“塞尔达才是天”了😂</p>\n<p>其实本来有很多东西可写，奈何自己一直都这么懒🥲</p>\n<h2 id=\"正文\"><a class=\"markdownIt-Anchor\" href=\"#正文\"></a> 正文</h2>\n<p>自从上次把“智慧南山”（似乎其它区的门禁小程序似乎也差不多）打开门禁的请求包用<code>Charles</code>抓下来放在快捷指令后总想着还有其它重复操作可以简化的，正好最近疫情又变严重，自然想起了场所码啦！</p>\n<p>废话少说，开打开打～</p>\n<h3 id=\"一-获取场所码页面路径\"><a class=\"markdownIt-Anchor\" href=\"#一-获取场所码页面路径\"></a> 一、获取场所码页面路径</h3>\n<p>其实此方法来源于微信公众号发表文章时，需要在文章中打开指定小程序页面的功能，本意上是增加小程序的使用场景，没想到给了我们可乘之机😁</p>\n<p><em><strong>前提</strong></em>：拥有一个微信公众号（个人或企业资质均可）</p>\n<p>操作步骤：</p>\n<ol>\n<li>\n<p>登录<a href=\"https://mp.weixin.qq.com/\">微信公众号</a>，在<code>草稿箱</code>新建<code>图文消息</code>，点击上方的“小程序”，然后在弹出窗中输入对应小程序的全称或AppId（此处以<code>粤省事</code>为例，<strong>AppId</strong>：<code>wx82d43fee89cdc7df</code>，<em><strong>账号原始ID</strong></em>：<code>gh_1ac06b5a8f4e</code>，因广东场所码都在<code>粤省事</code>里面），点击下一步；</p>\n<img src=\"/IOS%E4%B8%AD%E9%80%9A%E8%BF%87%E5%BF%AB%E6%8D%B7%E6%8D%B7%E5%BE%84%E6%89%93%E5%BC%80%E5%81%A5%E5%BA%B7%E7%A0%81%E6%88%96%E5%9C%BA%E6%89%80%E7%A0%81/p1.png\" class=\"\">\n</li>\n<li>\n<p>在“填写详细信”的窗口，将鼠标悬浮在<code>获取更多页面路径</code>后，在新的弹窗中输入自己的微信号，点击开启；</p>\n<img src=\"/IOS%E4%B8%AD%E9%80%9A%E8%BF%87%E5%BF%AB%E6%8D%B7%E6%8D%B7%E5%BE%84%E6%89%93%E5%BC%80%E5%81%A5%E5%BA%B7%E7%A0%81%E6%88%96%E5%9C%BA%E6%89%80%E7%A0%81/p2.png\" class=\"\">\n</li>\n<li>\n<p>开启后，你就可以扫描你目标二维码打开小程序=&gt;点击右上角菜单按钮=&gt;点击<code>复制页面路径</code>，此处我得到的路径是：<br />\n<code>operation_plus/pages/yiqing/daka/worker/inspector/fast-result/index.html?scene=id%3D999999999%2Ccp%3D0</code>；</p>\n<img src=\"/IOS%E4%B8%AD%E9%80%9A%E8%BF%87%E5%BF%AB%E6%8D%B7%E6%8D%B7%E5%BE%84%E6%89%93%E5%BC%80%E5%81%A5%E5%BA%B7%E7%A0%81%E6%88%96%E5%9C%BA%E6%89%80%E7%A0%81/p3.png\" class=\"\">\n</li>\n</ol>\n<p>至此，准备工作已经完成，接下来就是“跨时空”APP登场啦！</p>\n<h3 id=\"二-使用跨时空app打开已复制的页面路径\"><a class=\"markdownIt-Anchor\" href=\"#二-使用跨时空app打开已复制的页面路径\"></a> 二、使用“跨时空”APP打开已复制的页面路径</h3>\n<p><em><strong>前提</strong></em>：前往APP Store下载“跨时空”</p>\n<ol>\n<li>将第一步的<code>账号原始ID(gh_1ac06b5a8f4e)</code>和<code>复制的小程序路径</code>分别替换下方链接中的<code>&#123;0&#125;</code>和<code>&#123;1&#125;</code>：<br />\n<code>ksk://kainy.cn/#weixin://app/KSK_URLscheme/jumpWxa/?userName=&#123;0&#125;&amp;path=&#123;1&#125;</code><br />\n此处我的结果：<br />\n<code>ksk://kainy.cn/#weixin://app/KSK_URLscheme/jumpWxa/?userName=gh_1ac06b5a8f4e&amp;path=operation_plus/pages/yiqing/daka/worker/inspector/fast-result/index.html?scene=id%3D999999999%2Ccp%3D0</code></li>\n<li>将上一步替换后的URL添加到<code>快捷指令</code>中：\n<ol>\n<li>打开<code>快捷指令</code>，点击右上角“+”，输入<code>快捷指令</code>的名称；</li>\n<li>点击<code>添加操作</code>，输入<code>打开URL</code>；</li>\n<li>将替换后的URL粘贴进<code>URL</code>中；</li>\n</ol>\n</li>\n</ol>\n<img src=\"/IOS%E4%B8%AD%E9%80%9A%E8%BF%87%E5%BF%AB%E6%8D%B7%E6%8D%B7%E5%BE%84%E6%89%93%E5%BC%80%E5%81%A5%E5%BA%B7%E7%A0%81%E6%88%96%E5%9C%BA%E6%89%80%E7%A0%81/p4.png\" class=\"\">\n<ol start=\"3\">\n<li>运行快捷指令看看效果～</li>\n<li>尝试将快捷指令增加到桌面或者添加到通知界面吧！</li>\n</ol>\n<p><strong>最后Show一下我的快捷指令组件吧～</strong></p>\n<img src=\"/IOS%E4%B8%AD%E9%80%9A%E8%BF%87%E5%BF%AB%E6%8D%B7%E6%8D%B7%E5%BE%84%E6%89%93%E5%BC%80%E5%81%A5%E5%BA%B7%E7%A0%81%E6%88%96%E5%9C%BA%E6%89%80%E7%A0%81/p5.png\" class=\"\">","site":{"data":{}},"excerpt":"<h2 id=\"说明\"><a class=\"markdownIt-Anchor\" href=\"#说明\"></a> 说明</h2>\n<p>本文标题其实应该叫“使用快捷捷径打开任意微信小程序页面”，因为本质上这篇文章就是说明如何在获取微信小程序任意界面的页面路径，以及通过Universal link在微信中打开对应页面的方法（本文使用“跨时空”APP来达到此目的）。</p>","more":"<h2 id=\"无关的话\"><a class=\"markdownIt-Anchor\" href=\"#无关的话\"></a> 无关的话</h2>\n<p>终于又得空，有时间写写blog(bug?)了，最近有点理解《开端》里说的“塞尔达才是天”了😂</p>\n<p>其实本来有很多东西可写，奈何自己一直都这么懒🥲</p>\n<h2 id=\"正文\"><a class=\"markdownIt-Anchor\" href=\"#正文\"></a> 正文</h2>\n<p>自从上次把“智慧南山”（似乎其它区的门禁小程序似乎也差不多）打开门禁的请求包用<code>Charles</code>抓下来放在快捷指令后总想着还有其它重复操作可以简化的，正好最近疫情又变严重，自然想起了场所码啦！</p>\n<p>废话少说，开打开打～</p>\n<h3 id=\"一-获取场所码页面路径\"><a class=\"markdownIt-Anchor\" href=\"#一-获取场所码页面路径\"></a> 一、获取场所码页面路径</h3>\n<p>其实此方法来源于微信公众号发表文章时，需要在文章中打开指定小程序页面的功能，本意上是增加小程序的使用场景，没想到给了我们可乘之机😁</p>\n<p><em><strong>前提</strong></em>：拥有一个微信公众号（个人或企业资质均可）</p>\n<p>操作步骤：</p>\n<ol>\n<li>\n<p>登录<a href=\"https://mp.weixin.qq.com/\">微信公众号</a>，在<code>草稿箱</code>新建<code>图文消息</code>，点击上方的“小程序”，然后在弹出窗中输入对应小程序的全称或AppId（此处以<code>粤省事</code>为例，<strong>AppId</strong>：<code>wx82d43fee89cdc7df</code>，<em><strong>账号原始ID</strong></em>：<code>gh_1ac06b5a8f4e</code>，因广东场所码都在<code>粤省事</code>里面），点击下一步；</p>\n<img src=\"/IOS%E4%B8%AD%E9%80%9A%E8%BF%87%E5%BF%AB%E6%8D%B7%E6%8D%B7%E5%BE%84%E6%89%93%E5%BC%80%E5%81%A5%E5%BA%B7%E7%A0%81%E6%88%96%E5%9C%BA%E6%89%80%E7%A0%81/p1.png\" class=\"\">\n</li>\n<li>\n<p>在“填写详细信”的窗口，将鼠标悬浮在<code>获取更多页面路径</code>后，在新的弹窗中输入自己的微信号，点击开启；</p>\n<img src=\"/IOS%E4%B8%AD%E9%80%9A%E8%BF%87%E5%BF%AB%E6%8D%B7%E6%8D%B7%E5%BE%84%E6%89%93%E5%BC%80%E5%81%A5%E5%BA%B7%E7%A0%81%E6%88%96%E5%9C%BA%E6%89%80%E7%A0%81/p2.png\" class=\"\">\n</li>\n<li>\n<p>开启后，你就可以扫描你目标二维码打开小程序=&gt;点击右上角菜单按钮=&gt;点击<code>复制页面路径</code>，此处我得到的路径是：<br />\n<code>operation_plus/pages/yiqing/daka/worker/inspector/fast-result/index.html?scene=id%3D999999999%2Ccp%3D0</code>；</p>\n<img src=\"/IOS%E4%B8%AD%E9%80%9A%E8%BF%87%E5%BF%AB%E6%8D%B7%E6%8D%B7%E5%BE%84%E6%89%93%E5%BC%80%E5%81%A5%E5%BA%B7%E7%A0%81%E6%88%96%E5%9C%BA%E6%89%80%E7%A0%81/p3.png\" class=\"\">\n</li>\n</ol>\n<p>至此，准备工作已经完成，接下来就是“跨时空”APP登场啦！</p>\n<h3 id=\"二-使用跨时空app打开已复制的页面路径\"><a class=\"markdownIt-Anchor\" href=\"#二-使用跨时空app打开已复制的页面路径\"></a> 二、使用“跨时空”APP打开已复制的页面路径</h3>\n<p><em><strong>前提</strong></em>：前往APP Store下载“跨时空”</p>\n<ol>\n<li>将第一步的<code>账号原始ID(gh_1ac06b5a8f4e)</code>和<code>复制的小程序路径</code>分别替换下方链接中的<code>&#123;0&#125;</code>和<code>&#123;1&#125;</code>：<br />\n<code>ksk://kainy.cn/#weixin://app/KSK_URLscheme/jumpWxa/?userName=&#123;0&#125;&amp;path=&#123;1&#125;</code><br />\n此处我的结果：<br />\n<code>ksk://kainy.cn/#weixin://app/KSK_URLscheme/jumpWxa/?userName=gh_1ac06b5a8f4e&amp;path=operation_plus/pages/yiqing/daka/worker/inspector/fast-result/index.html?scene=id%3D999999999%2Ccp%3D0</code></li>\n<li>将上一步替换后的URL添加到<code>快捷指令</code>中：\n<ol>\n<li>打开<code>快捷指令</code>，点击右上角“+”，输入<code>快捷指令</code>的名称；</li>\n<li>点击<code>添加操作</code>，输入<code>打开URL</code>；</li>\n<li>将替换后的URL粘贴进<code>URL</code>中；</li>\n</ol>\n</li>\n</ol>\n<img src=\"/IOS%E4%B8%AD%E9%80%9A%E8%BF%87%E5%BF%AB%E6%8D%B7%E6%8D%B7%E5%BE%84%E6%89%93%E5%BC%80%E5%81%A5%E5%BA%B7%E7%A0%81%E6%88%96%E5%9C%BA%E6%89%80%E7%A0%81/p4.png\" class=\"\">\n<ol start=\"3\">\n<li>运行快捷指令看看效果～</li>\n<li>尝试将快捷指令增加到桌面或者添加到通知界面吧！</li>\n</ol>\n<p><strong>最后Show一下我的快捷指令组件吧～</strong></p>\n<img src=\"/IOS%E4%B8%AD%E9%80%9A%E8%BF%87%E5%BF%AB%E6%8D%B7%E6%8D%B7%E5%BE%84%E6%89%93%E5%BC%80%E5%81%A5%E5%BA%B7%E7%A0%81%E6%88%96%E5%9C%BA%E6%89%80%E7%A0%81/p5.png\" class=\"\">"},{"title":"Advanced Installer 19.2 安装包及激活工具分享","date":"2022-03-08T02:25:56.000Z","_content":"## 重点\n\n`Advance Install 19.2`最新包： [点击下载](https://www.advancedinstaller.com/downloads/advinst.msi)\n\n激活工具：[点击下载](/download/patch.zip)\n\n## 使用说明：\n\n安装`Advance Install`之后，打开可执行文件路径（我的是`C:\\Program Files (x86)\\Caphyon\\Advanced Installer 19.2\\bin\\x86`），将压缩包内的`patch.exe`粘贴到此，**以管理员身份运行**即可。\n<!--more-->\n\n## 温馨提示：\n\n下载前后都会收到Chrome跟Windows防火墙的病毒提醒😂 **有条件请支持正版**！\n\n## 无关的话\n\n这段时间做了个WPF工具，因为内部有很多文件引用，使用Fody进行单文件打包不能直接使用，所以就在找安装包制作工具。\n\n对比了一圈，如`WiX toolset`、`NSIS`、`InstallShield`还有最终选定的`Advance Installer`。\n\n`Wix toolset`之前有使用，功能很强大，文档也齐全（虽然说是全英文），但由于是纯靠xml配置来生成界面，需要花费相当的时间来学习对应的语法，所以就放弃了。另外两个也有所耳闻，但只有`Advance Install`能满足我不花时间，能实现一定程度的配置以及点几个按钮就能生成安装包的需求🤣。\n\n但由于`Advance Install`是商业软件，只能使用有限功能最长30天，所以需要破解工具才能愉快的使用。经过一番筛选，期间还碰到了几个病毒（虚拟机都搞坏了），最终确认上面链接中的工具可以使用。","source":"_posts/AdvanceInstaller-19-2-安装包及激活工具分享.md","raw":"---\ntitle:  Advanced Installer 19.2 安装包及激活工具分享\ndate: 2022-03-08 10:25:56\ntags: AdvanceInstaller 破解工具\n---\n## 重点\n\n`Advance Install 19.2`最新包： [点击下载](https://www.advancedinstaller.com/downloads/advinst.msi)\n\n激活工具：[点击下载](/download/patch.zip)\n\n## 使用说明：\n\n安装`Advance Install`之后，打开可执行文件路径（我的是`C:\\Program Files (x86)\\Caphyon\\Advanced Installer 19.2\\bin\\x86`），将压缩包内的`patch.exe`粘贴到此，**以管理员身份运行**即可。\n<!--more-->\n\n## 温馨提示：\n\n下载前后都会收到Chrome跟Windows防火墙的病毒提醒😂 **有条件请支持正版**！\n\n## 无关的话\n\n这段时间做了个WPF工具，因为内部有很多文件引用，使用Fody进行单文件打包不能直接使用，所以就在找安装包制作工具。\n\n对比了一圈，如`WiX toolset`、`NSIS`、`InstallShield`还有最终选定的`Advance Installer`。\n\n`Wix toolset`之前有使用，功能很强大，文档也齐全（虽然说是全英文），但由于是纯靠xml配置来生成界面，需要花费相当的时间来学习对应的语法，所以就放弃了。另外两个也有所耳闻，但只有`Advance Install`能满足我不花时间，能实现一定程度的配置以及点几个按钮就能生成安装包的需求🤣。\n\n但由于`Advance Install`是商业软件，只能使用有限功能最长30天，所以需要破解工具才能愉快的使用。经过一番筛选，期间还碰到了几个病毒（虚拟机都搞坏了），最终确认上面链接中的工具可以使用。","slug":"AdvanceInstaller-19-2-安装包及激活工具分享","published":1,"updated":"2022-07-22T14:54:09.554Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl5woimzc0004eou2g9t6emzx","content":"<h2 id=\"重点\"><a class=\"markdownIt-Anchor\" href=\"#重点\"></a> 重点</h2>\n<p><code>Advance Install 19.2</code>最新包： <a href=\"https://www.advancedinstaller.com/downloads/advinst.msi\">点击下载</a></p>\n<p>激活工具：<a href=\"/download/patch.zip\">点击下载</a></p>\n<h2 id=\"使用说明\"><a class=\"markdownIt-Anchor\" href=\"#使用说明\"></a> 使用说明：</h2>\n<p>安装<code>Advance Install</code>之后，打开可执行文件路径（我的是<code>C:\\Program Files (x86)\\Caphyon\\Advanced Installer 19.2\\bin\\x86</code>），将压缩包内的<code>patch.exe</code>粘贴到此，<strong>以管理员身份运行</strong>即可。</p>\n<span id=\"more\"></span>\n<h2 id=\"温馨提示\"><a class=\"markdownIt-Anchor\" href=\"#温馨提示\"></a> 温馨提示：</h2>\n<p>下载前后都会收到Chrome跟Windows防火墙的病毒提醒😂 <strong>有条件请支持正版</strong>！</p>\n<h2 id=\"无关的话\"><a class=\"markdownIt-Anchor\" href=\"#无关的话\"></a> 无关的话</h2>\n<p>这段时间做了个WPF工具，因为内部有很多文件引用，使用Fody进行单文件打包不能直接使用，所以就在找安装包制作工具。</p>\n<p>对比了一圈，如<code>WiX toolset</code>、<code>NSIS</code>、<code>InstallShield</code>还有最终选定的<code>Advance Installer</code>。</p>\n<p><code>Wix toolset</code>之前有使用，功能很强大，文档也齐全（虽然说是全英文），但由于是纯靠xml配置来生成界面，需要花费相当的时间来学习对应的语法，所以就放弃了。另外两个也有所耳闻，但只有<code>Advance Install</code>能满足我不花时间，能实现一定程度的配置以及点几个按钮就能生成安装包的需求🤣。</p>\n<p>但由于<code>Advance Install</code>是商业软件，只能使用有限功能最长30天，所以需要破解工具才能愉快的使用。经过一番筛选，期间还碰到了几个病毒（虚拟机都搞坏了），最终确认上面链接中的工具可以使用。</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"重点\"><a class=\"markdownIt-Anchor\" href=\"#重点\"></a> 重点</h2>\n<p><code>Advance Install 19.2</code>最新包： <a href=\"https://www.advancedinstaller.com/downloads/advinst.msi\">点击下载</a></p>\n<p>激活工具：<a href=\"/download/patch.zip\">点击下载</a></p>\n<h2 id=\"使用说明\"><a class=\"markdownIt-Anchor\" href=\"#使用说明\"></a> 使用说明：</h2>\n<p>安装<code>Advance Install</code>之后，打开可执行文件路径（我的是<code>C:\\Program Files (x86)\\Caphyon\\Advanced Installer 19.2\\bin\\x86</code>），将压缩包内的<code>patch.exe</code>粘贴到此，<strong>以管理员身份运行</strong>即可。</p>","more":"<h2 id=\"温馨提示\"><a class=\"markdownIt-Anchor\" href=\"#温馨提示\"></a> 温馨提示：</h2>\n<p>下载前后都会收到Chrome跟Windows防火墙的病毒提醒😂 <strong>有条件请支持正版</strong>！</p>\n<h2 id=\"无关的话\"><a class=\"markdownIt-Anchor\" href=\"#无关的话\"></a> 无关的话</h2>\n<p>这段时间做了个WPF工具，因为内部有很多文件引用，使用Fody进行单文件打包不能直接使用，所以就在找安装包制作工具。</p>\n<p>对比了一圈，如<code>WiX toolset</code>、<code>NSIS</code>、<code>InstallShield</code>还有最终选定的<code>Advance Installer</code>。</p>\n<p><code>Wix toolset</code>之前有使用，功能很强大，文档也齐全（虽然说是全英文），但由于是纯靠xml配置来生成界面，需要花费相当的时间来学习对应的语法，所以就放弃了。另外两个也有所耳闻，但只有<code>Advance Install</code>能满足我不花时间，能实现一定程度的配置以及点几个按钮就能生成安装包的需求🤣。</p>\n<p>但由于<code>Advance Install</code>是商业软件，只能使用有限功能最长30天，所以需要破解工具才能愉快的使用。经过一番筛选，期间还碰到了几个病毒（虚拟机都搞坏了），最终确认上面链接中的工具可以使用。</p>"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_drafts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":0,"date":"2021-08-15T07:13:55.363Z","updated":"2021-08-15T08:03:56.840Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl5woimzc0005eou2fnzt38ps","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"quick-start\"><a class=\"markdownIt-Anchor\" href=\"#quick-start\"></a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"markdownIt-Anchor\" href=\"#create-a-new-post\"></a> Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"run-server\"><a class=\"markdownIt-Anchor\" href=\"#run-server\"></a> Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"generate-static-files\"><a class=\"markdownIt-Anchor\" href=\"#generate-static-files\"></a> Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"markdownIt-Anchor\" href=\"#deploy-to-remote-sites\"></a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"quick-start\"><a class=\"markdownIt-Anchor\" href=\"#quick-start\"></a> Quick Start</h2>\n<h3 id=\"create-a-new-post\"><a class=\"markdownIt-Anchor\" href=\"#create-a-new-post\"></a> Create a new post</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"run-server\"><a class=\"markdownIt-Anchor\" href=\"#run-server\"></a> Run server</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"generate-static-files\"><a class=\"markdownIt-Anchor\" href=\"#generate-static-files\"></a> Generate static files</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"deploy-to-remote-sites\"><a class=\"markdownIt-Anchor\" href=\"#deploy-to-remote-sites\"></a> Deploy to remote sites</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"UWP判断当前运行平台是XBox还是PC","date":"2022-07-22T15:08:54.000Z","_content":"\n## 前言\n\n其实这是个小众需求，因为XBox与PC间的差异非常少，对我日常开发来说几乎没有太多区别（除了XBox下没有处理的B键（游戏控制器）会导致退出应用😂）。\n\n<!--more-->\n\n因为XBox通常通过电视机来输出，且用户与电视距离会稍远（[参考链接](https://docs.microsoft.com/zh-cn/windows/apps/design/devices/designing-for-tv#ui-element-sizing)），所以为了让用户能够看清内容，XBox上的UWP的展示默认会放大两倍（**当然**你也可以[阻止自动缩放](https://docs.microsoft.com/zh-cn/windows/apps/design/devices/designing-for-tv#opting-out-of-scale-factor)），这会导致原来在PC下非常正常的布局在XBox下变得亲妈都不认识（指我自己🤣）。\n\n虽然最好的做法是使用自适应布局同时适配两个平台，但是考虑到额外多出来的时间成本🤔还是下次吧！\n\n所以我的思路就是根据不同平台来加载不同的资源字典（`ResouceDictionary`），应该好搞~\n\n## 判断设备类型\n\n``` csharp\nif(Windows.System.Profile.AnalyticsInfo.VersionInfo.DeviceFamily == \"Windows.Xbox\"){\n    //你的逻辑...\n}\n```\n其实我在Stackoverflow上有找到这个[问题](https://stackoverflow.com/a/69278888/7632913)，说是可以引用`Microsoft.Toolkit`工具包然后用`SystemInformation.DeviceFamily`来获取设备类型字符串，但是根据工具包的[源码](https://github.com/CommunityToolkit/WindowsCommunityToolkit/blob/rel/7.1.0/Microsoft.Toolkit.Uwp/Helpers/SystemInformation.cs#L53)，其实人家根本没做什么特殊操作，只是对`AnalyticsInfo.VersionInfo.DeviceFamily`封装了一下而已....可能因为这人是微软员工想推广自家的组件？🤔\n\n顺便吐槽一下为什么百度到的全是这样的结果？用`unity`的人多还是全都是爬虫复制的内容？\n\n{% asset_img p1.png %}\n\n## 根据设备类型加载不同的资源字典文件\n\n我这边在根目录下新增了`Theme`文件夹，同时在该文件夹下新增了`XBox.xaml`和`PC.xaml`这两个资源文件，部分代码：\n\n``` csharp App.xaml.cs\nprotected override void OnLaunched(LaunchActivatedEventArgs e)\n{\n    var family = AnalyticsInfo.VersionInfo.DeviceFamily;\n    //为XBox添加额外的样式（同时移除PC.xaml）\n    if (family == \"Windows.Xbox\")\n    {\n        var xboxRD = new ResourceDictionary();\n        xboxRD.Source = new Uri(\"ms-appx:///Theme/XBox.xaml\");\n        Application.Current.Resources.MergedDictionaries.Add(xboxRD);\n\n        var pcRD = Application.Current.Resources.MergedDictionaries.FirstOrDefault(x => x.ContainsKey(\"PC\"));\n        Application.Current.Resources.MergedDictionaries.Remove(pcRD);\n    }\n}\n```\n\n``` xml App.xaml\n<Application ...>\n    <Application.Resources>\n        <ResourceDictionary>\n            <ResourceDictionary.MergedDictionaries>\n                <ResourceDictionary Source=\"OtherStyle.xaml\"/>\n                <ResourceDictionary Source=\"Theme/PC.xaml\"/>\n            </ResourceDictionary.MergedDictionaries>\n        </ResourceDictionary >\n    </Application.Resources >\n</Application>\n```\n\n``` xml Theme/PC.xaml\n<ResourceDictionary\n    xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" \n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\">\n    <!-- 当前资源标识 -->\n    <x:Int32 x:Key=\"PC\">0</x:Int32>\n    <!-- 页面中使用到的资源 -->\n    <x:Double x:Key=\"PageMaxHeight\">550</x:Double>\n</ResourceDictionary>\n```\n``` xml Theme/XBox.xaml\n<ResourceDictionary\n    xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" \n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\">\n    <!-- 当前资源标识 -->\n    <x:Int32 x:Key=\"XBox\">0</x:Int32>\n    <!-- 页面中使用到的资源 -->\n    <x:Double x:Key=\"PageMaxHeight\">350</x:Double>\n</ResourceDictionary>\n```\n\n然后直接在页面中使用`{StaticResource PageMaxHeight}`就可以引用此资源来实现样式差异化处理了。\n\n其实对于合并资源的操作我在网上也没找到比较合适的代码，我这里是提前给资源字典里加了个`Key`来标识当前资源字典，比如`PC.xaml`里有个`PC`的资源，通过`Application.Current.Resources.MergedDictionaries.FirstOrDefault(x => x.ContainsKey(\"PC\"))`就可以定位到此资源。","source":"_posts/UWP判断当前运行平台是XBox还是PC.md","raw":"---\ntitle: UWP判断当前运行平台是XBox还是PC\ndate: 2022-07-22 23:08:54\ntags: UWP ResouceDictionary\n---\n\n## 前言\n\n其实这是个小众需求，因为XBox与PC间的差异非常少，对我日常开发来说几乎没有太多区别（除了XBox下没有处理的B键（游戏控制器）会导致退出应用😂）。\n\n<!--more-->\n\n因为XBox通常通过电视机来输出，且用户与电视距离会稍远（[参考链接](https://docs.microsoft.com/zh-cn/windows/apps/design/devices/designing-for-tv#ui-element-sizing)），所以为了让用户能够看清内容，XBox上的UWP的展示默认会放大两倍（**当然**你也可以[阻止自动缩放](https://docs.microsoft.com/zh-cn/windows/apps/design/devices/designing-for-tv#opting-out-of-scale-factor)），这会导致原来在PC下非常正常的布局在XBox下变得亲妈都不认识（指我自己🤣）。\n\n虽然最好的做法是使用自适应布局同时适配两个平台，但是考虑到额外多出来的时间成本🤔还是下次吧！\n\n所以我的思路就是根据不同平台来加载不同的资源字典（`ResouceDictionary`），应该好搞~\n\n## 判断设备类型\n\n``` csharp\nif(Windows.System.Profile.AnalyticsInfo.VersionInfo.DeviceFamily == \"Windows.Xbox\"){\n    //你的逻辑...\n}\n```\n其实我在Stackoverflow上有找到这个[问题](https://stackoverflow.com/a/69278888/7632913)，说是可以引用`Microsoft.Toolkit`工具包然后用`SystemInformation.DeviceFamily`来获取设备类型字符串，但是根据工具包的[源码](https://github.com/CommunityToolkit/WindowsCommunityToolkit/blob/rel/7.1.0/Microsoft.Toolkit.Uwp/Helpers/SystemInformation.cs#L53)，其实人家根本没做什么特殊操作，只是对`AnalyticsInfo.VersionInfo.DeviceFamily`封装了一下而已....可能因为这人是微软员工想推广自家的组件？🤔\n\n顺便吐槽一下为什么百度到的全是这样的结果？用`unity`的人多还是全都是爬虫复制的内容？\n\n{% asset_img p1.png %}\n\n## 根据设备类型加载不同的资源字典文件\n\n我这边在根目录下新增了`Theme`文件夹，同时在该文件夹下新增了`XBox.xaml`和`PC.xaml`这两个资源文件，部分代码：\n\n``` csharp App.xaml.cs\nprotected override void OnLaunched(LaunchActivatedEventArgs e)\n{\n    var family = AnalyticsInfo.VersionInfo.DeviceFamily;\n    //为XBox添加额外的样式（同时移除PC.xaml）\n    if (family == \"Windows.Xbox\")\n    {\n        var xboxRD = new ResourceDictionary();\n        xboxRD.Source = new Uri(\"ms-appx:///Theme/XBox.xaml\");\n        Application.Current.Resources.MergedDictionaries.Add(xboxRD);\n\n        var pcRD = Application.Current.Resources.MergedDictionaries.FirstOrDefault(x => x.ContainsKey(\"PC\"));\n        Application.Current.Resources.MergedDictionaries.Remove(pcRD);\n    }\n}\n```\n\n``` xml App.xaml\n<Application ...>\n    <Application.Resources>\n        <ResourceDictionary>\n            <ResourceDictionary.MergedDictionaries>\n                <ResourceDictionary Source=\"OtherStyle.xaml\"/>\n                <ResourceDictionary Source=\"Theme/PC.xaml\"/>\n            </ResourceDictionary.MergedDictionaries>\n        </ResourceDictionary >\n    </Application.Resources >\n</Application>\n```\n\n``` xml Theme/PC.xaml\n<ResourceDictionary\n    xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" \n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\">\n    <!-- 当前资源标识 -->\n    <x:Int32 x:Key=\"PC\">0</x:Int32>\n    <!-- 页面中使用到的资源 -->\n    <x:Double x:Key=\"PageMaxHeight\">550</x:Double>\n</ResourceDictionary>\n```\n``` xml Theme/XBox.xaml\n<ResourceDictionary\n    xmlns=\"http://schemas.microsoft.com/winfx/2006/xaml/presentation\" \n    xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\">\n    <!-- 当前资源标识 -->\n    <x:Int32 x:Key=\"XBox\">0</x:Int32>\n    <!-- 页面中使用到的资源 -->\n    <x:Double x:Key=\"PageMaxHeight\">350</x:Double>\n</ResourceDictionary>\n```\n\n然后直接在页面中使用`{StaticResource PageMaxHeight}`就可以引用此资源来实现样式差异化处理了。\n\n其实对于合并资源的操作我在网上也没找到比较合适的代码，我这里是提前给资源字典里加了个`Key`来标识当前资源字典，比如`PC.xaml`里有个`PC`的资源，通过`Application.Current.Resources.MergedDictionaries.FirstOrDefault(x => x.ContainsKey(\"PC\"))`就可以定位到此资源。","slug":"UWP判断当前运行平台是XBox还是PC","published":1,"updated":"2022-07-22T16:30:16.375Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl5woimzd0006eou2cpau8ust","content":"<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\"></a> 前言</h2>\n<p>其实这是个小众需求，因为XBox与PC间的差异非常少，对我日常开发来说几乎没有太多区别（除了XBox下没有处理的B键（游戏控制器）会导致退出应用😂）。</p>\n<span id=\"more\"></span>\n<p>因为XBox通常通过电视机来输出，且用户与电视距离会稍远（<a href=\"https://docs.microsoft.com/zh-cn/windows/apps/design/devices/designing-for-tv#ui-element-sizing\">参考链接</a>），所以为了让用户能够看清内容，XBox上的UWP的展示默认会放大两倍（<strong>当然</strong>你也可以<a href=\"https://docs.microsoft.com/zh-cn/windows/apps/design/devices/designing-for-tv#opting-out-of-scale-factor\">阻止自动缩放</a>），这会导致原来在PC下非常正常的布局在XBox下变得亲妈都不认识（指我自己🤣）。</p>\n<p>虽然最好的做法是使用自适应布局同时适配两个平台，但是考虑到额外多出来的时间成本🤔还是下次吧！</p>\n<p>所以我的思路就是根据不同平台来加载不同的资源字典（<code>ResouceDictionary</code>），应该好搞~</p>\n<h2 id=\"判断设备类型\"><a class=\"markdownIt-Anchor\" href=\"#判断设备类型\"></a> 判断设备类型</h2>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(Windows.System.Profile.AnalyticsInfo.VersionInfo.DeviceFamily == <span class=\"string\">&quot;Windows.Xbox&quot;</span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//你的逻辑...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其实我在Stackoverflow上有找到这个<a href=\"https://stackoverflow.com/a/69278888/7632913\">问题</a>，说是可以引用<code>Microsoft.Toolkit</code>工具包然后用<code>SystemInformation.DeviceFamily</code>来获取设备类型字符串，但是根据工具包的<a href=\"https://github.com/CommunityToolkit/WindowsCommunityToolkit/blob/rel/7.1.0/Microsoft.Toolkit.Uwp/Helpers/SystemInformation.cs#L53\">源码</a>，其实人家根本没做什么特殊操作，只是对<code>AnalyticsInfo.VersionInfo.DeviceFamily</code>封装了一下而已…可能因为这人是微软员工想推广自家的组件？🤔</p>\n<p>顺便吐槽一下为什么百度到的全是这样的结果？用<code>unity</code>的人多还是全都是爬虫复制的内容？</p>\n<img src=\"/UWP%E5%88%A4%E6%96%AD%E5%BD%93%E5%89%8D%E8%BF%90%E8%A1%8C%E5%B9%B3%E5%8F%B0%E6%98%AFXBox%E8%BF%98%E6%98%AFPC/p1.png\" class=\"\">\n<h2 id=\"根据设备类型加载不同的资源字典文件\"><a class=\"markdownIt-Anchor\" href=\"#根据设备类型加载不同的资源字典文件\"></a> 根据设备类型加载不同的资源字典文件</h2>\n<p>我这边在根目录下新增了<code>Theme</code>文件夹，同时在该文件夹下新增了<code>XBox.xaml</code>和<code>PC.xaml</code>这两个资源文件，部分代码：</p>\n<figure class=\"highlight csharp\"><figcaption><span>App.xaml.cs</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">override</span> <span class=\"keyword\">void</span> <span class=\"title\">OnLaunched</span>(<span class=\"params\">LaunchActivatedEventArgs e</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> family = AnalyticsInfo.VersionInfo.DeviceFamily;</span><br><span class=\"line\">    <span class=\"comment\">//为XBox添加额外的样式（同时移除PC.xaml）</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (family == <span class=\"string\">&quot;Windows.Xbox&quot;</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> xboxRD = <span class=\"keyword\">new</span> ResourceDictionary();</span><br><span class=\"line\">        xboxRD.Source = <span class=\"keyword\">new</span> Uri(<span class=\"string\">&quot;ms-appx:///Theme/XBox.xaml&quot;</span>);</span><br><span class=\"line\">        Application.Current.Resources.MergedDictionaries.Add(xboxRD);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">var</span> pcRD = Application.Current.Resources.MergedDictionaries.FirstOrDefault(x =&gt; x.ContainsKey(<span class=\"string\">&quot;PC&quot;</span>));</span><br><span class=\"line\">        Application.Current.Resources.MergedDictionaries.Remove(pcRD);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><figcaption><span>App.xaml</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Application</span> <span class=\"attr\">...</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Application.Resources</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ResourceDictionary</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">ResourceDictionary</span> <span class=\"attr\">Source</span>=<span class=\"string\">&quot;OtherStyle.xaml&quot;</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">ResourceDictionary</span> <span class=\"attr\">Source</span>=<span class=\"string\">&quot;Theme/PC.xaml&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class=\"line\">        &lt;/ResourceDictionary &gt;</span><br><span class=\"line\">    &lt;/Application.Resources &gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Application</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><figcaption><span>Theme/PC.xaml</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ResourceDictionary</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span> </span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:x</span>=<span class=\"string\">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 当前资源标识 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">x:Int32</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">&quot;PC&quot;</span>&gt;</span>0<span class=\"tag\">&lt;/<span class=\"name\">x:Int32</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 页面中使用到的资源 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">x:Double</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">&quot;PageMaxHeight&quot;</span>&gt;</span>550<span class=\"tag\">&lt;/<span class=\"name\">x:Double</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ResourceDictionary</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><figcaption><span>Theme/XBox.xaml</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ResourceDictionary</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span> </span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:x</span>=<span class=\"string\">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 当前资源标识 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">x:Int32</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">&quot;XBox&quot;</span>&gt;</span>0<span class=\"tag\">&lt;/<span class=\"name\">x:Int32</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 页面中使用到的资源 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">x:Double</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">&quot;PageMaxHeight&quot;</span>&gt;</span>350<span class=\"tag\">&lt;/<span class=\"name\">x:Double</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ResourceDictionary</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>然后直接在页面中使用<code>&#123;StaticResource PageMaxHeight&#125;</code>就可以引用此资源来实现样式差异化处理了。</p>\n<p>其实对于合并资源的操作我在网上也没找到比较合适的代码，我这里是提前给资源字典里加了个<code>Key</code>来标识当前资源字典，比如<code>PC.xaml</code>里有个<code>PC</code>的资源，通过<code>Application.Current.Resources.MergedDictionaries.FirstOrDefault(x =&gt; x.ContainsKey(&quot;PC&quot;))</code>就可以定位到此资源。</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\"></a> 前言</h2>\n<p>其实这是个小众需求，因为XBox与PC间的差异非常少，对我日常开发来说几乎没有太多区别（除了XBox下没有处理的B键（游戏控制器）会导致退出应用😂）。</p>","more":"<p>因为XBox通常通过电视机来输出，且用户与电视距离会稍远（<a href=\"https://docs.microsoft.com/zh-cn/windows/apps/design/devices/designing-for-tv#ui-element-sizing\">参考链接</a>），所以为了让用户能够看清内容，XBox上的UWP的展示默认会放大两倍（<strong>当然</strong>你也可以<a href=\"https://docs.microsoft.com/zh-cn/windows/apps/design/devices/designing-for-tv#opting-out-of-scale-factor\">阻止自动缩放</a>），这会导致原来在PC下非常正常的布局在XBox下变得亲妈都不认识（指我自己🤣）。</p>\n<p>虽然最好的做法是使用自适应布局同时适配两个平台，但是考虑到额外多出来的时间成本🤔还是下次吧！</p>\n<p>所以我的思路就是根据不同平台来加载不同的资源字典（<code>ResouceDictionary</code>），应该好搞~</p>\n<h2 id=\"判断设备类型\"><a class=\"markdownIt-Anchor\" href=\"#判断设备类型\"></a> 判断设备类型</h2>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(Windows.System.Profile.AnalyticsInfo.VersionInfo.DeviceFamily == <span class=\"string\">&quot;Windows.Xbox&quot;</span>)&#123;</span><br><span class=\"line\">    <span class=\"comment\">//你的逻辑...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>其实我在Stackoverflow上有找到这个<a href=\"https://stackoverflow.com/a/69278888/7632913\">问题</a>，说是可以引用<code>Microsoft.Toolkit</code>工具包然后用<code>SystemInformation.DeviceFamily</code>来获取设备类型字符串，但是根据工具包的<a href=\"https://github.com/CommunityToolkit/WindowsCommunityToolkit/blob/rel/7.1.0/Microsoft.Toolkit.Uwp/Helpers/SystemInformation.cs#L53\">源码</a>，其实人家根本没做什么特殊操作，只是对<code>AnalyticsInfo.VersionInfo.DeviceFamily</code>封装了一下而已…可能因为这人是微软员工想推广自家的组件？🤔</p>\n<p>顺便吐槽一下为什么百度到的全是这样的结果？用<code>unity</code>的人多还是全都是爬虫复制的内容？</p>\n<img src=\"/UWP%E5%88%A4%E6%96%AD%E5%BD%93%E5%89%8D%E8%BF%90%E8%A1%8C%E5%B9%B3%E5%8F%B0%E6%98%AFXBox%E8%BF%98%E6%98%AFPC/p1.png\" class=\"\">\n<h2 id=\"根据设备类型加载不同的资源字典文件\"><a class=\"markdownIt-Anchor\" href=\"#根据设备类型加载不同的资源字典文件\"></a> 根据设备类型加载不同的资源字典文件</h2>\n<p>我这边在根目录下新增了<code>Theme</code>文件夹，同时在该文件夹下新增了<code>XBox.xaml</code>和<code>PC.xaml</code>这两个资源文件，部分代码：</p>\n<figure class=\"highlight csharp\"><figcaption><span>App.xaml.cs</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">override</span> <span class=\"keyword\">void</span> <span class=\"title\">OnLaunched</span>(<span class=\"params\">LaunchActivatedEventArgs e</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> family = AnalyticsInfo.VersionInfo.DeviceFamily;</span><br><span class=\"line\">    <span class=\"comment\">//为XBox添加额外的样式（同时移除PC.xaml）</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (family == <span class=\"string\">&quot;Windows.Xbox&quot;</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> xboxRD = <span class=\"keyword\">new</span> ResourceDictionary();</span><br><span class=\"line\">        xboxRD.Source = <span class=\"keyword\">new</span> Uri(<span class=\"string\">&quot;ms-appx:///Theme/XBox.xaml&quot;</span>);</span><br><span class=\"line\">        Application.Current.Resources.MergedDictionaries.Add(xboxRD);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">var</span> pcRD = Application.Current.Resources.MergedDictionaries.FirstOrDefault(x =&gt; x.ContainsKey(<span class=\"string\">&quot;PC&quot;</span>));</span><br><span class=\"line\">        Application.Current.Resources.MergedDictionaries.Remove(pcRD);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><figcaption><span>App.xaml</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Application</span> <span class=\"attr\">...</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">Application.Resources</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ResourceDictionary</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">ResourceDictionary</span> <span class=\"attr\">Source</span>=<span class=\"string\">&quot;OtherStyle.xaml&quot;</span>/&gt;</span></span><br><span class=\"line\">                <span class=\"tag\">&lt;<span class=\"name\">ResourceDictionary</span> <span class=\"attr\">Source</span>=<span class=\"string\">&quot;Theme/PC.xaml&quot;</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">ResourceDictionary.MergedDictionaries</span>&gt;</span></span><br><span class=\"line\">        &lt;/ResourceDictionary &gt;</span><br><span class=\"line\">    &lt;/Application.Resources &gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Application</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><figcaption><span>Theme/PC.xaml</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ResourceDictionary</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span> </span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:x</span>=<span class=\"string\">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 当前资源标识 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">x:Int32</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">&quot;PC&quot;</span>&gt;</span>0<span class=\"tag\">&lt;/<span class=\"name\">x:Int32</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 页面中使用到的资源 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">x:Double</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">&quot;PageMaxHeight&quot;</span>&gt;</span>550<span class=\"tag\">&lt;/<span class=\"name\">x:Double</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ResourceDictionary</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight xml\"><figcaption><span>Theme/XBox.xaml</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">ResourceDictionary</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns</span>=<span class=\"string\">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span> </span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:x</span>=<span class=\"string\">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 当前资源标识 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">x:Int32</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">&quot;XBox&quot;</span>&gt;</span>0<span class=\"tag\">&lt;/<span class=\"name\">x:Int32</span>&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!-- 页面中使用到的资源 --&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">x:Double</span> <span class=\"attr\">x:Key</span>=<span class=\"string\">&quot;PageMaxHeight&quot;</span>&gt;</span>350<span class=\"tag\">&lt;/<span class=\"name\">x:Double</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">ResourceDictionary</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>然后直接在页面中使用<code>&#123;StaticResource PageMaxHeight&#125;</code>就可以引用此资源来实现样式差异化处理了。</p>\n<p>其实对于合并资源的操作我在网上也没找到比较合适的代码，我这里是提前给资源字典里加了个<code>Key</code>来标识当前资源字典，比如<code>PC.xaml</code>里有个<code>PC</code>的资源，通过<code>Application.Current.Resources.MergedDictionaries.FirstOrDefault(x =&gt; x.ContainsKey(&quot;PC&quot;))</code>就可以定位到此资源。</p>"},{"title":"WPF中不同文字显示不同颜色(高亮)","date":"2022-01-13T02:14:49.000Z","_content":"\n本文代码来自于 [Stackoverflow](https://stackoverflow.com/questions/751741/wpf-textblock-highlight-certain-parts-based-on-search-condition/60474831#60474831) @`Blechdose`，感谢！\n但由于代码不完全满足需求，所以稍改了一下，并未完整封装。\n\n### 功能概述：\n\n实现自动替换`TextBlock`内容中的多个占位符，并将替换后的字符高亮（样式自定义）。\n<!--more-->\n### 用例：\n``` xml\n <!--\n    若HighlightTermBehavior处于另外的类库中，则需额外添加此定义:\n    xmlns:MyControls=\"clr-namespace:MyControls;assembly=MyControls\"\n\n    另：HighlightTermBehavior.Text和TermToBeHighlighted也可使用动态或静态资源绑定\n -->\n <TextBlock TextWrapping=\"Wrap\" FontWeight=\"Bold\" FontSize=\"14\" Padding=\"10\" TextAlignment=\"Center\"\n            MyControls:HighlightTermBehavior.TermToBeHighlighted=\"PS|Options\"\n            MyControls:HighlightTermBehavior.Text=\"Press {0} and {1}\">\n </TextBlock>\n ```\n### 效果：\n\n{% asset_img 20220113_01.png 效果图 %}\n\n### 源码(`HighlightTermBehavior`)：\n``` csharp\nnamespace MyControls\n{\n    public static class HighlightTermBehavior\n    {\n        public static readonly DependencyProperty TextProperty = DependencyProperty.RegisterAttached(\n            \"Text\",\n            typeof(string),\n            typeof(HighlightTermBehavior),\n            new FrameworkPropertyMetadata(\"\", OnTextChanged));\n\n        public static string GetText(FrameworkElement frameworkElement) => (string)frameworkElement.GetValue(TextProperty);\n        public static void SetText(FrameworkElement frameworkElement, string value) => frameworkElement.SetValue(TextProperty, value);\n\n\n        public static readonly DependencyProperty TermToBeHighlightedProperty = DependencyProperty.RegisterAttached(\n            \"TermToBeHighlighted\",\n            typeof(string),\n            typeof(HighlightTermBehavior),\n            new FrameworkPropertyMetadata(\"\", OnTextChanged));\n\n        public static string GetTermToBeHighlighted(FrameworkElement frameworkElement)\n        {\n            return (string)frameworkElement.GetValue(TermToBeHighlightedProperty);\n        }\n\n        public static void SetTermToBeHighlighted(FrameworkElement frameworkElement, string value)\n        {\n            frameworkElement.SetValue(TermToBeHighlightedProperty, value);\n        }\n\n\n        private static void OnTextChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)\n        {\n            if (d is TextBlock textBlock)\n                SetTextBlockTextAndHighlightTerm(textBlock, GetText(textBlock), GetTermToBeHighlighted(textBlock));\n        }\n\n        private static void SetTextBlockTextAndHighlightTerm(TextBlock textBlock, string text, string termToBeHighlighted)\n        {\n            textBlock.Text = string.Empty;\n\n            if (string.IsNullOrEmpty(text))\n                return;\n            //此处使用“|”将需要高亮的字符串分割成参数数组，然后使用string.Format进行格式化，可自行调整\n            text = string.Format(text, termToBeHighlighted.Split('|'));\n\n            var textParts = SplitTextIntoTermAndNotTermParts(text, termToBeHighlighted);\n\n            foreach (var textPart in textParts)\n                AddPartToTextBlockAndHighlightIfNecessary(textBlock, termToBeHighlighted, textPart);\n        }\n\n        private static void AddPartToTextBlockAndHighlightIfNecessary(TextBlock textBlock, string termToBeHighlighted, string textPart)\n        {\n            if (termToBeHighlighted.Contains(textPart))\n                AddHighlightedPartToTextBlock(textBlock, textPart);\n            else\n                AddPartToTextBlock(textBlock, textPart);\n        }\n\n        private static void AddPartToTextBlock(TextBlock textBlock, string part)\n        {\n            //此处样式为硬编码，有待优化🤣\n            textBlock.Inlines.Add(new Run { Text = part, FontWeight = FontWeights.Bold, Foreground = new SolidColorBrush(Color.FromRgb(0, 0, 0)) });\n        }\n\n        private static void AddHighlightedPartToTextBlock(TextBlock textBlock, string part)\n        {\n            //此处样式为硬编码，有待优化🤣\n            textBlock.Inlines.Add(new Run { Text = part, FontWeight = FontWeights.Bold, Foreground = new SolidColorBrush(Color.FromRgb(0xFF, 0, 0)) });\n        }\n\n\n        public static List<string> SplitTextIntoTermAndNotTermParts(string text, string term)\n        {\n            if (string.IsNullOrEmpty(text))\n                return new List<string>() { string.Empty };\n\n            return Regex.Split(text, $@\"({term})\")\n                        .Where(p => p != string.Empty)\n                        .ToList();\n        }\n    }\n}\n```","source":"_posts/WPF中不同文字显示不同颜色-高亮.md","raw":"---\ntitle: WPF中不同文字显示不同颜色(高亮)\ndate: 2022-01-13 10:14:49\ntags: [WPF]\n---\n\n本文代码来自于 [Stackoverflow](https://stackoverflow.com/questions/751741/wpf-textblock-highlight-certain-parts-based-on-search-condition/60474831#60474831) @`Blechdose`，感谢！\n但由于代码不完全满足需求，所以稍改了一下，并未完整封装。\n\n### 功能概述：\n\n实现自动替换`TextBlock`内容中的多个占位符，并将替换后的字符高亮（样式自定义）。\n<!--more-->\n### 用例：\n``` xml\n <!--\n    若HighlightTermBehavior处于另外的类库中，则需额外添加此定义:\n    xmlns:MyControls=\"clr-namespace:MyControls;assembly=MyControls\"\n\n    另：HighlightTermBehavior.Text和TermToBeHighlighted也可使用动态或静态资源绑定\n -->\n <TextBlock TextWrapping=\"Wrap\" FontWeight=\"Bold\" FontSize=\"14\" Padding=\"10\" TextAlignment=\"Center\"\n            MyControls:HighlightTermBehavior.TermToBeHighlighted=\"PS|Options\"\n            MyControls:HighlightTermBehavior.Text=\"Press {0} and {1}\">\n </TextBlock>\n ```\n### 效果：\n\n{% asset_img 20220113_01.png 效果图 %}\n\n### 源码(`HighlightTermBehavior`)：\n``` csharp\nnamespace MyControls\n{\n    public static class HighlightTermBehavior\n    {\n        public static readonly DependencyProperty TextProperty = DependencyProperty.RegisterAttached(\n            \"Text\",\n            typeof(string),\n            typeof(HighlightTermBehavior),\n            new FrameworkPropertyMetadata(\"\", OnTextChanged));\n\n        public static string GetText(FrameworkElement frameworkElement) => (string)frameworkElement.GetValue(TextProperty);\n        public static void SetText(FrameworkElement frameworkElement, string value) => frameworkElement.SetValue(TextProperty, value);\n\n\n        public static readonly DependencyProperty TermToBeHighlightedProperty = DependencyProperty.RegisterAttached(\n            \"TermToBeHighlighted\",\n            typeof(string),\n            typeof(HighlightTermBehavior),\n            new FrameworkPropertyMetadata(\"\", OnTextChanged));\n\n        public static string GetTermToBeHighlighted(FrameworkElement frameworkElement)\n        {\n            return (string)frameworkElement.GetValue(TermToBeHighlightedProperty);\n        }\n\n        public static void SetTermToBeHighlighted(FrameworkElement frameworkElement, string value)\n        {\n            frameworkElement.SetValue(TermToBeHighlightedProperty, value);\n        }\n\n\n        private static void OnTextChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)\n        {\n            if (d is TextBlock textBlock)\n                SetTextBlockTextAndHighlightTerm(textBlock, GetText(textBlock), GetTermToBeHighlighted(textBlock));\n        }\n\n        private static void SetTextBlockTextAndHighlightTerm(TextBlock textBlock, string text, string termToBeHighlighted)\n        {\n            textBlock.Text = string.Empty;\n\n            if (string.IsNullOrEmpty(text))\n                return;\n            //此处使用“|”将需要高亮的字符串分割成参数数组，然后使用string.Format进行格式化，可自行调整\n            text = string.Format(text, termToBeHighlighted.Split('|'));\n\n            var textParts = SplitTextIntoTermAndNotTermParts(text, termToBeHighlighted);\n\n            foreach (var textPart in textParts)\n                AddPartToTextBlockAndHighlightIfNecessary(textBlock, termToBeHighlighted, textPart);\n        }\n\n        private static void AddPartToTextBlockAndHighlightIfNecessary(TextBlock textBlock, string termToBeHighlighted, string textPart)\n        {\n            if (termToBeHighlighted.Contains(textPart))\n                AddHighlightedPartToTextBlock(textBlock, textPart);\n            else\n                AddPartToTextBlock(textBlock, textPart);\n        }\n\n        private static void AddPartToTextBlock(TextBlock textBlock, string part)\n        {\n            //此处样式为硬编码，有待优化🤣\n            textBlock.Inlines.Add(new Run { Text = part, FontWeight = FontWeights.Bold, Foreground = new SolidColorBrush(Color.FromRgb(0, 0, 0)) });\n        }\n\n        private static void AddHighlightedPartToTextBlock(TextBlock textBlock, string part)\n        {\n            //此处样式为硬编码，有待优化🤣\n            textBlock.Inlines.Add(new Run { Text = part, FontWeight = FontWeights.Bold, Foreground = new SolidColorBrush(Color.FromRgb(0xFF, 0, 0)) });\n        }\n\n\n        public static List<string> SplitTextIntoTermAndNotTermParts(string text, string term)\n        {\n            if (string.IsNullOrEmpty(text))\n                return new List<string>() { string.Empty };\n\n            return Regex.Split(text, $@\"({term})\")\n                        .Where(p => p != string.Empty)\n                        .ToList();\n        }\n    }\n}\n```","slug":"WPF中不同文字显示不同颜色-高亮","published":1,"updated":"2022-07-22T14:54:09.564Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl5woimze0009eou2godggp33","content":"<p>本文代码来自于 <a href=\"https://stackoverflow.com/questions/751741/wpf-textblock-highlight-certain-parts-based-on-search-condition/60474831#60474831\">Stackoverflow</a> @<code>Blechdose</code>，感谢！<br />\n但由于代码不完全满足需求，所以稍改了一下，并未完整封装。</p>\n<h3 id=\"功能概述\"><a class=\"markdownIt-Anchor\" href=\"#功能概述\"></a> 功能概述：</h3>\n<p>实现自动替换<code>TextBlock</code>内容中的多个占位符，并将替换后的字符高亮（样式自定义）。</p>\n<span id=\"more\"></span>\n<h3 id=\"用例\"><a class=\"markdownIt-Anchor\" href=\"#用例\"></a> 用例：</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">   若HighlightTermBehavior处于另外的类库中，则需额外添加此定义:</span></span><br><span class=\"line\"><span class=\"comment\">   xmlns:MyControls=&quot;clr-namespace:MyControls;assembly=MyControls&quot;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">   另：HighlightTermBehavior.Text和TermToBeHighlighted也可使用动态或静态资源绑定</span></span><br><span class=\"line\"><span class=\"comment\">--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">TextWrapping</span>=<span class=\"string\">&quot;Wrap&quot;</span> <span class=\"attr\">FontWeight</span>=<span class=\"string\">&quot;Bold&quot;</span> <span class=\"attr\">FontSize</span>=<span class=\"string\">&quot;14&quot;</span> <span class=\"attr\">Padding</span>=<span class=\"string\">&quot;10&quot;</span> <span class=\"attr\">TextAlignment</span>=<span class=\"string\">&quot;Center&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">           <span class=\"attr\">MyControls:HighlightTermBehavior.TermToBeHighlighted</span>=<span class=\"string\">&quot;PS|Options&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">           <span class=\"attr\">MyControls:HighlightTermBehavior.Text</span>=<span class=\"string\">&quot;Press &#123;0&#125; and &#123;1&#125;&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">TextBlock</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"效果\"><a class=\"markdownIt-Anchor\" href=\"#效果\"></a> 效果：</h3>\n<img src=\"/WPF%E4%B8%AD%E4%B8%8D%E5%90%8C%E6%96%87%E5%AD%97%E6%98%BE%E7%A4%BA%E4%B8%8D%E5%90%8C%E9%A2%9C%E8%89%B2-%E9%AB%98%E4%BA%AE/20220113_01.png\" class=\"\" title=\"效果图\">\n<h3 id=\"源码highlighttermbehavior\"><a class=\"markdownIt-Anchor\" href=\"#源码highlighttermbehavior\"></a> 源码(<code>HighlightTermBehavior</code>)：</h3>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">MyControls</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title\">HighlightTermBehavior</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> DependencyProperty TextProperty = DependencyProperty.RegisterAttached(</span><br><span class=\"line\">            <span class=\"string\">&quot;Text&quot;</span>,</span><br><span class=\"line\">            <span class=\"keyword\">typeof</span>(<span class=\"built_in\">string</span>),</span><br><span class=\"line\">            <span class=\"keyword\">typeof</span>(HighlightTermBehavior),</span><br><span class=\"line\">            <span class=\"keyword\">new</span> FrameworkPropertyMetadata(<span class=\"string\">&quot;&quot;</span>, OnTextChanged));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">GetText</span>(<span class=\"params\">FrameworkElement frameworkElement</span>)</span> =&gt; (<span class=\"built_in\">string</span>)frameworkElement.GetValue(TextProperty);</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">SetText</span>(<span class=\"params\">FrameworkElement frameworkElement, <span class=\"built_in\">string</span> <span class=\"keyword\">value</span></span>)</span> =&gt; frameworkElement.SetValue(TextProperty, <span class=\"keyword\">value</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> DependencyProperty TermToBeHighlightedProperty = DependencyProperty.RegisterAttached(</span><br><span class=\"line\">            <span class=\"string\">&quot;TermToBeHighlighted&quot;</span>,</span><br><span class=\"line\">            <span class=\"keyword\">typeof</span>(<span class=\"built_in\">string</span>),</span><br><span class=\"line\">            <span class=\"keyword\">typeof</span>(HighlightTermBehavior),</span><br><span class=\"line\">            <span class=\"keyword\">new</span> FrameworkPropertyMetadata(<span class=\"string\">&quot;&quot;</span>, OnTextChanged));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">GetTermToBeHighlighted</span>(<span class=\"params\">FrameworkElement frameworkElement</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> (<span class=\"built_in\">string</span>)frameworkElement.GetValue(TermToBeHighlightedProperty);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">SetTermToBeHighlighted</span>(<span class=\"params\">FrameworkElement frameworkElement, <span class=\"built_in\">string</span> <span class=\"keyword\">value</span></span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            frameworkElement.SetValue(TermToBeHighlightedProperty, <span class=\"keyword\">value</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">OnTextChanged</span>(<span class=\"params\">DependencyObject d, DependencyPropertyChangedEventArgs e</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (d <span class=\"keyword\">is</span> TextBlock textBlock)</span><br><span class=\"line\">                SetTextBlockTextAndHighlightTerm(textBlock, GetText(textBlock), GetTermToBeHighlighted(textBlock));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">SetTextBlockTextAndHighlightTerm</span>(<span class=\"params\">TextBlock textBlock, <span class=\"built_in\">string</span> text, <span class=\"built_in\">string</span> termToBeHighlighted</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            textBlock.Text = <span class=\"built_in\">string</span>.Empty;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"built_in\">string</span>.IsNullOrEmpty(text))</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            <span class=\"comment\">//此处使用“|”将需要高亮的字符串分割成参数数组，然后使用string.Format进行格式化，可自行调整</span></span><br><span class=\"line\">            text = <span class=\"built_in\">string</span>.Format(text, termToBeHighlighted.Split(<span class=\"string\">&#x27;|&#x27;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> textParts = SplitTextIntoTermAndNotTermParts(text, termToBeHighlighted);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> textPart <span class=\"keyword\">in</span> textParts)</span><br><span class=\"line\">                AddPartToTextBlockAndHighlightIfNecessary(textBlock, termToBeHighlighted, textPart);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">AddPartToTextBlockAndHighlightIfNecessary</span>(<span class=\"params\">TextBlock textBlock, <span class=\"built_in\">string</span> termToBeHighlighted, <span class=\"built_in\">string</span> textPart</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (termToBeHighlighted.Contains(textPart))</span><br><span class=\"line\">                AddHighlightedPartToTextBlock(textBlock, textPart);</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                AddPartToTextBlock(textBlock, textPart);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">AddPartToTextBlock</span>(<span class=\"params\">TextBlock textBlock, <span class=\"built_in\">string</span> part</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//此处样式为硬编码，有待优化🤣</span></span><br><span class=\"line\">            textBlock.Inlines.Add(<span class=\"keyword\">new</span> Run &#123; Text = part, FontWeight = FontWeights.Bold, Foreground = <span class=\"keyword\">new</span> SolidColorBrush(Color.FromRgb(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>)) &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">AddHighlightedPartToTextBlock</span>(<span class=\"params\">TextBlock textBlock, <span class=\"built_in\">string</span> part</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//此处样式为硬编码，有待优化🤣</span></span><br><span class=\"line\">            textBlock.Inlines.Add(<span class=\"keyword\">new</span> Run &#123; Text = part, FontWeight = FontWeights.Bold, Foreground = <span class=\"keyword\">new</span> SolidColorBrush(Color.FromRgb(<span class=\"number\">0xFF</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>)) &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> List&lt;<span class=\"built_in\">string</span>&gt; <span class=\"title\">SplitTextIntoTermAndNotTermParts</span>(<span class=\"params\"><span class=\"built_in\">string</span> text, <span class=\"built_in\">string</span> term</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"built_in\">string</span>.IsNullOrEmpty(text))</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> List&lt;<span class=\"built_in\">string</span>&gt;() &#123; <span class=\"built_in\">string</span>.Empty &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> Regex.Split(text, <span class=\"string\">$@&quot;(<span class=\"subst\">&#123;term&#125;</span>)&quot;</span>)</span><br><span class=\"line\">                        .Where(p =&gt; p != <span class=\"built_in\">string</span>.Empty)</span><br><span class=\"line\">                        .ToList();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>本文代码来自于 <a href=\"https://stackoverflow.com/questions/751741/wpf-textblock-highlight-certain-parts-based-on-search-condition/60474831#60474831\">Stackoverflow</a> @<code>Blechdose</code>，感谢！<br />\n但由于代码不完全满足需求，所以稍改了一下，并未完整封装。</p>\n<h3 id=\"功能概述\"><a class=\"markdownIt-Anchor\" href=\"#功能概述\"></a> 功能概述：</h3>\n<p>实现自动替换<code>TextBlock</code>内容中的多个占位符，并将替换后的字符高亮（样式自定义）。</p>","more":"<h3 id=\"用例\"><a class=\"markdownIt-Anchor\" href=\"#用例\"></a> 用例：</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">   若HighlightTermBehavior处于另外的类库中，则需额外添加此定义:</span></span><br><span class=\"line\"><span class=\"comment\">   xmlns:MyControls=&quot;clr-namespace:MyControls;assembly=MyControls&quot;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">   另：HighlightTermBehavior.Text和TermToBeHighlighted也可使用动态或静态资源绑定</span></span><br><span class=\"line\"><span class=\"comment\">--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">TextWrapping</span>=<span class=\"string\">&quot;Wrap&quot;</span> <span class=\"attr\">FontWeight</span>=<span class=\"string\">&quot;Bold&quot;</span> <span class=\"attr\">FontSize</span>=<span class=\"string\">&quot;14&quot;</span> <span class=\"attr\">Padding</span>=<span class=\"string\">&quot;10&quot;</span> <span class=\"attr\">TextAlignment</span>=<span class=\"string\">&quot;Center&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">           <span class=\"attr\">MyControls:HighlightTermBehavior.TermToBeHighlighted</span>=<span class=\"string\">&quot;PS|Options&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">           <span class=\"attr\">MyControls:HighlightTermBehavior.Text</span>=<span class=\"string\">&quot;Press &#123;0&#125; and &#123;1&#125;&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">TextBlock</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"效果\"><a class=\"markdownIt-Anchor\" href=\"#效果\"></a> 效果：</h3>\n<img src=\"/WPF%E4%B8%AD%E4%B8%8D%E5%90%8C%E6%96%87%E5%AD%97%E6%98%BE%E7%A4%BA%E4%B8%8D%E5%90%8C%E9%A2%9C%E8%89%B2-%E9%AB%98%E4%BA%AE/20220113_01.png\" class=\"\" title=\"效果图\">\n<h3 id=\"源码highlighttermbehavior\"><a class=\"markdownIt-Anchor\" href=\"#源码highlighttermbehavior\"></a> 源码(<code>HighlightTermBehavior</code>)：</h3>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">MyControls</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title\">HighlightTermBehavior</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> DependencyProperty TextProperty = DependencyProperty.RegisterAttached(</span><br><span class=\"line\">            <span class=\"string\">&quot;Text&quot;</span>,</span><br><span class=\"line\">            <span class=\"keyword\">typeof</span>(<span class=\"built_in\">string</span>),</span><br><span class=\"line\">            <span class=\"keyword\">typeof</span>(HighlightTermBehavior),</span><br><span class=\"line\">            <span class=\"keyword\">new</span> FrameworkPropertyMetadata(<span class=\"string\">&quot;&quot;</span>, OnTextChanged));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">GetText</span>(<span class=\"params\">FrameworkElement frameworkElement</span>)</span> =&gt; (<span class=\"built_in\">string</span>)frameworkElement.GetValue(TextProperty);</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">SetText</span>(<span class=\"params\">FrameworkElement frameworkElement, <span class=\"built_in\">string</span> <span class=\"keyword\">value</span></span>)</span> =&gt; frameworkElement.SetValue(TextProperty, <span class=\"keyword\">value</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> DependencyProperty TermToBeHighlightedProperty = DependencyProperty.RegisterAttached(</span><br><span class=\"line\">            <span class=\"string\">&quot;TermToBeHighlighted&quot;</span>,</span><br><span class=\"line\">            <span class=\"keyword\">typeof</span>(<span class=\"built_in\">string</span>),</span><br><span class=\"line\">            <span class=\"keyword\">typeof</span>(HighlightTermBehavior),</span><br><span class=\"line\">            <span class=\"keyword\">new</span> FrameworkPropertyMetadata(<span class=\"string\">&quot;&quot;</span>, OnTextChanged));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">GetTermToBeHighlighted</span>(<span class=\"params\">FrameworkElement frameworkElement</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> (<span class=\"built_in\">string</span>)frameworkElement.GetValue(TermToBeHighlightedProperty);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">SetTermToBeHighlighted</span>(<span class=\"params\">FrameworkElement frameworkElement, <span class=\"built_in\">string</span> <span class=\"keyword\">value</span></span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            frameworkElement.SetValue(TermToBeHighlightedProperty, <span class=\"keyword\">value</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">OnTextChanged</span>(<span class=\"params\">DependencyObject d, DependencyPropertyChangedEventArgs e</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (d <span class=\"keyword\">is</span> TextBlock textBlock)</span><br><span class=\"line\">                SetTextBlockTextAndHighlightTerm(textBlock, GetText(textBlock), GetTermToBeHighlighted(textBlock));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">SetTextBlockTextAndHighlightTerm</span>(<span class=\"params\">TextBlock textBlock, <span class=\"built_in\">string</span> text, <span class=\"built_in\">string</span> termToBeHighlighted</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            textBlock.Text = <span class=\"built_in\">string</span>.Empty;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"built_in\">string</span>.IsNullOrEmpty(text))</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            <span class=\"comment\">//此处使用“|”将需要高亮的字符串分割成参数数组，然后使用string.Format进行格式化，可自行调整</span></span><br><span class=\"line\">            text = <span class=\"built_in\">string</span>.Format(text, termToBeHighlighted.Split(<span class=\"string\">&#x27;|&#x27;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> textParts = SplitTextIntoTermAndNotTermParts(text, termToBeHighlighted);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> textPart <span class=\"keyword\">in</span> textParts)</span><br><span class=\"line\">                AddPartToTextBlockAndHighlightIfNecessary(textBlock, termToBeHighlighted, textPart);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">AddPartToTextBlockAndHighlightIfNecessary</span>(<span class=\"params\">TextBlock textBlock, <span class=\"built_in\">string</span> termToBeHighlighted, <span class=\"built_in\">string</span> textPart</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (termToBeHighlighted.Contains(textPart))</span><br><span class=\"line\">                AddHighlightedPartToTextBlock(textBlock, textPart);</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                AddPartToTextBlock(textBlock, textPart);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">AddPartToTextBlock</span>(<span class=\"params\">TextBlock textBlock, <span class=\"built_in\">string</span> part</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//此处样式为硬编码，有待优化🤣</span></span><br><span class=\"line\">            textBlock.Inlines.Add(<span class=\"keyword\">new</span> Run &#123; Text = part, FontWeight = FontWeights.Bold, Foreground = <span class=\"keyword\">new</span> SolidColorBrush(Color.FromRgb(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>)) &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">AddHighlightedPartToTextBlock</span>(<span class=\"params\">TextBlock textBlock, <span class=\"built_in\">string</span> part</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//此处样式为硬编码，有待优化🤣</span></span><br><span class=\"line\">            textBlock.Inlines.Add(<span class=\"keyword\">new</span> Run &#123; Text = part, FontWeight = FontWeights.Bold, Foreground = <span class=\"keyword\">new</span> SolidColorBrush(Color.FromRgb(<span class=\"number\">0xFF</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>)) &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> List&lt;<span class=\"built_in\">string</span>&gt; <span class=\"title\">SplitTextIntoTermAndNotTermParts</span>(<span class=\"params\"><span class=\"built_in\">string</span> text, <span class=\"built_in\">string</span> term</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"built_in\">string</span>.IsNullOrEmpty(text))</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> List&lt;<span class=\"built_in\">string</span>&gt;() &#123; <span class=\"built_in\">string</span>.Empty &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> Regex.Split(text, <span class=\"string\">$@&quot;(<span class=\"subst\">&#123;term&#125;</span>)&quot;</span>)</span><br><span class=\"line\">                        .Where(p =&gt; p != <span class=\"built_in\">string</span>.Empty)</span><br><span class=\"line\">                        .ToList();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"安装Framework或远程调试工具时出现 '处理证书链,但是在不受信任提供程序信任的根证书中终止...'","date":"2021-08-16T09:59:15.000Z","_content":"\n今天发现一个WPF程序在Win7上有兼容性问题，但是从log看不出有啥问题，于是搭了一个Win7的虚拟机环境，但上去装[Visual Studio 2019远程调试工具](https://visualstudio.microsoft.com/zh-hans/downloads/#remote-tools-for-visual-studio-2019)时竟然提示“处理证书链,但是在不受信任提供程序信任的根证书中终止...”，心想这不会是个流氓软件吧？但我是从MS官网下载的啊...找了goole一下，应该是**vs2019调试工具中的证书在win7的证书库中不存在**导致的，因为无论是vs2019还是Framework 4.5.2+，这都是Win 10的产物了，故win7上表现异常也是能理解的。\n<!--more-->\n\n于是在MS上下载这个证书安装即可：[下载地址](http://go.microsoft.com/fwlink/?linkid=747875&clcid=0x409)\n\n### 安装步骤：\n\n1. 单击选择证书=>右键=>安装证书\n{% asset_img 2021081601.png 安装证书 %}\n2. 选择存储位置“本地计算机”，点击下一步\n3. 选择“将所有的证书都放入下列存储”，点击“浏览”\n4. 选择“受信任的根证书颁发机构”，点击确定\n{% asset_img 2021081602.png 安装证书 %}\n5. 点击“下一步”，点击“完成”\n6. 尝试重新安装程序","source":"_posts/安装Framework或远程调试工具时出现-处理证书链-但是在不受信任提供程序信任的根证书中终止.md","raw":"---\ntitle: '安装Framework或远程调试工具时出现 ''处理证书链,但是在不受信任提供程序信任的根证书中终止...'''\ndate: 2021-08-16 17:59:15\ntags: .NET\n---\n\n今天发现一个WPF程序在Win7上有兼容性问题，但是从log看不出有啥问题，于是搭了一个Win7的虚拟机环境，但上去装[Visual Studio 2019远程调试工具](https://visualstudio.microsoft.com/zh-hans/downloads/#remote-tools-for-visual-studio-2019)时竟然提示“处理证书链,但是在不受信任提供程序信任的根证书中终止...”，心想这不会是个流氓软件吧？但我是从MS官网下载的啊...找了goole一下，应该是**vs2019调试工具中的证书在win7的证书库中不存在**导致的，因为无论是vs2019还是Framework 4.5.2+，这都是Win 10的产物了，故win7上表现异常也是能理解的。\n<!--more-->\n\n于是在MS上下载这个证书安装即可：[下载地址](http://go.microsoft.com/fwlink/?linkid=747875&clcid=0x409)\n\n### 安装步骤：\n\n1. 单击选择证书=>右键=>安装证书\n{% asset_img 2021081601.png 安装证书 %}\n2. 选择存储位置“本地计算机”，点击下一步\n3. 选择“将所有的证书都放入下列存储”，点击“浏览”\n4. 选择“受信任的根证书颁发机构”，点击确定\n{% asset_img 2021081602.png 安装证书 %}\n5. 点击“下一步”，点击“完成”\n6. 尝试重新安装程序","slug":"安装Framework或远程调试工具时出现-处理证书链-但是在不受信任提供程序信任的根证书中终止","published":1,"updated":"2022-07-22T14:54:09.565Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl5woimzf000aeou251vgbr74","content":"<p>今天发现一个WPF程序在Win7上有兼容性问题，但是从log看不出有啥问题，于是搭了一个Win7的虚拟机环境，但上去装<a href=\"https://visualstudio.microsoft.com/zh-hans/downloads/#remote-tools-for-visual-studio-2019\">Visual Studio 2019远程调试工具</a>时竟然提示“处理证书链,但是在不受信任提供程序信任的根证书中终止…”，心想这不会是个流氓软件吧？但我是从MS官网下载的啊…找了goole一下，应该是<strong>vs2019调试工具中的证书在win7的证书库中不存在</strong>导致的，因为无论是vs2019还是Framework 4.5.2+，这都是Win 10的产物了，故win7上表现异常也是能理解的。</p>\n<span id=\"more\"></span>\n<p>于是在MS上下载这个证书安装即可：<a href=\"http://go.microsoft.com/fwlink/?linkid=747875&amp;clcid=0x409\">下载地址</a></p>\n<h3 id=\"安装步骤\"><a class=\"markdownIt-Anchor\" href=\"#安装步骤\"></a> 安装步骤：</h3>\n<ol>\n<li>单击选择证书=&gt;右键=&gt;安装证书</li>\n</ol>\n<img src=\"/%E5%AE%89%E8%A3%85Framework%E6%88%96%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7%E6%97%B6%E5%87%BA%E7%8E%B0-%E5%A4%84%E7%90%86%E8%AF%81%E4%B9%A6%E9%93%BE-%E4%BD%86%E6%98%AF%E5%9C%A8%E4%B8%8D%E5%8F%97%E4%BF%A1%E4%BB%BB%E6%8F%90%E4%BE%9B%E7%A8%8B%E5%BA%8F%E4%BF%A1%E4%BB%BB%E7%9A%84%E6%A0%B9%E8%AF%81%E4%B9%A6%E4%B8%AD%E7%BB%88%E6%AD%A2/2021081601.png\" class=\"\" title=\"安装证书\">\n<ol start=\"2\">\n<li>选择存储位置“本地计算机”，点击下一步</li>\n<li>选择“将所有的证书都放入下列存储”，点击“浏览”</li>\n<li>选择“受信任的根证书颁发机构”，点击确定</li>\n</ol>\n<img src=\"/%E5%AE%89%E8%A3%85Framework%E6%88%96%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7%E6%97%B6%E5%87%BA%E7%8E%B0-%E5%A4%84%E7%90%86%E8%AF%81%E4%B9%A6%E9%93%BE-%E4%BD%86%E6%98%AF%E5%9C%A8%E4%B8%8D%E5%8F%97%E4%BF%A1%E4%BB%BB%E6%8F%90%E4%BE%9B%E7%A8%8B%E5%BA%8F%E4%BF%A1%E4%BB%BB%E7%9A%84%E6%A0%B9%E8%AF%81%E4%B9%A6%E4%B8%AD%E7%BB%88%E6%AD%A2/2021081602.png\" class=\"\" title=\"安装证书\">\n<ol start=\"5\">\n<li>点击“下一步”，点击“完成”</li>\n<li>尝试重新安装程序</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>今天发现一个WPF程序在Win7上有兼容性问题，但是从log看不出有啥问题，于是搭了一个Win7的虚拟机环境，但上去装<a href=\"https://visualstudio.microsoft.com/zh-hans/downloads/#remote-tools-for-visual-studio-2019\">Visual Studio 2019远程调试工具</a>时竟然提示“处理证书链,但是在不受信任提供程序信任的根证书中终止…”，心想这不会是个流氓软件吧？但我是从MS官网下载的啊…找了goole一下，应该是<strong>vs2019调试工具中的证书在win7的证书库中不存在</strong>导致的，因为无论是vs2019还是Framework 4.5.2+，这都是Win 10的产物了，故win7上表现异常也是能理解的。</p>","more":"<p>于是在MS上下载这个证书安装即可：<a href=\"http://go.microsoft.com/fwlink/?linkid=747875&amp;clcid=0x409\">下载地址</a></p>\n<h3 id=\"安装步骤\"><a class=\"markdownIt-Anchor\" href=\"#安装步骤\"></a> 安装步骤：</h3>\n<ol>\n<li>单击选择证书=&gt;右键=&gt;安装证书</li>\n</ol>\n<img src=\"/%E5%AE%89%E8%A3%85Framework%E6%88%96%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7%E6%97%B6%E5%87%BA%E7%8E%B0-%E5%A4%84%E7%90%86%E8%AF%81%E4%B9%A6%E9%93%BE-%E4%BD%86%E6%98%AF%E5%9C%A8%E4%B8%8D%E5%8F%97%E4%BF%A1%E4%BB%BB%E6%8F%90%E4%BE%9B%E7%A8%8B%E5%BA%8F%E4%BF%A1%E4%BB%BB%E7%9A%84%E6%A0%B9%E8%AF%81%E4%B9%A6%E4%B8%AD%E7%BB%88%E6%AD%A2/2021081601.png\" class=\"\" title=\"安装证书\">\n<ol start=\"2\">\n<li>选择存储位置“本地计算机”，点击下一步</li>\n<li>选择“将所有的证书都放入下列存储”，点击“浏览”</li>\n<li>选择“受信任的根证书颁发机构”，点击确定</li>\n</ol>\n<img src=\"/%E5%AE%89%E8%A3%85Framework%E6%88%96%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7%E6%97%B6%E5%87%BA%E7%8E%B0-%E5%A4%84%E7%90%86%E8%AF%81%E4%B9%A6%E9%93%BE-%E4%BD%86%E6%98%AF%E5%9C%A8%E4%B8%8D%E5%8F%97%E4%BF%A1%E4%BB%BB%E6%8F%90%E4%BE%9B%E7%A8%8B%E5%BA%8F%E4%BF%A1%E4%BB%BB%E7%9A%84%E6%A0%B9%E8%AF%81%E4%B9%A6%E4%B8%AD%E7%BB%88%E6%AD%A2/2021081602.png\" class=\"\" title=\"安装证书\">\n<ol start=\"5\">\n<li>点击“下一步”，点击“完成”</li>\n<li>尝试重新安装程序</li>\n</ol>"},{"title":"Windows批量更改文件名（超简单PowerShell命令）","date":"2022-07-05T12:17:12.000Z","_content":"\n## 正文\n\n今天有一个批量替换文件名的需求，记得以前用过一个工具可以批量命名，但想着应该有更简单的方式，于是Google，发现了一段超简单的PowerShell命令：\n\n`Get-ChildItem {筛选条件} *| Rename-Item -NewName { $_.Name -replace '{查找内容}','{替换内容}' }`\n\n<!--more-->\n\n我的需求是把一堆`*.png`的文件名里面的`test_`删除，那么对应的命令则是：\n\n`Get-ChildItem .png *| Rename-Item -NewName { $_.Name -replace 'test_','' }`\n\n如果需求是把一堆`txt`文件名里的`a`替换成`b`，那么对应的命令：\n\n`Get-ChildItem .txt *| Rename-Item -NewName { $_.Name -replace 'a','b' }`\n\n## 说明\n\n记得调用此命名前使用`cd {path}`跳转到对应文件夹，也可以在对应文件夹内按住`shift+鼠标右键`，在弹框中找到“**在此处打开Powershell**”。\n\n## 参考\n\n[Get-ChildItem](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/get-childitem?view=powershell-7.2)\n\n[Rename-Item](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/rename-item?view=powershell-7.2)","source":"_posts/Windows批量更改文件名（超简单PowerShell命令）.md","raw":"---\ntitle: Windows批量更改文件名（超简单PowerShell命令）\ndate: 2022-07-05 20:17:12\ntags: PowerShell\n---\n\n## 正文\n\n今天有一个批量替换文件名的需求，记得以前用过一个工具可以批量命名，但想着应该有更简单的方式，于是Google，发现了一段超简单的PowerShell命令：\n\n`Get-ChildItem {筛选条件} *| Rename-Item -NewName { $_.Name -replace '{查找内容}','{替换内容}' }`\n\n<!--more-->\n\n我的需求是把一堆`*.png`的文件名里面的`test_`删除，那么对应的命令则是：\n\n`Get-ChildItem .png *| Rename-Item -NewName { $_.Name -replace 'test_','' }`\n\n如果需求是把一堆`txt`文件名里的`a`替换成`b`，那么对应的命令：\n\n`Get-ChildItem .txt *| Rename-Item -NewName { $_.Name -replace 'a','b' }`\n\n## 说明\n\n记得调用此命名前使用`cd {path}`跳转到对应文件夹，也可以在对应文件夹内按住`shift+鼠标右键`，在弹框中找到“**在此处打开Powershell**”。\n\n## 参考\n\n[Get-ChildItem](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/get-childitem?view=powershell-7.2)\n\n[Rename-Item](https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/rename-item?view=powershell-7.2)","slug":"Windows批量更改文件名（超简单PowerShell命令）","published":1,"updated":"2022-07-22T14:54:09.564Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl5woimzg000ceou2cisicbgc","content":"<h2 id=\"正文\"><a class=\"markdownIt-Anchor\" href=\"#正文\"></a> 正文</h2>\n<p>今天有一个批量替换文件名的需求，记得以前用过一个工具可以批量命名，但想着应该有更简单的方式，于是Google，发现了一段超简单的PowerShell命令：</p>\n<p><code>Get-ChildItem &#123;筛选条件&#125; *| Rename-Item -NewName &#123; $_.Name -replace '&#123;查找内容&#125;','&#123;替换内容&#125;' &#125;</code></p>\n<span id=\"more\"></span>\n<p>我的需求是把一堆<code>*.png</code>的文件名里面的<code>test_</code>删除，那么对应的命令则是：</p>\n<p><code>Get-ChildItem .png *| Rename-Item -NewName &#123; $_.Name -replace 'test_','' &#125;</code></p>\n<p>如果需求是把一堆<code>txt</code>文件名里的<code>a</code>替换成<code>b</code>，那么对应的命令：</p>\n<p><code>Get-ChildItem .txt *| Rename-Item -NewName &#123; $_.Name -replace 'a','b' &#125;</code></p>\n<h2 id=\"说明\"><a class=\"markdownIt-Anchor\" href=\"#说明\"></a> 说明</h2>\n<p>记得调用此命名前使用<code>cd &#123;path&#125;</code>跳转到对应文件夹，也可以在对应文件夹内按住<code>shift+鼠标右键</code>，在弹框中找到“<strong>在此处打开Powershell</strong>”。</p>\n<h2 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\"></a> 参考</h2>\n<p><a href=\"https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/get-childitem?view=powershell-7.2\">Get-ChildItem</a></p>\n<p><a href=\"https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/rename-item?view=powershell-7.2\">Rename-Item</a></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"正文\"><a class=\"markdownIt-Anchor\" href=\"#正文\"></a> 正文</h2>\n<p>今天有一个批量替换文件名的需求，记得以前用过一个工具可以批量命名，但想着应该有更简单的方式，于是Google，发现了一段超简单的PowerShell命令：</p>\n<p><code>Get-ChildItem &#123;筛选条件&#125; *| Rename-Item -NewName &#123; $_.Name -replace '&#123;查找内容&#125;','&#123;替换内容&#125;' &#125;</code></p>","more":"<p>我的需求是把一堆<code>*.png</code>的文件名里面的<code>test_</code>删除，那么对应的命令则是：</p>\n<p><code>Get-ChildItem .png *| Rename-Item -NewName &#123; $_.Name -replace 'test_','' &#125;</code></p>\n<p>如果需求是把一堆<code>txt</code>文件名里的<code>a</code>替换成<code>b</code>，那么对应的命令：</p>\n<p><code>Get-ChildItem .txt *| Rename-Item -NewName &#123; $_.Name -replace 'a','b' &#125;</code></p>\n<h2 id=\"说明\"><a class=\"markdownIt-Anchor\" href=\"#说明\"></a> 说明</h2>\n<p>记得调用此命名前使用<code>cd &#123;path&#125;</code>跳转到对应文件夹，也可以在对应文件夹内按住<code>shift+鼠标右键</code>，在弹框中找到“<strong>在此处打开Powershell</strong>”。</p>\n<h2 id=\"参考\"><a class=\"markdownIt-Anchor\" href=\"#参考\"></a> 参考</h2>\n<p><a href=\"https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/get-childitem?view=powershell-7.2\">Get-ChildItem</a></p>\n<p><a href=\"https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.management/rename-item?view=powershell-7.2\">Rename-Item</a></p>"},{"title":"序","date":"2020-10-03T04:40:22.000Z","_content":"\n很久之前便想分享一下工作中碰到的问题、解决方案，虽然也完全可以在自己的服务器上搭配Wordpress做个博客站来达到这个目的，但感觉使用GitHub Pages+Hexo的静态博客站看起来会更酷一些，于是花了几个小时做了这么一件事情，这个国庆也不算完全浪费了。\n<!--more-->\n\n说来惭愧，互联网行业从业7年，一直在索取，从未付出，如今为了沉淀一些东西，将自己认为一些有价值的东西在此分享，也算是还账了！\n\n因为项目原因，最近其实有接触到一些比较冷门的东西（似乎国内看来如此），像是Windows切换默认音频、禁用音频设备、Xbox设备通讯，如果使用百度来检索这些内容，几乎很难找到想要的东西，所幸在几年前就养成了使用Google的习惯，在加上有一丁丁的英语阅读能力，所以最终这些问题还是找到了解决方案。所以我计划在未来，将这些内容分享出来--如果我没变得更懒的话～\n\n另外最近这段时间，越发觉得国外编程的环境比国内还是好太多了。举个例子，我有个技术问题，假如在StackOverflow提问，大部分情况你会得到最准确专业的答案，如果有不准确或者其它问题，甚至还有人发comment说答主答案不够准确、答主太懒只给链接不给代码的情况；如果是在CSDN提问，你可能收获到的是一堆的“同问”、“帮楼主顶一下”、“蹭一下分”（黑人问号脸）；\n\n鉴于此，建议大伙多使用Google，学会用英文搜索问题————这个非常重要，因为对于我来说可能有25%的情况是，相同的问题，在百度上搜索，我完全找不到相关的内容（即便增加搜索范围、更换关键字），以至于我觉得这是不是我的错觉，但如果使用英文在Google搜索，你通常会发现这些问题很多人都碰见过并且已经解决了。值得一提的是，如果使用中文在Google搜索，大部分情况下你也无法找到解决方案，这应该能说明百度在中文搜索方面已经比较不错了————只是会有一些垃圾信息跟不准确。\n\nokok，不再安利Google了，懂的人自然懂。😏\n\n\n---\n**2021-8-15 更新：**\n\n没想到再次更新，居然距上次近1年了，希望接下来至少要 ~~每周~~ 每个月更新一篇文章！\n\n这次使用我的[新仓库(v1ctor)](https://github.com/Vict0r-Chen/v1ctor.git)来发布博客，因为免费用户`Private repo`的Github action有每月[时长限制](https://docs.github.com/en/billing/managing-billing-for-github-actions/about-billing-for-github-actions#included-storage-and-minutes) - `2,000 Minutes per month`，所以就将仓库设为`public`了，同时搭配Github action来自动发布博客，希望能减少发布工作量以减少不发博客的理由😂😂\n\n这次 ~~抄袭~~ 借鉴了不少东西（因为我甚至不知道DeployKey咋用），感谢帮助过我的人、感谢互联网，希望接下来我也能出一份力，奥力给~\n\n``` csharp\npublic void main(string[] args){\n    Consolo.Writeline(\"Hello Blog~\");\n}\n```","source":"_posts/序.md","raw":"---\ntitle: 序\ndate: 2020-10-03 12:40:22\ntags: 杂谈\n---\n\n很久之前便想分享一下工作中碰到的问题、解决方案，虽然也完全可以在自己的服务器上搭配Wordpress做个博客站来达到这个目的，但感觉使用GitHub Pages+Hexo的静态博客站看起来会更酷一些，于是花了几个小时做了这么一件事情，这个国庆也不算完全浪费了。\n<!--more-->\n\n说来惭愧，互联网行业从业7年，一直在索取，从未付出，如今为了沉淀一些东西，将自己认为一些有价值的东西在此分享，也算是还账了！\n\n因为项目原因，最近其实有接触到一些比较冷门的东西（似乎国内看来如此），像是Windows切换默认音频、禁用音频设备、Xbox设备通讯，如果使用百度来检索这些内容，几乎很难找到想要的东西，所幸在几年前就养成了使用Google的习惯，在加上有一丁丁的英语阅读能力，所以最终这些问题还是找到了解决方案。所以我计划在未来，将这些内容分享出来--如果我没变得更懒的话～\n\n另外最近这段时间，越发觉得国外编程的环境比国内还是好太多了。举个例子，我有个技术问题，假如在StackOverflow提问，大部分情况你会得到最准确专业的答案，如果有不准确或者其它问题，甚至还有人发comment说答主答案不够准确、答主太懒只给链接不给代码的情况；如果是在CSDN提问，你可能收获到的是一堆的“同问”、“帮楼主顶一下”、“蹭一下分”（黑人问号脸）；\n\n鉴于此，建议大伙多使用Google，学会用英文搜索问题————这个非常重要，因为对于我来说可能有25%的情况是，相同的问题，在百度上搜索，我完全找不到相关的内容（即便增加搜索范围、更换关键字），以至于我觉得这是不是我的错觉，但如果使用英文在Google搜索，你通常会发现这些问题很多人都碰见过并且已经解决了。值得一提的是，如果使用中文在Google搜索，大部分情况下你也无法找到解决方案，这应该能说明百度在中文搜索方面已经比较不错了————只是会有一些垃圾信息跟不准确。\n\nokok，不再安利Google了，懂的人自然懂。😏\n\n\n---\n**2021-8-15 更新：**\n\n没想到再次更新，居然距上次近1年了，希望接下来至少要 ~~每周~~ 每个月更新一篇文章！\n\n这次使用我的[新仓库(v1ctor)](https://github.com/Vict0r-Chen/v1ctor.git)来发布博客，因为免费用户`Private repo`的Github action有每月[时长限制](https://docs.github.com/en/billing/managing-billing-for-github-actions/about-billing-for-github-actions#included-storage-and-minutes) - `2,000 Minutes per month`，所以就将仓库设为`public`了，同时搭配Github action来自动发布博客，希望能减少发布工作量以减少不发博客的理由😂😂\n\n这次 ~~抄袭~~ 借鉴了不少东西（因为我甚至不知道DeployKey咋用），感谢帮助过我的人、感谢互联网，希望接下来我也能出一份力，奥力给~\n\n``` csharp\npublic void main(string[] args){\n    Consolo.Writeline(\"Hello Blog~\");\n}\n```","slug":"序","published":1,"updated":"2022-07-22T14:54:09.565Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl5woimzh000eeou23actakif","content":"<p>很久之前便想分享一下工作中碰到的问题、解决方案，虽然也完全可以在自己的服务器上搭配Wordpress做个博客站来达到这个目的，但感觉使用GitHub Pages+Hexo的静态博客站看起来会更酷一些，于是花了几个小时做了这么一件事情，这个国庆也不算完全浪费了。</p>\n<span id=\"more\"></span>\n<p>说来惭愧，互联网行业从业7年，一直在索取，从未付出，如今为了沉淀一些东西，将自己认为一些有价值的东西在此分享，也算是还账了！</p>\n<p>因为项目原因，最近其实有接触到一些比较冷门的东西（似乎国内看来如此），像是Windows切换默认音频、禁用音频设备、Xbox设备通讯，如果使用百度来检索这些内容，几乎很难找到想要的东西，所幸在几年前就养成了使用Google的习惯，在加上有一丁丁的英语阅读能力，所以最终这些问题还是找到了解决方案。所以我计划在未来，将这些内容分享出来–如果我没变得更懒的话～</p>\n<p>另外最近这段时间，越发觉得国外编程的环境比国内还是好太多了。举个例子，我有个技术问题，假如在StackOverflow提问，大部分情况你会得到最准确专业的答案，如果有不准确或者其它问题，甚至还有人发comment说答主答案不够准确、答主太懒只给链接不给代码的情况；如果是在CSDN提问，你可能收获到的是一堆的“同问”、“帮楼主顶一下”、“蹭一下分”（黑人问号脸）；</p>\n<p>鉴于此，建议大伙多使用Google，学会用英文搜索问题————这个非常重要，因为对于我来说可能有25%的情况是，相同的问题，在百度上搜索，我完全找不到相关的内容（即便增加搜索范围、更换关键字），以至于我觉得这是不是我的错觉，但如果使用英文在Google搜索，你通常会发现这些问题很多人都碰见过并且已经解决了。值得一提的是，如果使用中文在Google搜索，大部分情况下你也无法找到解决方案，这应该能说明百度在中文搜索方面已经比较不错了————只是会有一些垃圾信息跟不准确。</p>\n<p>okok，不再安利Google了，懂的人自然懂。😏</p>\n<hr />\n<p><strong>2021-8-15 更新：</strong></p>\n<p>没想到再次更新，居然距上次近1年了，希望接下来至少要 <s>每周</s> 每个月更新一篇文章！</p>\n<p>这次使用我的<a href=\"https://github.com/Vict0r-Chen/v1ctor.git\">新仓库(v1ctor)</a>来发布博客，因为免费用户<code>Private repo</code>的Github action有每月<a href=\"https://docs.github.com/en/billing/managing-billing-for-github-actions/about-billing-for-github-actions#included-storage-and-minutes\">时长限制</a> - <code>2,000 Minutes per month</code>，所以就将仓库设为<code>public</code>了，同时搭配Github action来自动发布博客，希望能减少发布工作量以减少不发博客的理由😂😂</p>\n<p>这次 <s>抄袭</s> 借鉴了不少东西（因为我甚至不知道DeployKey咋用），感谢帮助过我的人、感谢互联网，希望接下来我也能出一份力，奥力给~</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span>(<span class=\"params\"><span class=\"built_in\">string</span>[] args</span>)</span>&#123;</span><br><span class=\"line\">    Consolo.Writeline(<span class=\"string\">&quot;Hello Blog~&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>很久之前便想分享一下工作中碰到的问题、解决方案，虽然也完全可以在自己的服务器上搭配Wordpress做个博客站来达到这个目的，但感觉使用GitHub Pages+Hexo的静态博客站看起来会更酷一些，于是花了几个小时做了这么一件事情，这个国庆也不算完全浪费了。</p>","more":"<p>说来惭愧，互联网行业从业7年，一直在索取，从未付出，如今为了沉淀一些东西，将自己认为一些有价值的东西在此分享，也算是还账了！</p>\n<p>因为项目原因，最近其实有接触到一些比较冷门的东西（似乎国内看来如此），像是Windows切换默认音频、禁用音频设备、Xbox设备通讯，如果使用百度来检索这些内容，几乎很难找到想要的东西，所幸在几年前就养成了使用Google的习惯，在加上有一丁丁的英语阅读能力，所以最终这些问题还是找到了解决方案。所以我计划在未来，将这些内容分享出来–如果我没变得更懒的话～</p>\n<p>另外最近这段时间，越发觉得国外编程的环境比国内还是好太多了。举个例子，我有个技术问题，假如在StackOverflow提问，大部分情况你会得到最准确专业的答案，如果有不准确或者其它问题，甚至还有人发comment说答主答案不够准确、答主太懒只给链接不给代码的情况；如果是在CSDN提问，你可能收获到的是一堆的“同问”、“帮楼主顶一下”、“蹭一下分”（黑人问号脸）；</p>\n<p>鉴于此，建议大伙多使用Google，学会用英文搜索问题————这个非常重要，因为对于我来说可能有25%的情况是，相同的问题，在百度上搜索，我完全找不到相关的内容（即便增加搜索范围、更换关键字），以至于我觉得这是不是我的错觉，但如果使用英文在Google搜索，你通常会发现这些问题很多人都碰见过并且已经解决了。值得一提的是，如果使用中文在Google搜索，大部分情况下你也无法找到解决方案，这应该能说明百度在中文搜索方面已经比较不错了————只是会有一些垃圾信息跟不准确。</p>\n<p>okok，不再安利Google了，懂的人自然懂。😏</p>\n<hr />\n<p><strong>2021-8-15 更新：</strong></p>\n<p>没想到再次更新，居然距上次近1年了，希望接下来至少要 <s>每周</s> 每个月更新一篇文章！</p>\n<p>这次使用我的<a href=\"https://github.com/Vict0r-Chen/v1ctor.git\">新仓库(v1ctor)</a>来发布博客，因为免费用户<code>Private repo</code>的Github action有每月<a href=\"https://docs.github.com/en/billing/managing-billing-for-github-actions/about-billing-for-github-actions#included-storage-and-minutes\">时长限制</a> - <code>2,000 Minutes per month</code>，所以就将仓库设为<code>public</code>了，同时搭配Github action来自动发布博客，希望能减少发布工作量以减少不发博客的理由😂😂</p>\n<p>这次 <s>抄袭</s> 借鉴了不少东西（因为我甚至不知道DeployKey咋用），感谢帮助过我的人、感谢互联网，希望接下来我也能出一份力，奥力给~</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span>(<span class=\"params\"><span class=\"built_in\">string</span>[] args</span>)</span>&#123;</span><br><span class=\"line\">    Consolo.Writeline(<span class=\"string\">&quot;Hello Blog~&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"}],"PostAsset":[{"_id":"source/_posts/IOS中通过快捷捷径打开健康码或场所码/p1.png","slug":"p1.png","post":"cl5woimza0002eou24lbs1472","modified":0,"renderable":0},{"_id":"source/_posts/IOS中通过快捷捷径打开健康码或场所码/p2.png","slug":"p2.png","post":"cl5woimza0002eou24lbs1472","modified":0,"renderable":0},{"_id":"source/_posts/IOS中通过快捷捷径打开健康码或场所码/p3.png","slug":"p3.png","post":"cl5woimza0002eou24lbs1472","modified":0,"renderable":0},{"_id":"source/_posts/IOS中通过快捷捷径打开健康码或场所码/p4.png","slug":"p4.png","post":"cl5woimza0002eou24lbs1472","modified":0,"renderable":0},{"_id":"source/_posts/IOS中通过快捷捷径打开健康码或场所码/p5.png","slug":"p5.png","post":"cl5woimza0002eou24lbs1472","modified":0,"renderable":0},{"_id":"source/_posts/UWP判断当前运行平台是XBox还是PC/p1.png","slug":"p1.png","post":"cl5woimzd0006eou2cpau8ust","modified":0,"renderable":0},{"_id":"source/_posts/WPF中不同文字显示不同颜色-高亮/20220113_01.png","slug":"20220113_01.png","post":"cl5woimze0009eou2godggp33","modified":0,"renderable":0},{"_id":"source/_posts/安装Framework或远程调试工具时出现-处理证书链-但是在不受信任提供程序信任的根证书中终止/2021081601.png","slug":"2021081601.png","post":"cl5woimzf000aeou251vgbr74","modified":0,"renderable":0},{"_id":"source/_posts/安装Framework或远程调试工具时出现-处理证书链-但是在不受信任提供程序信任的根证书中终止/2021081602.png","slug":"2021081602.png","post":"cl5woimzf000aeou251vgbr74","modified":0,"renderable":0}],"PostCategory":[],"PostTag":[{"post_id":"cl5woimz80001eou217k16406","tag_id":"cl5woimzb0003eou2bi10e052","_id":"cl5woimze0008eou2apbz596v"},{"post_id":"cl5woimza0002eou24lbs1472","tag_id":"cl5woimze0007eou2af1e3sac","_id":"cl5woimzh000deou25nwo1utw"},{"post_id":"cl5woimzc0004eou2g9t6emzx","tag_id":"cl5woimzg000beou2fad36svr","_id":"cl5woimzi000geou2emsw6yhc"},{"post_id":"cl5woimzd0006eou2cpau8ust","tag_id":"cl5woimzi000feou257e80hna","_id":"cl5woimzj000ieou23d0v4s9i"},{"post_id":"cl5woimze0009eou2godggp33","tag_id":"cl5woimzi000heou2cj2wcah4","_id":"cl5woimzj000keou2eeshcak5"},{"post_id":"cl5woimzf000aeou251vgbr74","tag_id":"cl5woimzj000jeou21vorafaw","_id":"cl5woimzj000meou22gfa4x1z"},{"post_id":"cl5woimzg000ceou2cisicbgc","tag_id":"cl5woimzj000leou24zagay0s","_id":"cl5woimzj000oeou21m7b3amf"},{"post_id":"cl5woimzh000eeou23actakif","tag_id":"cl5woimzj000neou24oph1eqp","_id":"cl5woimzk000peou2dtck5eht"}],"Tag":[{"name":"Life","_id":"cl5woimzb0003eou2bi10e052"},{"name":"Geek","_id":"cl5woimze0007eou2af1e3sac"},{"name":"AdvanceInstaller 破解工具","_id":"cl5woimzg000beou2fad36svr"},{"name":"UWP ResouceDictionary","_id":"cl5woimzi000feou257e80hna"},{"name":"WPF","_id":"cl5woimzi000heou2cj2wcah4"},{"name":".NET","_id":"cl5woimzj000jeou21vorafaw"},{"name":"PowerShell","_id":"cl5woimzj000leou24zagay0s"},{"name":"杂谈","_id":"cl5woimzj000neou24oph1eqp"}]}}