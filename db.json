{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/images/202108/2021081601.png","path":"images/202108/2021081601.png","modified":0,"renderable":0},{"_id":"source/images/202108/2021081602.png","path":"images/202108/2021081602.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"acad91ace80b80295b11a9b7ad4c29a2dcfdd8fb","modified":1629011635364},{"_id":"themes/landscape/.npmignore","hash":"ea2b285a29690f1eabbad0f3a158e34e9ccd1d86","modified":1629011635364},{"_id":"themes/landscape/Gruntfile.js","hash":"412e30530784993c8997aa8b1319c669b83b91c2","modified":1629011635364},{"_id":"themes/landscape/LICENSE","hash":"82ce1e15ddeabeaaca60e2186b5a3ce42b1a9c49","modified":1629011635365},{"_id":"themes/landscape/README.md","hash":"67fedfb66304f103c412f6be110bf3c40c75d4ac","modified":1629011635365},{"_id":"themes/landscape/_config.yml","hash":"ce9d2939245209b8f5c5bbbdadc917d86057d032","modified":1629011635365},{"_id":"themes/landscape/package.json","hash":"6e567a9654e61eb3f548c75edef380c2e135c433","modified":1629011635376},{"_id":"themes/landscape/languages/de.yml","hash":"d45cea36c5c83d7d09afcd1c26fff4a4c513c25b","modified":1629011635366},{"_id":"themes/landscape/languages/default.yml","hash":"f26a34a7983d4bc17c65c7f0f14da598e62ce66d","modified":1629011635366},{"_id":"themes/landscape/languages/fr.yml","hash":"8cb0fe4b6913b4d5b662cdd0108a923c90025f85","modified":1629011635367},{"_id":"themes/landscape/languages/es.yml","hash":"e3b4937da4cd2d0393b8a0ba310e70fc605cc431","modified":1629011635366},{"_id":"themes/landscape/languages/ja.yml","hash":"3e2fedca096678c0c234ebffa4637828979296fa","modified":1629011635367},{"_id":"themes/landscape/languages/ko.yml","hash":"11330316e3c1262474a2b496e40dbc29f93fe01b","modified":1629011635367},{"_id":"themes/landscape/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1629011635368},{"_id":"themes/landscape/languages/pt.yml","hash":"ae2c61b30e638f74f1a42c9ce39ac08d063b30f5","modified":1629011635368},{"_id":"themes/landscape/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1629011635368},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"b057f389c6713010f97d461e48ec959b0b6f3b44","modified":1629011635369},{"_id":"themes/landscape/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1629011635368},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"f5f0ca88185da7a8457760d84bf221781473bd7c","modified":1629011635369},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":499162500000},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":499162500000},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":499162500000},{"_id":"themes/landscape/layout/layout.ejs","hash":"5d86bc48b0f1bdce9a2bb548c2f8e7a4f50d499a","modified":1629011635375},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":499162500000},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":499162500000},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":499162500000},{"_id":"themes/landscape/scripts/fancybox.js","hash":"4c130fc242cf9b59b5df6ca5eae3b14302311e8c","modified":1629011635376},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"5e3b70c028d518b8f765e29a5e2020e7ba6ed589","modified":1629011635369},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"5062c723721d8497eebad372f57092ade45041f4","modified":1629011635370},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"017c412bd3d60d22e493f02918e436a32d96bb84","modified":1629011635370},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"5cf2b8a1148e6f8c4bd9ca9e3b84c7e5a59d56bc","modified":1629011635370},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"6faefe07f3d64e21c7743276e0f55ee1544f9d86","modified":1629011635371},{"_id":"themes/landscape/layout/_partial/gauges-analytics.ejs","hash":"ace3000bd3e01d03041d5be24f7640b6c003a5b5","modified":1629011635371},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"1ccc627d7697e68fddc367c73ac09920457e5b35","modified":1629011635371},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"a36cec48782782bac92622f369c750e5c7396510","modified":1629011635371},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"cf755454675d13a0813a922b575c06b6b74ab9fd","modified":1629011635371},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"347cf1befd2ea637c24bd5901929d8e36e359e75","modified":1629011635372},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"c70869569749a8f48cce202fa57926c06b55fdab","modified":1629011635373},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"0fe1e52c291c9499bd05b966e0b9aac5be351c58","modified":1629011635374},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"866790acc13fed44b7ef74c3e19c300a3d6180d8","modified":1629011635374},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"16800f85ffb036d2644a26e02facd61acb3706e9","modified":1629011635374},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"6017c54a8c3c8ff8db491cfbea3100c139da75d6","modified":1629011635374},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"7259c179aa0c41c02e467ad892292e90430aaabc","modified":1629011635374},{"_id":"themes/landscape/source/css/_extend.styl","hash":"8ab1ad313bd6707d248c5ca1ee9a5eab8d815e42","modified":1629011635377},{"_id":"themes/landscape/source/css/_variables.styl","hash":"57bb02270eef16b4823a64ba663ccf2f247f34e5","modified":1629011635380},{"_id":"themes/landscape/source/css/style.styl","hash":"4a3e64ee8dad5834860c30b4176882eff628ca6b","modified":1629011635387},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":499162500000},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":499162500000},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":499162500000},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":499162500000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":499162500000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":499162500000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"2e54d51d21e68ebc4bb870f6e57d3bfb660d4f9c","modified":1629011635391},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"58193c802f307ec9bc9e586c0e8a13ebef45d2f8","modified":1629011635391},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"2da892a02778236b64076e5e8802ef0566e1d9e8","modified":1629011635392},{"_id":"themes/landscape/source/js/script.js","hash":"c0d368681c687258b628bacc84cc30d353de6d47","modified":1629011635392},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"16128d2422645e18d1b6882d4c4df17d895bd76e","modified":1629011635372},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"947f513f7a85fbcf085624e46dc2ae6de8185eec","modified":1629011635372},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"b0bf3f5d923c261ca2b5fabab513f1ec2708c8ca","modified":1629011635372},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"cbb3819ce512bd24db8bad41b8617d46eba82fdc","modified":1629011635373},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"694b5101bcc44c9f9c1cc62e5ad2fdfb4b7c7a07","modified":1629011635373},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"d4a460a35e2112d0c7414fd5e19b3a16093f1caf","modified":1629011635373},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"9e574d8eb1a5285ec3b4346607414770d2f7e0ff","modified":1629011635377},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"e291bc8c5f0c21080baa549d5d9ef2f39a871ea7","modified":1629011635377},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"2834870661e490775f9154d71638bfdc72e640a6","modified":1629011635378},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"6f7aa810f296d6a1a4486637b5a853d35a198938","modified":1629011635378},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"67e59feb18eee6026717cb440d86ab9551782628","modified":1629011635378},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"ac19f1621305ca9f6a7b74acd211a4c0d88690bd","modified":1629011635379},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"1fb15f13ba70d5b954f62920c6b63d26e2fb2985","modified":1629011635379},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"680c7b809b62cd3ad294e822793fbd0b1a32cc33","modified":1629011635379},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"4132e25ba9680c4b911a01abc75f501cda3fa4f1","modified":1629011635379},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"8d971a00e644a600179b04815688d188f094012e","modified":1629011635380},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"1aa883ab432d9e4139c89dcbd40ae2bd1528d029","modified":1629011635380},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":499162500000},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"429bad87fc156eacf226c5e35b0eafc277f2504b","modified":1629011635380},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":499162500000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":499162500000},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":499162500000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1629011635389},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"4c9c395d705d22af7da06870d18f434e2a2eeaf9","modified":1629011635390},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"e14c32cc6823b81b2f758512f13ed8eb9ef2b454","modified":1629011635390},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1629011635390},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"83cdfea43632b613771691a11f56f99d85fb6dbd","modified":1629011635391},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":499162500000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"a275426daefd3716c53561fad121d258a7f05b47","modified":1629011635383},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":499162500000},{"_id":"public/2021/08/15/hello-world/index.html","hash":"07d5da0945665ce14a949d84edeeca773bac5d64","modified":1628971379418},{"_id":"public/archives/index.html","hash":"1fe41c5a614ff3d1a1828c94933adc83f327da35","modified":1628971379418},{"_id":"public/archives/2021/index.html","hash":"8530cb2f7481e457355876c32d6052d6b90a121e","modified":1628971379418},{"_id":"public/archives/2021/08/index.html","hash":"db2d63963f7e1dd7c40005316e66f903c56ed396","modified":1628971379418},{"_id":"public/index.html","hash":"d9a0864bfdca11e4ecf2c0d18ae301cb89236cc8","modified":1628971379418},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1628971379418},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1628971379418},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1628971379418},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1628971379418},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1628971379418},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1628971379418},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1628971379418},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1628971379418},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1628971379418},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1628971379418},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1628971379418},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1628971379418},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1628971379418},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1628971379418},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1628971379418},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1628971379418},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1628971379418},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1628971379418},{"_id":"public/css/style.css","hash":"5f8dadd37d0052c557061018fe6f568f64fced9b","modified":1628971379418},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1628971379418},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1628971379418},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1628971379418},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1628971379418},{"_id":"source/CNAME","hash":"f03fa860173aae99ed6bdbd0795e2f16bbe91cdf","modified":1629011859288},{"_id":"source/_posts/序.md","hash":"a7978eec01ba99ac6321b9e5a3a7e74e2e9dc2b0","modified":1629107734031},{"_id":"source/_drafts/hello-world.md","hash":"acad91ace80b80295b11a9b7ad4c29a2dcfdd8fb","modified":1629014636840},{"_id":"source/_posts/十年社会人的经验之谈.md","hash":"27f786859ae1ea7a0b48e367f7088328adab887e","modified":1629257432267},{"_id":"source/_posts/安装Framework或远程调试工具时出现-处理证书链-但是在不受信任提供程序信任的根证书中终止.md","hash":"28f5880a8ec75a3bcded37587db761ea26e43405","modified":1642040769762},{"_id":"source/images/202108/2021081602.png","hash":"c28e81f9da9e23e8018ab1d36e84983651b251f2","modified":1629108827661},{"_id":"source/images/202108/2021081601.png","hash":"b20633792dc6213f917997ef1a30b38f646ca3aa","modified":1629108667241},{"_id":"source/_drafts/十年社会人的经验之谈.md","hash":"27f786859ae1ea7a0b48e367f7088328adab887e","modified":1642038184424},{"_id":"source/_posts/WPF中不同文字显示不同颜色-高亮.md","hash":"9364a581a3a6c7c1522d64bdce7bde2e13c1caf1","modified":1642040648521},{"_id":"source/images/202201/20220113_01.png","hash":"d5e7ae1d021e7ca6cfee718bc71e7c327a51c223","modified":1642038358942},{"_id":"source/_posts/WPF中不同文字显示不同颜色-高亮/20220113_01.png","hash":"d5e7ae1d021e7ca6cfee718bc71e7c327a51c223","modified":1642040121045},{"_id":"source/_posts/安装Framework或远程调试工具时出现-处理证书链-但是在不受信任提供程序信任的根证书中终止/2021081602.png","hash":"c28e81f9da9e23e8018ab1d36e84983651b251f2","modified":1629108827661},{"_id":"source/_posts/安装Framework或远程调试工具时出现-处理证书链-但是在不受信任提供程序信任的根证书中终止/2021081601.png","hash":"b20633792dc6213f917997ef1a30b38f646ca3aa","modified":1629108667241}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"序","date":"2020-10-03T04:40:22.000Z","_content":"\n很久之前便想分享一下工作中碰到的问题、解决方案，虽然也完全可以在自己的服务器上搭配Wordpress做个博客站来达到这个目的，但感觉使用GitHub Pages+Hexo的静态博客站看起来会更酷一些，于是花了几个小时做了这么一件事情，这个国庆也不算完全浪费了。\n\n说来惭愧，互联网行业从业7年，一直在索取，从未付出，如今为了沉淀一些东西，将自己认为一些有价值的东西在此分享，也算是还账了！\n\n因为项目原因，最近其实有接触到一些比较冷门的东西（似乎国内看来如此），像是Windows切换默认音频、禁用音频设备、Xbox设备通讯，如果使用百度来检索这些内容，几乎很难找到想要的东西，所幸在几年前就养成了使用Google的习惯，在加上有一丁丁的英语阅读能力，所以最终这些问题还是找到了解决方案。所以我计划在未来，将这些内容分享出来--如果我没变得更懒的话～\n\n另外最近这段时间，越发觉得国外编程的环境比国内还是好太多了。举个例子，我有个技术问题，假如在StackOverflow提问，大部分情况你会得到最准确专业的答案，如果有不准确或者其它问题，甚至还有人发comment说答主答案不够准确、答主太懒只给链接不给代码的情况；如果是在CSDN提问，你可能收获到的是一堆的“同问”、“帮楼主顶一下”、“蹭一下分”（黑人问号脸）；\n\n鉴于此，建议大伙多使用Google，学会用英文搜索问题————这个非常重要，因为对于我来说可能有25%的情况是，相同的问题，在百度上搜索，我完全找不到相关的内容（即便增加搜索范围、更换关键字），以至于我觉得这是不是我的错觉，但如果使用英文在Google搜索，你通常会发现这些问题很多人都碰见过并且已经解决了。值得一提的是，如果使用中文在Google搜索，大部分情况下你也无法找到解决方案，这应该能说明百度在中文搜索方面已经比较不错了————只是会有一些垃圾信息跟不准确。\n\nokok，不再安利Google了，懂的人自然懂。😏\n\n\n---\n**2021-8-15 更新：**\n\n没想到再次更新，居然距上次近1年了，希望接下来至少要 ~~每周~~ 每个月更新一篇文章！\n\n这次使用我的[新仓库(v1ctor)](https://github.com/Vict0r-Chen/v1ctor.git)来发布博客，因为免费用户`Private repo`的Github action有每月[时长限制](https://docs.github.com/en/billing/managing-billing-for-github-actions/about-billing-for-github-actions#included-storage-and-minutes) - `2,000 Minutes per month`，所以就将仓库设为`public`了，同时搭配Github action来自动发布博客，希望能减少发布工作量以减少不发博客的理由😂😂\n\n这次 ~~抄袭~~ 借鉴了不少东西（因为我甚至不知道DeployKey咋用），感谢帮助过我的人、感谢互联网，希望接下来我也能出一份力，奥力给~\n\n``` csharp\npublic void main(string[] args){\n    Consolo.Writeline(\"Hello Blog~\");\n}\n```","source":"_posts/序.md","raw":"---\ntitle: 序\ndate: 2020-10-03 12:40:22\ntags: 杂谈\n---\n\n很久之前便想分享一下工作中碰到的问题、解决方案，虽然也完全可以在自己的服务器上搭配Wordpress做个博客站来达到这个目的，但感觉使用GitHub Pages+Hexo的静态博客站看起来会更酷一些，于是花了几个小时做了这么一件事情，这个国庆也不算完全浪费了。\n\n说来惭愧，互联网行业从业7年，一直在索取，从未付出，如今为了沉淀一些东西，将自己认为一些有价值的东西在此分享，也算是还账了！\n\n因为项目原因，最近其实有接触到一些比较冷门的东西（似乎国内看来如此），像是Windows切换默认音频、禁用音频设备、Xbox设备通讯，如果使用百度来检索这些内容，几乎很难找到想要的东西，所幸在几年前就养成了使用Google的习惯，在加上有一丁丁的英语阅读能力，所以最终这些问题还是找到了解决方案。所以我计划在未来，将这些内容分享出来--如果我没变得更懒的话～\n\n另外最近这段时间，越发觉得国外编程的环境比国内还是好太多了。举个例子，我有个技术问题，假如在StackOverflow提问，大部分情况你会得到最准确专业的答案，如果有不准确或者其它问题，甚至还有人发comment说答主答案不够准确、答主太懒只给链接不给代码的情况；如果是在CSDN提问，你可能收获到的是一堆的“同问”、“帮楼主顶一下”、“蹭一下分”（黑人问号脸）；\n\n鉴于此，建议大伙多使用Google，学会用英文搜索问题————这个非常重要，因为对于我来说可能有25%的情况是，相同的问题，在百度上搜索，我完全找不到相关的内容（即便增加搜索范围、更换关键字），以至于我觉得这是不是我的错觉，但如果使用英文在Google搜索，你通常会发现这些问题很多人都碰见过并且已经解决了。值得一提的是，如果使用中文在Google搜索，大部分情况下你也无法找到解决方案，这应该能说明百度在中文搜索方面已经比较不错了————只是会有一些垃圾信息跟不准确。\n\nokok，不再安利Google了，懂的人自然懂。😏\n\n\n---\n**2021-8-15 更新：**\n\n没想到再次更新，居然距上次近1年了，希望接下来至少要 ~~每周~~ 每个月更新一篇文章！\n\n这次使用我的[新仓库(v1ctor)](https://github.com/Vict0r-Chen/v1ctor.git)来发布博客，因为免费用户`Private repo`的Github action有每月[时长限制](https://docs.github.com/en/billing/managing-billing-for-github-actions/about-billing-for-github-actions#included-storage-and-minutes) - `2,000 Minutes per month`，所以就将仓库设为`public`了，同时搭配Github action来自动发布博客，希望能减少发布工作量以减少不发博客的理由😂😂\n\n这次 ~~抄袭~~ 借鉴了不少东西（因为我甚至不知道DeployKey咋用），感谢帮助过我的人、感谢互联网，希望接下来我也能出一份力，奥力给~\n\n``` csharp\npublic void main(string[] args){\n    Consolo.Writeline(\"Hello Blog~\");\n}\n```","slug":"序","published":1,"updated":"2021-08-16T09:55:34.031Z","_id":"ckscwfew30000vku2hgbz12br","comments":1,"layout":"post","photos":[],"link":"","content":"<p>很久之前便想分享一下工作中碰到的问题、解决方案，虽然也完全可以在自己的服务器上搭配Wordpress做个博客站来达到这个目的，但感觉使用GitHub Pages+Hexo的静态博客站看起来会更酷一些，于是花了几个小时做了这么一件事情，这个国庆也不算完全浪费了。</p>\n<p>说来惭愧，互联网行业从业7年，一直在索取，从未付出，如今为了沉淀一些东西，将自己认为一些有价值的东西在此分享，也算是还账了！</p>\n<p>因为项目原因，最近其实有接触到一些比较冷门的东西（似乎国内看来如此），像是Windows切换默认音频、禁用音频设备、Xbox设备通讯，如果使用百度来检索这些内容，几乎很难找到想要的东西，所幸在几年前就养成了使用Google的习惯，在加上有一丁丁的英语阅读能力，所以最终这些问题还是找到了解决方案。所以我计划在未来，将这些内容分享出来–如果我没变得更懒的话～</p>\n<p>另外最近这段时间，越发觉得国外编程的环境比国内还是好太多了。举个例子，我有个技术问题，假如在StackOverflow提问，大部分情况你会得到最准确专业的答案，如果有不准确或者其它问题，甚至还有人发comment说答主答案不够准确、答主太懒只给链接不给代码的情况；如果是在CSDN提问，你可能收获到的是一堆的“同问”、“帮楼主顶一下”、“蹭一下分”（黑人问号脸）；</p>\n<p>鉴于此，建议大伙多使用Google，学会用英文搜索问题————这个非常重要，因为对于我来说可能有25%的情况是，相同的问题，在百度上搜索，我完全找不到相关的内容（即便增加搜索范围、更换关键字），以至于我觉得这是不是我的错觉，但如果使用英文在Google搜索，你通常会发现这些问题很多人都碰见过并且已经解决了。值得一提的是，如果使用中文在Google搜索，大部分情况下你也无法找到解决方案，这应该能说明百度在中文搜索方面已经比较不错了————只是会有一些垃圾信息跟不准确。</p>\n<p>okok，不再安利Google了，懂的人自然懂。😏</p>\n<hr />\n<p><strong>2021-8-15 更新：</strong></p>\n<p>没想到再次更新，居然距上次近1年了，希望接下来至少要 <s>每周</s> 每个月更新一篇文章！</p>\n<p>这次使用我的<a href=\"https://github.com/Vict0r-Chen/v1ctor.git\">新仓库(v1ctor)</a>来发布博客，因为免费用户<code>Private repo</code>的Github action有每月<a href=\"https://docs.github.com/en/billing/managing-billing-for-github-actions/about-billing-for-github-actions#included-storage-and-minutes\">时长限制</a> - <code>2,000 Minutes per month</code>，所以就将仓库设为<code>public</code>了，同时搭配Github action来自动发布博客，希望能减少发布工作量以减少不发博客的理由😂😂</p>\n<p>这次 <s>抄袭</s> 借鉴了不少东西（因为我甚至不知道DeployKey咋用），感谢帮助过我的人、感谢互联网，希望接下来我也能出一份力，奥力给~</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span>(<span class=\"params\"><span class=\"built_in\">string</span>[] args</span>)</span>&#123;</span><br><span class=\"line\">    Consolo.Writeline(<span class=\"string\">&quot;Hello Blog~&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>很久之前便想分享一下工作中碰到的问题、解决方案，虽然也完全可以在自己的服务器上搭配Wordpress做个博客站来达到这个目的，但感觉使用GitHub Pages+Hexo的静态博客站看起来会更酷一些，于是花了几个小时做了这么一件事情，这个国庆也不算完全浪费了。</p>\n<p>说来惭愧，互联网行业从业7年，一直在索取，从未付出，如今为了沉淀一些东西，将自己认为一些有价值的东西在此分享，也算是还账了！</p>\n<p>因为项目原因，最近其实有接触到一些比较冷门的东西（似乎国内看来如此），像是Windows切换默认音频、禁用音频设备、Xbox设备通讯，如果使用百度来检索这些内容，几乎很难找到想要的东西，所幸在几年前就养成了使用Google的习惯，在加上有一丁丁的英语阅读能力，所以最终这些问题还是找到了解决方案。所以我计划在未来，将这些内容分享出来–如果我没变得更懒的话～</p>\n<p>另外最近这段时间，越发觉得国外编程的环境比国内还是好太多了。举个例子，我有个技术问题，假如在StackOverflow提问，大部分情况你会得到最准确专业的答案，如果有不准确或者其它问题，甚至还有人发comment说答主答案不够准确、答主太懒只给链接不给代码的情况；如果是在CSDN提问，你可能收获到的是一堆的“同问”、“帮楼主顶一下”、“蹭一下分”（黑人问号脸）；</p>\n<p>鉴于此，建议大伙多使用Google，学会用英文搜索问题————这个非常重要，因为对于我来说可能有25%的情况是，相同的问题，在百度上搜索，我完全找不到相关的内容（即便增加搜索范围、更换关键字），以至于我觉得这是不是我的错觉，但如果使用英文在Google搜索，你通常会发现这些问题很多人都碰见过并且已经解决了。值得一提的是，如果使用中文在Google搜索，大部分情况下你也无法找到解决方案，这应该能说明百度在中文搜索方面已经比较不错了————只是会有一些垃圾信息跟不准确。</p>\n<p>okok，不再安利Google了，懂的人自然懂。😏</p>\n<hr />\n<p><strong>2021-8-15 更新：</strong></p>\n<p>没想到再次更新，居然距上次近1年了，希望接下来至少要 <s>每周</s> 每个月更新一篇文章！</p>\n<p>这次使用我的<a href=\"https://github.com/Vict0r-Chen/v1ctor.git\">新仓库(v1ctor)</a>来发布博客，因为免费用户<code>Private repo</code>的Github action有每月<a href=\"https://docs.github.com/en/billing/managing-billing-for-github-actions/about-billing-for-github-actions#included-storage-and-minutes\">时长限制</a> - <code>2,000 Minutes per month</code>，所以就将仓库设为<code>public</code>了，同时搭配Github action来自动发布博客，希望能减少发布工作量以减少不发博客的理由😂😂</p>\n<p>这次 <s>抄袭</s> 借鉴了不少东西（因为我甚至不知道DeployKey咋用），感谢帮助过我的人、感谢互联网，希望接下来我也能出一份力，奥力给~</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span>(<span class=\"params\"><span class=\"built_in\">string</span>[] args</span>)</span>&#123;</span><br><span class=\"line\">    Consolo.Writeline(<span class=\"string\">&quot;Hello Blog~&quot;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_drafts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":0,"date":"2021-08-15T07:13:55.363Z","updated":"2021-08-15T08:03:56.840Z","_id":"ckscx95ng0000z4u2gp0ng68d","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"安装Framework或远程调试工具时出现 '处理证书链,但是在不受信任提供程序信任的根证书中终止...'","date":"2021-08-16T09:59:15.000Z","_content":"\n今天发现一个WPF程序在Win7上有兼容性问题，但是从log看不出有啥问题，于是搭了一个Win7的虚拟机环境，但上去装[Visual Studio 2019远程调试工具](https://visualstudio.microsoft.com/zh-hans/downloads/#remote-tools-for-visual-studio-2019)时竟然提示“处理证书链,但是在不受信任提供程序信任的根证书中终止...”，心想这不会是个流氓软件吧？但我是从MS官网下载的啊...找了goole一下，应该是**vs2019调试工具中的证书在win7的证书库中不存在**导致的，因为无论是vs2019还是Framework 4.5.2+，这都是Win 10的产物了，故win7上表现异常也是能理解的。\n\n于是在MS上下载这个证书安装即可：[下载地址](http://go.microsoft.com/fwlink/?linkid=747875&clcid=0x409)\n\n### 安装步骤：\n\n1. 单击选择证书=>右键=>安装证书\n{% asset_img 2021081601.png 安装证书 %}\n2. 选择存储位置“本地计算机”，点击下一步\n3. 选择“将所有的证书都放入下列存储”，点击“浏览”\n4. 选择“受信任的根证书颁发机构”，点击确定\n{% asset_img 2021081602.png 安装证书 %}\n5. 点击“下一步”，点击“完成”\n6. 尝试重新安装程序","source":"_posts/安装Framework或远程调试工具时出现-处理证书链-但是在不受信任提供程序信任的根证书中终止.md","raw":"---\ntitle: '安装Framework或远程调试工具时出现 ''处理证书链,但是在不受信任提供程序信任的根证书中终止...'''\ndate: 2021-08-16 17:59:15\ntags: .NET\n---\n\n今天发现一个WPF程序在Win7上有兼容性问题，但是从log看不出有啥问题，于是搭了一个Win7的虚拟机环境，但上去装[Visual Studio 2019远程调试工具](https://visualstudio.microsoft.com/zh-hans/downloads/#remote-tools-for-visual-studio-2019)时竟然提示“处理证书链,但是在不受信任提供程序信任的根证书中终止...”，心想这不会是个流氓软件吧？但我是从MS官网下载的啊...找了goole一下，应该是**vs2019调试工具中的证书在win7的证书库中不存在**导致的，因为无论是vs2019还是Framework 4.5.2+，这都是Win 10的产物了，故win7上表现异常也是能理解的。\n\n于是在MS上下载这个证书安装即可：[下载地址](http://go.microsoft.com/fwlink/?linkid=747875&clcid=0x409)\n\n### 安装步骤：\n\n1. 单击选择证书=>右键=>安装证书\n{% asset_img 2021081601.png 安装证书 %}\n2. 选择存储位置“本地计算机”，点击下一步\n3. 选择“将所有的证书都放入下列存储”，点击“浏览”\n4. 选择“受信任的根证书颁发机构”，点击确定\n{% asset_img 2021081602.png 安装证书 %}\n5. 点击“下一步”，点击“完成”\n6. 尝试重新安装程序","slug":"安装Framework或远程调试工具时出现-处理证书链-但是在不受信任提供程序信任的根证书中终止","published":1,"updated":"2022-01-13T02:26:09.762Z","_id":"ckycb4rkm0002kww95rfb7d49","comments":1,"layout":"post","photos":[],"link":"","content":"<p>今天发现一个WPF程序在Win7上有兼容性问题，但是从log看不出有啥问题，于是搭了一个Win7的虚拟机环境，但上去装<a href=\"https://visualstudio.microsoft.com/zh-hans/downloads/#remote-tools-for-visual-studio-2019\">Visual Studio 2019远程调试工具</a>时竟然提示“处理证书链,但是在不受信任提供程序信任的根证书中终止…”，心想这不会是个流氓软件吧？但我是从MS官网下载的啊…找了goole一下，应该是<strong>vs2019调试工具中的证书在win7的证书库中不存在</strong>导致的，因为无论是vs2019还是Framework 4.5.2+，这都是Win 10的产物了，故win7上表现异常也是能理解的。</p>\n<p>于是在MS上下载这个证书安装即可：<a href=\"http://go.microsoft.com/fwlink/?linkid=747875&amp;clcid=0x409\">下载地址</a></p>\n<h3 id=\"安装步骤\"><a class=\"markdownIt-Anchor\" href=\"#安装步骤\"></a> 安装步骤：</h3>\n<ol>\n<li>单击选择证书=&gt;右键=&gt;安装证书</li>\n</ol>\n<img src=\"/2021/08/16/%E5%AE%89%E8%A3%85Framework%E6%88%96%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7%E6%97%B6%E5%87%BA%E7%8E%B0-%E5%A4%84%E7%90%86%E8%AF%81%E4%B9%A6%E9%93%BE-%E4%BD%86%E6%98%AF%E5%9C%A8%E4%B8%8D%E5%8F%97%E4%BF%A1%E4%BB%BB%E6%8F%90%E4%BE%9B%E7%A8%8B%E5%BA%8F%E4%BF%A1%E4%BB%BB%E7%9A%84%E6%A0%B9%E8%AF%81%E4%B9%A6%E4%B8%AD%E7%BB%88%E6%AD%A2/2021081601.png\" class=\"\" title=\"安装证书\">\n<ol start=\"2\">\n<li>选择存储位置“本地计算机”，点击下一步</li>\n<li>选择“将所有的证书都放入下列存储”，点击“浏览”</li>\n<li>选择“受信任的根证书颁发机构”，点击确定</li>\n</ol>\n<img src=\"/2021/08/16/%E5%AE%89%E8%A3%85Framework%E6%88%96%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7%E6%97%B6%E5%87%BA%E7%8E%B0-%E5%A4%84%E7%90%86%E8%AF%81%E4%B9%A6%E9%93%BE-%E4%BD%86%E6%98%AF%E5%9C%A8%E4%B8%8D%E5%8F%97%E4%BF%A1%E4%BB%BB%E6%8F%90%E4%BE%9B%E7%A8%8B%E5%BA%8F%E4%BF%A1%E4%BB%BB%E7%9A%84%E6%A0%B9%E8%AF%81%E4%B9%A6%E4%B8%AD%E7%BB%88%E6%AD%A2/2021081602.png\" class=\"\" title=\"安装证书\">\n<ol start=\"5\">\n<li>点击“下一步”，点击“完成”</li>\n<li>尝试重新安装程序</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>今天发现一个WPF程序在Win7上有兼容性问题，但是从log看不出有啥问题，于是搭了一个Win7的虚拟机环境，但上去装<a href=\"https://visualstudio.microsoft.com/zh-hans/downloads/#remote-tools-for-visual-studio-2019\">Visual Studio 2019远程调试工具</a>时竟然提示“处理证书链,但是在不受信任提供程序信任的根证书中终止…”，心想这不会是个流氓软件吧？但我是从MS官网下载的啊…找了goole一下，应该是<strong>vs2019调试工具中的证书在win7的证书库中不存在</strong>导致的，因为无论是vs2019还是Framework 4.5.2+，这都是Win 10的产物了，故win7上表现异常也是能理解的。</p>\n<p>于是在MS上下载这个证书安装即可：<a href=\"http://go.microsoft.com/fwlink/?linkid=747875&amp;clcid=0x409\">下载地址</a></p>\n<h3 id=\"安装步骤\"><a class=\"markdownIt-Anchor\" href=\"#安装步骤\"></a> 安装步骤：</h3>\n<ol>\n<li>单击选择证书=&gt;右键=&gt;安装证书</li>\n</ol>\n<img src=\"/2021/08/16/%E5%AE%89%E8%A3%85Framework%E6%88%96%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7%E6%97%B6%E5%87%BA%E7%8E%B0-%E5%A4%84%E7%90%86%E8%AF%81%E4%B9%A6%E9%93%BE-%E4%BD%86%E6%98%AF%E5%9C%A8%E4%B8%8D%E5%8F%97%E4%BF%A1%E4%BB%BB%E6%8F%90%E4%BE%9B%E7%A8%8B%E5%BA%8F%E4%BF%A1%E4%BB%BB%E7%9A%84%E6%A0%B9%E8%AF%81%E4%B9%A6%E4%B8%AD%E7%BB%88%E6%AD%A2/2021081601.png\" class=\"\" title=\"安装证书\">\n<ol start=\"2\">\n<li>选择存储位置“本地计算机”，点击下一步</li>\n<li>选择“将所有的证书都放入下列存储”，点击“浏览”</li>\n<li>选择“受信任的根证书颁发机构”，点击确定</li>\n</ol>\n<img src=\"/2021/08/16/%E5%AE%89%E8%A3%85Framework%E6%88%96%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7%E6%97%B6%E5%87%BA%E7%8E%B0-%E5%A4%84%E7%90%86%E8%AF%81%E4%B9%A6%E9%93%BE-%E4%BD%86%E6%98%AF%E5%9C%A8%E4%B8%8D%E5%8F%97%E4%BF%A1%E4%BB%BB%E6%8F%90%E4%BE%9B%E7%A8%8B%E5%BA%8F%E4%BF%A1%E4%BB%BB%E7%9A%84%E6%A0%B9%E8%AF%81%E4%B9%A6%E4%B8%AD%E7%BB%88%E6%AD%A2/2021081602.png\" class=\"\" title=\"安装证书\">\n<ol start=\"5\">\n<li>点击“下一步”，点击“完成”</li>\n<li>尝试重新安装程序</li>\n</ol>\n"},{"title":"十年社会人的感悟之谈","date":"2021-08-18T03:16:09.000Z","_content":"\n## 忒修斯之船\n\n也许我们可以回答[忒修斯之船](https://zh.wikipedia.org/wiki/%E5%BF%92%E4%BF%AE%E6%96%AF%E4%B9%8B%E8%88%B9)这个问题，那如果这样呢 ———— 如果人的思想每天都在变化，到这个人的思想已经跟最初的思想完全不一样的时候，那这还是之前那个人吗？如果不是，是从什么时候","source":"_drafts/十年社会人的经验之谈.md","raw":"---\ntitle: 十年社会人的感悟之谈\ndate: 2021-08-18 11:16:09\ntags: Life\n---\n\n## 忒修斯之船\n\n也许我们可以回答[忒修斯之船](https://zh.wikipedia.org/wiki/%E5%BF%92%E4%BF%AE%E6%96%AF%E4%B9%8B%E8%88%B9)这个问题，那如果这样呢 ———— 如果人的思想每天都在变化，到这个人的思想已经跟最初的思想完全不一样的时候，那这还是之前那个人吗？如果不是，是从什么时候","slug":"十年社会人的经验之谈","published":0,"updated":"2022-01-13T01:43:04.424Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckycb52ce0000isw9fq8deegu","content":"<h2 id=\"忒修斯之船\"><a class=\"markdownIt-Anchor\" href=\"#忒修斯之船\"></a> 忒修斯之船</h2>\n<p>也许我们可以回答<a href=\"https://zh.wikipedia.org/wiki/%E5%BF%92%E4%BF%AE%E6%96%AF%E4%B9%8B%E8%88%B9\">忒修斯之船</a>这个问题，那如果这样呢 ———— 如果人的思想每天都在变化，到这个人的思想已经跟最初的思想完全不一样的时候，那这还是之前那个人吗？如果不是，是从什么时候</p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"忒修斯之船\"><a class=\"markdownIt-Anchor\" href=\"#忒修斯之船\"></a> 忒修斯之船</h2>\n<p>也许我们可以回答<a href=\"https://zh.wikipedia.org/wiki/%E5%BF%92%E4%BF%AE%E6%96%AF%E4%B9%8B%E8%88%B9\">忒修斯之船</a>这个问题，那如果这样呢 ———— 如果人的思想每天都在变化，到这个人的思想已经跟最初的思想完全不一样的时候，那这还是之前那个人吗？如果不是，是从什么时候</p>\n"},{"title":"WPF中不同文字显示不同颜色(高亮)","date":"2022-01-13T02:14:49.000Z","_content":"\n本文代码来自于 [Stackoverflow](https://stackoverflow.com/questions/751741/wpf-textblock-highlight-certain-parts-based-on-search-condition/60474831#60474831) @`Blechdose`，感谢！\n但由于代码不完全满足需求，所以稍改了一下，并未完整封装。\n\n### 功能概述：\n\n实现自动替换`TextBlock`内容中的多个占位符，并将替换后的字符高亮（样式自定义）。\n\n### 用例：\n``` xml\n <!--\n    若HighlightTermBehavior处于另外的类库中，则需额外添加此定义:\n    xmlns:MyControls=\"clr-namespace:MyControls;assembly=MyControls\"\n\n    另：HighlightTermBehavior.Text和TermToBeHighlighted也可使用动态或静态资源绑定\n -->\n <TextBlock TextWrapping=\"Wrap\" FontWeight=\"Bold\" FontSize=\"14\" Padding=\"10\" TextAlignment=\"Center\"\n            MyControls:HighlightTermBehavior.TermToBeHighlighted=\"PS|Options\"\n            MyControls:HighlightTermBehavior.Text=\"Press {0} and {1}\">\n </TextBlock>\n ```\n### 效果：\n\n{% asset_img 20220113_01.png 效果图 %}\n\n### 源码(`HighlightTermBehavior`)：\n``` csharp\nnamespace MyControls\n{\n    public static class HighlightTermBehavior\n    {\n        public static readonly DependencyProperty TextProperty = DependencyProperty.RegisterAttached(\n            \"Text\",\n            typeof(string),\n            typeof(HighlightTermBehavior),\n            new FrameworkPropertyMetadata(\"\", OnTextChanged));\n\n        public static string GetText(FrameworkElement frameworkElement) => (string)frameworkElement.GetValue(TextProperty);\n        public static void SetText(FrameworkElement frameworkElement, string value) => frameworkElement.SetValue(TextProperty, value);\n\n\n        public static readonly DependencyProperty TermToBeHighlightedProperty = DependencyProperty.RegisterAttached(\n            \"TermToBeHighlighted\",\n            typeof(string),\n            typeof(HighlightTermBehavior),\n            new FrameworkPropertyMetadata(\"\", OnTextChanged));\n\n        public static string GetTermToBeHighlighted(FrameworkElement frameworkElement)\n        {\n            return (string)frameworkElement.GetValue(TermToBeHighlightedProperty);\n        }\n\n        public static void SetTermToBeHighlighted(FrameworkElement frameworkElement, string value)\n        {\n            frameworkElement.SetValue(TermToBeHighlightedProperty, value);\n        }\n\n\n        private static void OnTextChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)\n        {\n            if (d is TextBlock textBlock)\n                SetTextBlockTextAndHighlightTerm(textBlock, GetText(textBlock), GetTermToBeHighlighted(textBlock));\n        }\n\n        private static void SetTextBlockTextAndHighlightTerm(TextBlock textBlock, string text, string termToBeHighlighted)\n        {\n            textBlock.Text = string.Empty;\n\n            if (string.IsNullOrEmpty(text))\n                return;\n            //此处使用“|”将需要高亮的字符串分割成参数数组，然后使用string.Format进行格式化，可自行调整\n            text = string.Format(text, termToBeHighlighted.Split('|'));\n\n            var textParts = SplitTextIntoTermAndNotTermParts(text, termToBeHighlighted);\n\n            foreach (var textPart in textParts)\n                AddPartToTextBlockAndHighlightIfNecessary(textBlock, termToBeHighlighted, textPart);\n        }\n\n        private static void AddPartToTextBlockAndHighlightIfNecessary(TextBlock textBlock, string termToBeHighlighted, string textPart)\n        {\n            if (termToBeHighlighted.Contains(textPart))\n                AddHighlightedPartToTextBlock(textBlock, textPart);\n            else\n                AddPartToTextBlock(textBlock, textPart);\n        }\n\n        private static void AddPartToTextBlock(TextBlock textBlock, string part)\n        {\n            //此处样式为硬编码，有待优化🤣\n            textBlock.Inlines.Add(new Run { Text = part, FontWeight = FontWeights.Bold, Foreground = new SolidColorBrush(Color.FromRgb(0, 0, 0)) });\n        }\n\n        private static void AddHighlightedPartToTextBlock(TextBlock textBlock, string part)\n        {\n            //此处样式为硬编码，有待优化🤣\n            textBlock.Inlines.Add(new Run { Text = part, FontWeight = FontWeights.Bold, Foreground = new SolidColorBrush(Color.FromRgb(0xFF, 0, 0)) });\n        }\n\n\n        public static List<string> SplitTextIntoTermAndNotTermParts(string text, string term)\n        {\n            if (string.IsNullOrEmpty(text))\n                return new List<string>() { string.Empty };\n\n            return Regex.Split(text, $@\"({term})\")\n                        .Where(p => p != string.Empty)\n                        .ToList();\n        }\n    }\n}\n```","source":"_posts/WPF中不同文字显示不同颜色-高亮.md","raw":"---\ntitle: WPF中不同文字显示不同颜色(高亮)\ndate: 2022-01-13 10:14:49\ntags: [WPF]\n---\n\n本文代码来自于 [Stackoverflow](https://stackoverflow.com/questions/751741/wpf-textblock-highlight-certain-parts-based-on-search-condition/60474831#60474831) @`Blechdose`，感谢！\n但由于代码不完全满足需求，所以稍改了一下，并未完整封装。\n\n### 功能概述：\n\n实现自动替换`TextBlock`内容中的多个占位符，并将替换后的字符高亮（样式自定义）。\n\n### 用例：\n``` xml\n <!--\n    若HighlightTermBehavior处于另外的类库中，则需额外添加此定义:\n    xmlns:MyControls=\"clr-namespace:MyControls;assembly=MyControls\"\n\n    另：HighlightTermBehavior.Text和TermToBeHighlighted也可使用动态或静态资源绑定\n -->\n <TextBlock TextWrapping=\"Wrap\" FontWeight=\"Bold\" FontSize=\"14\" Padding=\"10\" TextAlignment=\"Center\"\n            MyControls:HighlightTermBehavior.TermToBeHighlighted=\"PS|Options\"\n            MyControls:HighlightTermBehavior.Text=\"Press {0} and {1}\">\n </TextBlock>\n ```\n### 效果：\n\n{% asset_img 20220113_01.png 效果图 %}\n\n### 源码(`HighlightTermBehavior`)：\n``` csharp\nnamespace MyControls\n{\n    public static class HighlightTermBehavior\n    {\n        public static readonly DependencyProperty TextProperty = DependencyProperty.RegisterAttached(\n            \"Text\",\n            typeof(string),\n            typeof(HighlightTermBehavior),\n            new FrameworkPropertyMetadata(\"\", OnTextChanged));\n\n        public static string GetText(FrameworkElement frameworkElement) => (string)frameworkElement.GetValue(TextProperty);\n        public static void SetText(FrameworkElement frameworkElement, string value) => frameworkElement.SetValue(TextProperty, value);\n\n\n        public static readonly DependencyProperty TermToBeHighlightedProperty = DependencyProperty.RegisterAttached(\n            \"TermToBeHighlighted\",\n            typeof(string),\n            typeof(HighlightTermBehavior),\n            new FrameworkPropertyMetadata(\"\", OnTextChanged));\n\n        public static string GetTermToBeHighlighted(FrameworkElement frameworkElement)\n        {\n            return (string)frameworkElement.GetValue(TermToBeHighlightedProperty);\n        }\n\n        public static void SetTermToBeHighlighted(FrameworkElement frameworkElement, string value)\n        {\n            frameworkElement.SetValue(TermToBeHighlightedProperty, value);\n        }\n\n\n        private static void OnTextChanged(DependencyObject d, DependencyPropertyChangedEventArgs e)\n        {\n            if (d is TextBlock textBlock)\n                SetTextBlockTextAndHighlightTerm(textBlock, GetText(textBlock), GetTermToBeHighlighted(textBlock));\n        }\n\n        private static void SetTextBlockTextAndHighlightTerm(TextBlock textBlock, string text, string termToBeHighlighted)\n        {\n            textBlock.Text = string.Empty;\n\n            if (string.IsNullOrEmpty(text))\n                return;\n            //此处使用“|”将需要高亮的字符串分割成参数数组，然后使用string.Format进行格式化，可自行调整\n            text = string.Format(text, termToBeHighlighted.Split('|'));\n\n            var textParts = SplitTextIntoTermAndNotTermParts(text, termToBeHighlighted);\n\n            foreach (var textPart in textParts)\n                AddPartToTextBlockAndHighlightIfNecessary(textBlock, termToBeHighlighted, textPart);\n        }\n\n        private static void AddPartToTextBlockAndHighlightIfNecessary(TextBlock textBlock, string termToBeHighlighted, string textPart)\n        {\n            if (termToBeHighlighted.Contains(textPart))\n                AddHighlightedPartToTextBlock(textBlock, textPart);\n            else\n                AddPartToTextBlock(textBlock, textPart);\n        }\n\n        private static void AddPartToTextBlock(TextBlock textBlock, string part)\n        {\n            //此处样式为硬编码，有待优化🤣\n            textBlock.Inlines.Add(new Run { Text = part, FontWeight = FontWeights.Bold, Foreground = new SolidColorBrush(Color.FromRgb(0, 0, 0)) });\n        }\n\n        private static void AddHighlightedPartToTextBlock(TextBlock textBlock, string part)\n        {\n            //此处样式为硬编码，有待优化🤣\n            textBlock.Inlines.Add(new Run { Text = part, FontWeight = FontWeights.Bold, Foreground = new SolidColorBrush(Color.FromRgb(0xFF, 0, 0)) });\n        }\n\n\n        public static List<string> SplitTextIntoTermAndNotTermParts(string text, string term)\n        {\n            if (string.IsNullOrEmpty(text))\n                return new List<string>() { string.Empty };\n\n            return Regex.Split(text, $@\"({term})\")\n                        .Where(p => p != string.Empty)\n                        .ToList();\n        }\n    }\n}\n```","slug":"WPF中不同文字显示不同颜色-高亮","published":1,"updated":"2022-01-13T02:24:08.521Z","_id":"ckycburuo0000vkw9b0ly8rhr","comments":1,"layout":"post","photos":[],"link":"","content":"<p>本文代码来自于 <a href=\"https://stackoverflow.com/questions/751741/wpf-textblock-highlight-certain-parts-based-on-search-condition/60474831#60474831\">Stackoverflow</a> @<code>Blechdose</code>，感谢！<br />\n但由于代码不完全满足需求，所以稍改了一下，并未完整封装。</p>\n<h3 id=\"功能概述\"><a class=\"markdownIt-Anchor\" href=\"#功能概述\"></a> 功能概述：</h3>\n<p>实现自动替换<code>TextBlock</code>内容中的多个占位符，并将替换后的字符高亮（样式自定义）。</p>\n<h3 id=\"用例\"><a class=\"markdownIt-Anchor\" href=\"#用例\"></a> 用例：</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">   若HighlightTermBehavior处于另外的类库中，则需额外添加此定义:</span></span><br><span class=\"line\"><span class=\"comment\">   xmlns:MyControls=&quot;clr-namespace:MyControls;assembly=MyControls&quot;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">   另：HighlightTermBehavior.Text和TermToBeHighlighted也可使用动态或静态资源绑定</span></span><br><span class=\"line\"><span class=\"comment\">--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">TextWrapping</span>=<span class=\"string\">&quot;Wrap&quot;</span> <span class=\"attr\">FontWeight</span>=<span class=\"string\">&quot;Bold&quot;</span> <span class=\"attr\">FontSize</span>=<span class=\"string\">&quot;14&quot;</span> <span class=\"attr\">Padding</span>=<span class=\"string\">&quot;10&quot;</span> <span class=\"attr\">TextAlignment</span>=<span class=\"string\">&quot;Center&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">           <span class=\"attr\">MyControls:HighlightTermBehavior.TermToBeHighlighted</span>=<span class=\"string\">&quot;PS|Options&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">           <span class=\"attr\">MyControls:HighlightTermBehavior.Text</span>=<span class=\"string\">&quot;Press &#123;0&#125; and &#123;1&#125;&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">TextBlock</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"效果\"><a class=\"markdownIt-Anchor\" href=\"#效果\"></a> 效果：</h3>\n<img src=\"/2022/01/13/WPF%E4%B8%AD%E4%B8%8D%E5%90%8C%E6%96%87%E5%AD%97%E6%98%BE%E7%A4%BA%E4%B8%8D%E5%90%8C%E9%A2%9C%E8%89%B2-%E9%AB%98%E4%BA%AE/20220113_01.png\" class=\"\" title=\"效果图\">\n<h3 id=\"源码highlighttermbehavior\"><a class=\"markdownIt-Anchor\" href=\"#源码highlighttermbehavior\"></a> 源码(<code>HighlightTermBehavior</code>)：</h3>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">MyControls</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title\">HighlightTermBehavior</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> DependencyProperty TextProperty = DependencyProperty.RegisterAttached(</span><br><span class=\"line\">            <span class=\"string\">&quot;Text&quot;</span>,</span><br><span class=\"line\">            <span class=\"keyword\">typeof</span>(<span class=\"built_in\">string</span>),</span><br><span class=\"line\">            <span class=\"keyword\">typeof</span>(HighlightTermBehavior),</span><br><span class=\"line\">            <span class=\"keyword\">new</span> FrameworkPropertyMetadata(<span class=\"string\">&quot;&quot;</span>, OnTextChanged));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">GetText</span>(<span class=\"params\">FrameworkElement frameworkElement</span>)</span> =&gt; (<span class=\"built_in\">string</span>)frameworkElement.GetValue(TextProperty);</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">SetText</span>(<span class=\"params\">FrameworkElement frameworkElement, <span class=\"built_in\">string</span> <span class=\"keyword\">value</span></span>)</span> =&gt; frameworkElement.SetValue(TextProperty, <span class=\"keyword\">value</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> DependencyProperty TermToBeHighlightedProperty = DependencyProperty.RegisterAttached(</span><br><span class=\"line\">            <span class=\"string\">&quot;TermToBeHighlighted&quot;</span>,</span><br><span class=\"line\">            <span class=\"keyword\">typeof</span>(<span class=\"built_in\">string</span>),</span><br><span class=\"line\">            <span class=\"keyword\">typeof</span>(HighlightTermBehavior),</span><br><span class=\"line\">            <span class=\"keyword\">new</span> FrameworkPropertyMetadata(<span class=\"string\">&quot;&quot;</span>, OnTextChanged));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">GetTermToBeHighlighted</span>(<span class=\"params\">FrameworkElement frameworkElement</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> (<span class=\"built_in\">string</span>)frameworkElement.GetValue(TermToBeHighlightedProperty);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">SetTermToBeHighlighted</span>(<span class=\"params\">FrameworkElement frameworkElement, <span class=\"built_in\">string</span> <span class=\"keyword\">value</span></span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            frameworkElement.SetValue(TermToBeHighlightedProperty, <span class=\"keyword\">value</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">OnTextChanged</span>(<span class=\"params\">DependencyObject d, DependencyPropertyChangedEventArgs e</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (d <span class=\"keyword\">is</span> TextBlock textBlock)</span><br><span class=\"line\">                SetTextBlockTextAndHighlightTerm(textBlock, GetText(textBlock), GetTermToBeHighlighted(textBlock));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">SetTextBlockTextAndHighlightTerm</span>(<span class=\"params\">TextBlock textBlock, <span class=\"built_in\">string</span> text, <span class=\"built_in\">string</span> termToBeHighlighted</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            textBlock.Text = <span class=\"built_in\">string</span>.Empty;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"built_in\">string</span>.IsNullOrEmpty(text))</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            <span class=\"comment\">//此处使用“|”将需要高亮的字符串分割成参数数组，然后使用string.Format进行格式化，可自行调整</span></span><br><span class=\"line\">            text = <span class=\"built_in\">string</span>.Format(text, termToBeHighlighted.Split(<span class=\"string\">&#x27;|&#x27;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> textParts = SplitTextIntoTermAndNotTermParts(text, termToBeHighlighted);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> textPart <span class=\"keyword\">in</span> textParts)</span><br><span class=\"line\">                AddPartToTextBlockAndHighlightIfNecessary(textBlock, termToBeHighlighted, textPart);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">AddPartToTextBlockAndHighlightIfNecessary</span>(<span class=\"params\">TextBlock textBlock, <span class=\"built_in\">string</span> termToBeHighlighted, <span class=\"built_in\">string</span> textPart</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (termToBeHighlighted.Contains(textPart))</span><br><span class=\"line\">                AddHighlightedPartToTextBlock(textBlock, textPart);</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                AddPartToTextBlock(textBlock, textPart);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">AddPartToTextBlock</span>(<span class=\"params\">TextBlock textBlock, <span class=\"built_in\">string</span> part</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//此处样式为硬编码，有待优化🤣</span></span><br><span class=\"line\">            textBlock.Inlines.Add(<span class=\"keyword\">new</span> Run &#123; Text = part, FontWeight = FontWeights.Bold, Foreground = <span class=\"keyword\">new</span> SolidColorBrush(Color.FromRgb(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>)) &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">AddHighlightedPartToTextBlock</span>(<span class=\"params\">TextBlock textBlock, <span class=\"built_in\">string</span> part</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//此处样式为硬编码，有待优化🤣</span></span><br><span class=\"line\">            textBlock.Inlines.Add(<span class=\"keyword\">new</span> Run &#123; Text = part, FontWeight = FontWeights.Bold, Foreground = <span class=\"keyword\">new</span> SolidColorBrush(Color.FromRgb(<span class=\"number\">0xFF</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>)) &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> List&lt;<span class=\"built_in\">string</span>&gt; <span class=\"title\">SplitTextIntoTermAndNotTermParts</span>(<span class=\"params\"><span class=\"built_in\">string</span> text, <span class=\"built_in\">string</span> term</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"built_in\">string</span>.IsNullOrEmpty(text))</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> List&lt;<span class=\"built_in\">string</span>&gt;() &#123; <span class=\"built_in\">string</span>.Empty &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> Regex.Split(text, <span class=\"string\">$@&quot;(<span class=\"subst\">&#123;term&#125;</span>)&quot;</span>)</span><br><span class=\"line\">                        .Where(p =&gt; p != <span class=\"built_in\">string</span>.Empty)</span><br><span class=\"line\">                        .ToList();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"<p>本文代码来自于 <a href=\"https://stackoverflow.com/questions/751741/wpf-textblock-highlight-certain-parts-based-on-search-condition/60474831#60474831\">Stackoverflow</a> @<code>Blechdose</code>，感谢！<br />\n但由于代码不完全满足需求，所以稍改了一下，并未完整封装。</p>\n<h3 id=\"功能概述\"><a class=\"markdownIt-Anchor\" href=\"#功能概述\"></a> 功能概述：</h3>\n<p>实现自动替换<code>TextBlock</code>内容中的多个占位符，并将替换后的字符高亮（样式自定义）。</p>\n<h3 id=\"用例\"><a class=\"markdownIt-Anchor\" href=\"#用例\"></a> 用例：</h3>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!--</span></span><br><span class=\"line\"><span class=\"comment\">   若HighlightTermBehavior处于另外的类库中，则需额外添加此定义:</span></span><br><span class=\"line\"><span class=\"comment\">   xmlns:MyControls=&quot;clr-namespace:MyControls;assembly=MyControls&quot;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">   另：HighlightTermBehavior.Text和TermToBeHighlighted也可使用动态或静态资源绑定</span></span><br><span class=\"line\"><span class=\"comment\">--&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">TextBlock</span> <span class=\"attr\">TextWrapping</span>=<span class=\"string\">&quot;Wrap&quot;</span> <span class=\"attr\">FontWeight</span>=<span class=\"string\">&quot;Bold&quot;</span> <span class=\"attr\">FontSize</span>=<span class=\"string\">&quot;14&quot;</span> <span class=\"attr\">Padding</span>=<span class=\"string\">&quot;10&quot;</span> <span class=\"attr\">TextAlignment</span>=<span class=\"string\">&quot;Center&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">           <span class=\"attr\">MyControls:HighlightTermBehavior.TermToBeHighlighted</span>=<span class=\"string\">&quot;PS|Options&quot;</span></span></span><br><span class=\"line\"><span class=\"tag\">           <span class=\"attr\">MyControls:HighlightTermBehavior.Text</span>=<span class=\"string\">&quot;Press &#123;0&#125; and &#123;1&#125;&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">TextBlock</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"效果\"><a class=\"markdownIt-Anchor\" href=\"#效果\"></a> 效果：</h3>\n<img src=\"/2022/01/13/WPF%E4%B8%AD%E4%B8%8D%E5%90%8C%E6%96%87%E5%AD%97%E6%98%BE%E7%A4%BA%E4%B8%8D%E5%90%8C%E9%A2%9C%E8%89%B2-%E9%AB%98%E4%BA%AE/20220113_01.png\" class=\"\" title=\"效果图\">\n<h3 id=\"源码highlighttermbehavior\"><a class=\"markdownIt-Anchor\" href=\"#源码highlighttermbehavior\"></a> 源码(<code>HighlightTermBehavior</code>)：</h3>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">MyControls</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title\">HighlightTermBehavior</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> DependencyProperty TextProperty = DependencyProperty.RegisterAttached(</span><br><span class=\"line\">            <span class=\"string\">&quot;Text&quot;</span>,</span><br><span class=\"line\">            <span class=\"keyword\">typeof</span>(<span class=\"built_in\">string</span>),</span><br><span class=\"line\">            <span class=\"keyword\">typeof</span>(HighlightTermBehavior),</span><br><span class=\"line\">            <span class=\"keyword\">new</span> FrameworkPropertyMetadata(<span class=\"string\">&quot;&quot;</span>, OnTextChanged));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">GetText</span>(<span class=\"params\">FrameworkElement frameworkElement</span>)</span> =&gt; (<span class=\"built_in\">string</span>)frameworkElement.GetValue(TextProperty);</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">SetText</span>(<span class=\"params\">FrameworkElement frameworkElement, <span class=\"built_in\">string</span> <span class=\"keyword\">value</span></span>)</span> =&gt; frameworkElement.SetValue(TextProperty, <span class=\"keyword\">value</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">readonly</span> DependencyProperty TermToBeHighlightedProperty = DependencyProperty.RegisterAttached(</span><br><span class=\"line\">            <span class=\"string\">&quot;TermToBeHighlighted&quot;</span>,</span><br><span class=\"line\">            <span class=\"keyword\">typeof</span>(<span class=\"built_in\">string</span>),</span><br><span class=\"line\">            <span class=\"keyword\">typeof</span>(HighlightTermBehavior),</span><br><span class=\"line\">            <span class=\"keyword\">new</span> FrameworkPropertyMetadata(<span class=\"string\">&quot;&quot;</span>, OnTextChanged));</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"built_in\">string</span> <span class=\"title\">GetTermToBeHighlighted</span>(<span class=\"params\">FrameworkElement frameworkElement</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> (<span class=\"built_in\">string</span>)frameworkElement.GetValue(TermToBeHighlightedProperty);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">SetTermToBeHighlighted</span>(<span class=\"params\">FrameworkElement frameworkElement, <span class=\"built_in\">string</span> <span class=\"keyword\">value</span></span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            frameworkElement.SetValue(TermToBeHighlightedProperty, <span class=\"keyword\">value</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">OnTextChanged</span>(<span class=\"params\">DependencyObject d, DependencyPropertyChangedEventArgs e</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (d <span class=\"keyword\">is</span> TextBlock textBlock)</span><br><span class=\"line\">                SetTextBlockTextAndHighlightTerm(textBlock, GetText(textBlock), GetTermToBeHighlighted(textBlock));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">SetTextBlockTextAndHighlightTerm</span>(<span class=\"params\">TextBlock textBlock, <span class=\"built_in\">string</span> text, <span class=\"built_in\">string</span> termToBeHighlighted</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            textBlock.Text = <span class=\"built_in\">string</span>.Empty;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"built_in\">string</span>.IsNullOrEmpty(text))</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            <span class=\"comment\">//此处使用“|”将需要高亮的字符串分割成参数数组，然后使用string.Format进行格式化，可自行调整</span></span><br><span class=\"line\">            text = <span class=\"built_in\">string</span>.Format(text, termToBeHighlighted.Split(<span class=\"string\">&#x27;|&#x27;</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">var</span> textParts = SplitTextIntoTermAndNotTermParts(text, termToBeHighlighted);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">foreach</span> (<span class=\"keyword\">var</span> textPart <span class=\"keyword\">in</span> textParts)</span><br><span class=\"line\">                AddPartToTextBlockAndHighlightIfNecessary(textBlock, termToBeHighlighted, textPart);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">AddPartToTextBlockAndHighlightIfNecessary</span>(<span class=\"params\">TextBlock textBlock, <span class=\"built_in\">string</span> termToBeHighlighted, <span class=\"built_in\">string</span> textPart</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (termToBeHighlighted.Contains(textPart))</span><br><span class=\"line\">                AddHighlightedPartToTextBlock(textBlock, textPart);</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                AddPartToTextBlock(textBlock, textPart);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">AddPartToTextBlock</span>(<span class=\"params\">TextBlock textBlock, <span class=\"built_in\">string</span> part</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//此处样式为硬编码，有待优化🤣</span></span><br><span class=\"line\">            textBlock.Inlines.Add(<span class=\"keyword\">new</span> Run &#123; Text = part, FontWeight = FontWeights.Bold, Foreground = <span class=\"keyword\">new</span> SolidColorBrush(Color.FromRgb(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>)) &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">AddHighlightedPartToTextBlock</span>(<span class=\"params\">TextBlock textBlock, <span class=\"built_in\">string</span> part</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"comment\">//此处样式为硬编码，有待优化🤣</span></span><br><span class=\"line\">            textBlock.Inlines.Add(<span class=\"keyword\">new</span> Run &#123; Text = part, FontWeight = FontWeights.Bold, Foreground = <span class=\"keyword\">new</span> SolidColorBrush(Color.FromRgb(<span class=\"number\">0xFF</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>)) &#125;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> List&lt;<span class=\"built_in\">string</span>&gt; <span class=\"title\">SplitTextIntoTermAndNotTermParts</span>(<span class=\"params\"><span class=\"built_in\">string</span> text, <span class=\"built_in\">string</span> term</span>)</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"built_in\">string</span>.IsNullOrEmpty(text))</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> List&lt;<span class=\"built_in\">string</span>&gt;() &#123; <span class=\"built_in\">string</span>.Empty &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">return</span> Regex.Split(text, <span class=\"string\">$@&quot;(<span class=\"subst\">&#123;term&#125;</span>)&quot;</span>)</span><br><span class=\"line\">                        .Where(p =&gt; p != <span class=\"built_in\">string</span>.Empty)</span><br><span class=\"line\">                        .ToList();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"}],"PostAsset":[{"_id":"source/_posts/WPF中不同文字显示不同颜色-高亮/20220113_01.png","slug":"20220113_01.png","post":"ckycburuo0000vkw9b0ly8rhr","modified":0,"renderable":0},{"_id":"source/_posts/安装Framework或远程调试工具时出现-处理证书链-但是在不受信任提供程序信任的根证书中终止/2021081602.png","slug":"2021081602.png","post":"ckycb4rkm0002kww95rfb7d49","modified":1,"renderable":0},{"_id":"source/_posts/安装Framework或远程调试工具时出现-处理证书链-但是在不受信任提供程序信任的根证书中终止/2021081601.png","slug":"2021081601.png","post":"ckycb4rkm0002kww95rfb7d49","modified":1,"renderable":0}],"PostCategory":[],"PostTag":[{"post_id":"ckscwfew30000vku2hgbz12br","tag_id":"ckscwfew70001vku2667u5exc","_id":"ckscwfew90002vku2fznw4c8b"},{"post_id":"ckycb4rkm0002kww95rfb7d49","tag_id":"ckycb4rkn0003kww98etkhduk","_id":"ckycb4rko0005kww93puy3n55"},{"post_id":"ckycb52ce0000isw9fq8deegu","tag_id":"ckycb4rkl0001kww9gjr5hlq2","_id":"ckycb52ci0001isw913gm6w2o"},{"post_id":"ckycburuo0000vkw9b0ly8rhr","tag_id":"ckycburus0001vkw9fi7la495","_id":"ckycburut0003vkw9ftaxdhov"}],"Tag":[{"name":"杂谈","_id":"ckscwfew70001vku2667u5exc"},{"name":"Life","_id":"ckycb4rkl0001kww9gjr5hlq2"},{"name":".NET","_id":"ckycb4rkn0003kww98etkhduk"},{"name":"WPF","_id":"ckycburus0001vkw9fi7la495"},{"name":"TextBlock","_id":"ckycburut0002vkw9fm6c13ab"}]}}